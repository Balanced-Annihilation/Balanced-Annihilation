#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  head, torso, hips, mpack, rgunflare, lgunflare, eyeflare, rmispoint,
       lmispoint, rleg, rthigh, lthigh, lleg, ltoes, lheel, rtoes,
       rheel, luparm, ruparm, rarm, larm, eyegun, rmissle2, lmissle2;

static-var  gun_1, gun_3, bMoving, bAiming, Static_Var_5,
            restore_delay;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_AIM_3			8


walk()
{
	if( bMoving )
	{
		move hips to y-axis [2.050000] now;
		move hips to y-axis [1.800000] speed [1.179242];
		move rleg to y-axis [-2.000000] now;
		move rleg to y-axis [-1.600000] speed [1.886798];
		move mpack to y-axis [-0.600000] now;
		move mpack to y-axis [-0.250000] speed [1.650946];
		move rgunflare to y-axis [0.000000] now;
		move rgunflare to z-axis [0.000000] now;
		move lgunflare to y-axis [0.000000] now;
		move lgunflare to z-axis [0.000000] now;
		turn hips to x-axis <7.384615> now;
		turn hips to x-axis <5.274725> speed <9.950549>;
		turn torso to y-axis <-4.923077> now;
		turn torso to y-axis <-1.406593> speed <16.582418>;
		turn rthigh to x-axis <-16.175824> now;
		turn rthigh to x-axis <-16.346154> speed <0.824176>;
		turn lthigh to x-axis <-53.093407> now;
		turn lthigh to x-axis <-58.901099> speed <27.368132>;
		turn head to x-axis <0.000000> now;
		turn head to x-axis <-7.736264> speed <36.489011>;
		turn lleg to x-axis <70.681319> now;
		turn lleg to x-axis <66.280220> speed <20.730769>;
		turn ltoes to x-axis <18.285714> now;
		turn ltoes to x-axis <18.417582> speed <0.631868>;
		turn lheel to x-axis <-23.208791> now;
		turn lheel to x-axis <-33.582418> speed <48.928571>;
		turn rleg to x-axis <18.637363> now;
		turn rleg to x-axis <25.318681> speed <31.510989>;
		turn rtoes to x-axis <-13.010989> now;
		turn rtoes to x-axis <-15.642857> speed <12.439560>;
		turn rheel to x-axis <-5.274725> now;
		turn rheel to x-axis <-4.923077> speed <1.653846>;
		turn luparm to x-axis <-0.747253> now;
		turn luparm to x-axis <6.703297> speed <35.164835>;
		turn ruparm to x-axis <-11.956044> now;
		turn ruparm to x-axis <-20.038462> speed <38.148352>;
		turn rarm to x-axis <-15.472527> now;
		turn rarm to x-axis <-16.527473> speed <4.972527>;
		turn larm to x-axis <-13.714286> now;
		turn larm to x-axis <-22.351648> speed <40.747253>;
		sleep 212;
	}
	if( bMoving )
	{
		move hips to y-axis [1.900000] speed [0.438593];
		move rleg to y-axis [-1.500000] speed [0.438593];
		move mpack to y-axis [0.000000] speed [1.096490];
		turn hips to x-axis <3.516484> speed <7.708791>;
		turn torso to y-axis <2.109890> speed <15.423077>;
		turn rthigh to x-axis <-16.521978> speed <0.769231>;
		turn lthigh to x-axis <-64.703297> speed <25.445055>;
		turn head to x-axis <-7.032967> speed <3.082418>;
		turn lleg to x-axis <61.890110> speed <19.274725>;
		turn ltoes to x-axis <18.554945> speed <0.587912>;
		turn lheel to x-axis <-24.967033> speed <37.785714>;
		turn rleg to x-axis <33.401099> speed <35.472527>;
		turn rtoes to x-axis <-18.285714> speed <11.565934>;
		turn rheel to x-axis <-9.142857> speed <18.505495>;
		turn luparm to x-axis <19.631868> speed <56.708791>;
		turn ruparm to x-axis <-12.373626> speed <33.620879>;
		turn rarm to x-axis <-23.912088> speed <32.384615>;
		turn larm to x-axis <-41.087912> speed <82.170330>;
		sleep 228;
	}
	if( bMoving )
	{
		move hips to y-axis [1.200000] speed [3.255811];
		move rleg to y-axis [-0.700000] speed [3.720929];
		turn hips to x-axis <1.758242> speed <8.175824>;
		turn torso to y-axis <3.868132> speed <8.175824>;
		turn rthigh to x-axis <-13.708791> speed <13.082418>;
		turn lthigh to x-axis <-57.494505> speed <33.527473>;
		turn head to x-axis <0.000000> speed <32.708791>;
		turn lleg to x-axis <47.291209> speed <67.873626>;
		turn ltoes to x-axis <22.351648> speed <17.664835>;
		turn lheel to x-axis <-2.637363> speed <103.857143>;
		turn rleg to x-axis <35.868132> speed <11.445055>;
		turn rtoes to x-axis <-22.505495> speed <19.626374>;
		turn rheel to x-axis <-12.307692> speed <14.719780>;
		turn luparm to x-axis <21.626374> speed <9.258242>;
		turn ruparm to x-axis <-24.851648> speed <58.027473>;
		turn rarm to x-axis <-19.335165> speed <21.258242>;
		turn larm to x-axis <-39.417582> speed <7.747253>;
		sleep 215;
	}
	if( bMoving )
	{
		move hips to y-axis [0.750000] speed [2.393616];
		move rleg to y-axis [-0.100000] speed [3.191486];
		turn hips to x-axis <0.000000> speed <9.351648>;
		turn torso to y-axis <5.626374> speed <9.351648>;
		turn rthigh to x-axis <-10.895604> speed <14.961538>;
		turn lthigh to x-axis <-50.280220> speed <38.340659>;
		turn lleg to x-axis <32.703297> speed <77.620879>;
		turn ltoes to x-axis <26.148352> speed <20.203297>;
		turn lheel to x-axis <15.472527> speed <96.324176>;
		turn rleg to x-axis <36.923077> speed <5.609890>;
		turn rtoes to x-axis <-26.725275> speed <22.445055>;
		turn rheel to x-axis <-21.450549> speed <48.631868>;
		turn luparm to x-axis <31.521978> speed <52.648352>;
		turn ruparm to x-axis <-27.428571> speed <13.686813>;
		turn rarm to x-axis <-43.604396> speed <129.060440>;
		turn larm to x-axis <-42.813187> speed <18.049451>;
		sleep 188;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.425000] speed [6.317200];
		move lleg to y-axis [0.625000] speed [3.360211];
		move rleg to y-axis [0.350000] speed [2.419348];
		turn hips to x-axis <3.686813> speed <19.846154>;
		turn torso to y-axis <7.032967> speed <7.560440>;
		turn rthigh to x-axis <6.681319> speed <94.527473>;
		turn lthigh to x-axis <-41.318681> speed <48.208791>;
		turn lleg to x-axis <29.005495> speed <19.846154>;
		turn ltoes to x-axis <15.005495> speed <59.901099>;
		turn lheel to x-axis <8.439560> speed <37.807692>;
		turn rleg to x-axis <36.571429> speed <1.890110>;
		turn rtoes to x-axis <-10.549451> speed <86.961538>;
		turn rheel to x-axis <-32.521978> speed <59.549451>;
		turn luparm to x-axis <10.813187> speed <111.335165>;
		turn ruparm to x-axis <-17.846154> speed <51.505495>;
		turn rarm to x-axis <-6.681319> speed <198.510989>;
		turn larm to x-axis <-15.456044> speed <147.087912>;
		sleep 186;
	}
	if( bMoving )
	{
		move hips to y-axis [-1.900000] speed [13.532104];
		move lleg to y-axis [1.250000] speed [5.733942];
		move rleg to y-axis [0.000000] speed [3.211005];
		turn hips to x-axis <7.384615> speed <33.873626>;
		turn torso to y-axis <6.681319> speed <3.225275>;
		turn rthigh to x-axis <24.263736> speed <161.302198>;
		turn lthigh to x-axis <-32.351648> speed <82.263736>;
		turn head to x-axis <9.846154> speed <90.329670>;
		turn lleg to x-axis <25.318681> speed <33.873626>;
		turn ltoes to x-axis <3.862637> speed <102.219780>;
		turn lheel to x-axis <-1.758242> speed <93.554945>;
		turn rleg to x-axis <40.791209> speed <38.708791>;
		turn rtoes to x-axis <15.472527> speed <238.730769>;
		turn rheel to x-axis <-40.791209> speed <75.813187>;
		turn luparm to x-axis <-6.846154> speed <162.082418>;
		turn ruparm to x-axis <1.181319> speed <174.609890>;
		turn rarm to x-axis <-6.681319> speed <0.000000>;
		turn larm to x-axis <7.846154> speed <213.835165>;
		sleep 109;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [27.142853];
		move lleg to y-axis [-0.400000] speed [23.571423];
		move mpack to y-axis [-1.050000] speed [15.000018];
		turn torso to y-axis <4.571429> speed <30.137363>;
		turn rthigh to x-axis <-13.461538> speed <539.005495>;
		turn lthigh to x-axis <-24.439560> speed <113.027473>;
		turn head to x-axis <5.626374> speed <60.280220>;
		turn lleg to x-axis <21.626374> speed <52.747253>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-2.280220> speed <87.912088>;
		turn lheel to x-axis <2.280220> speed <57.769231>;
		turn rleg to x-axis <53.450549> speed <180.846154>;
		turn rtoes to x-axis <17.241758> speed <25.318681>;
		turn luparm to x-axis <-21.538462> speed <209.813187>;
		turn ruparm to x-axis <14.802198> speed <194.549451>;
		turn rarm to x-axis <-22.505495> speed <226.054945>;
		turn larm to x-axis <0.758242> speed <101.285714>;
		sleep 70;
	}
	if( bMoving )
	{
		move hips to y-axis [2.100000] speed [14.583331];
		move lleg to y-axis [-2.050000] speed [11.458331];
		move mpack to y-axis [-0.750000] speed [2.083344];
		turn torso to y-axis <1.758242> speed <19.532967>;
		turn rthigh to x-axis <-51.192308> speed <262.016484>;
		turn lthigh to x-axis <-16.527473> speed <54.945055>;
		turn head to x-axis <3.164835> speed <17.093407>;
		turn lleg to x-axis <17.934066> speed <25.637363>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-8.439560> speed <42.730769>;
		turn lheel to x-axis <3.159341> speed <6.104396>;
		turn rleg to x-axis <67.516484> speed <97.675824>;
		turn rtoes to x-axis <19.016484> speed <12.307692>;
		turn luparm to x-axis <-24.071429> speed <17.593407>;
		turn ruparm to x-axis <35.620879> speed <144.582418>;
		turn rarm to x-axis <-40.087912> speed <122.098901>;
		turn larm to x-axis <-14.879121> speed <108.626374>;
		sleep 144;
	}
	if( bMoving )
	{
		move hips to y-axis [1.800000] speed [1.648346];
		move lleg to y-axis [-1.425000] speed [3.434058];
		move mpack to y-axis [-0.350000] speed [2.197797];
		turn hips to x-axis <5.357143> speed <11.126374>;
		turn torso to y-axis <-1.406593> speed <17.384615>;
		turn rthigh to x-axis <-58.032967> speed <37.565934>;
		turn head to x-axis <-3.868132> speed <38.637363>;
		turn lleg to x-axis <25.527473> speed <41.736264>;
		turn ltoes to x-axis <-14.516484> speed <33.390110>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-8.791209> speed <65.692308>;
		turn rleg to x-axis <64.703297> speed <15.456044>;
		turn luparm to x-axis <-26.967033> speed <15.923077>;
		turn rarm to x-axis <-37.620879> speed <13.521978>;
		turn larm to x-axis <-22.500000> speed <41.879121>;
		sleep 182;
	}
	if( bMoving )
	{
		move hips to y-axis [1.250000] speed [2.820508];
		move lleg to y-axis [-0.800000] speed [3.205127];
		move mpack to y-axis [0.000000] speed [1.794873];
		turn hips to x-axis <3.329670> speed <10.384615>;
		turn torso to y-axis <-5.274725> speed <19.835165>;
		turn rthigh to x-axis <-64.868132> speed <35.060440>;
		turn head to x-axis <-10.901099> speed <36.065934>;
		turn lleg to x-axis <33.126374> speed <38.956044>;
		turn ltoes to x-axis <-20.593407> speed <31.164835>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-13.362637> speed <23.439560>;
		turn rleg to x-axis <60.483516> speed <21.637363>;
		turn luparm to x-axis <-32.120879> speed <26.406593>;
		turn rarm to x-axis <-42.197802> speed <23.439560>;
		turn larm to x-axis <-17.972527> speed <23.230769>;
		sleep 195;
	}
	if( bMoving )
	{
		move hips to y-axis [1.025000] speed [1.086957];
		move lleg to y-axis [-0.400000] speed [1.932367];
		turn hips to x-axis <1.664835> speed <8.049451>;
		turn torso to y-axis <-9.494505> speed <20.384615>;
		turn rthigh to x-axis <-51.774725> speed <63.258242>;
		turn lthigh to x-axis <1.049451> speed <84.934066>;
		turn head to x-axis <0.000000> speed <52.659341>;
		turn lleg to x-axis <18.318681> speed <71.521978>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-22.692308> speed <10.153846>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-22.505495> speed <44.164835>;
		turn rleg to x-axis <40.087912> speed <98.527473>;
		turn rtoes to x-axis <19.351648> speed <1.626374>;
		turn rheel to x-axis <-11.956044> speed <139.296703>;
		turn luparm to x-axis <-31.692308> speed <2.054945>;
		turn ruparm to x-axis <36.620879> speed <4.835165>;
		turn rarm to x-axis <-47.120879> speed <23.780220>;
		turn larm to x-axis <-25.615385> speed <36.934066>;
		sleep 207;
	}
	if( bMoving )
	{
		move hips to y-axis [0.800000] speed [1.190472];
		move lleg to y-axis [0.000000] speed [2.116400];
		turn hips to x-axis <0.000000> speed <8.813187>;
		turn torso to y-axis <-12.307692> speed <14.879121>;
		turn rthigh to x-axis <-38.681319> speed <69.285714>;
		turn lthigh to x-axis <18.637363> speed <93.027473>;
		turn lleg to x-axis <3.516484> speed <78.335165>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-24.796703> speed <11.120879>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-26.021978> speed <18.604396>;
		turn rleg to x-axis <19.340659> speed <109.769231>;
		turn rtoes to x-axis <19.692308> speed <1.780220>;
		turn rheel to x-axis <16.879121> speed <152.565934>;
		turn luparm to x-axis <-47.467033> speed <83.478022>;
		turn ruparm to x-axis <37.626374> speed <5.296703>;
		turn rarm to x-axis <-46.510989> speed <3.197802>;
		turn larm to x-axis <-24.263736> speed <7.175824>;
		sleep 189;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.900000] speed [13.178296];
		move rleg to y-axis [0.599994] speed [4.651154];
		turn hips to x-axis <3.516484> speed <27.258242>;
		turn torso to y-axis <-11.604396> speed <5.450549>;
		turn rthigh to x-axis <-35.164835> speed <27.258242>;
		turn lthigh to x-axis <29.538462> speed <84.500000>;
		turn lleg to x-axis <14.593407> speed <85.862637>;
		turn ltoes to x-axis <-1.170330> speed <183.142857>;
		turn lheel to x-axis <-22.675824> speed <25.895604>;
		turn rleg to x-axis <22.505495> speed <24.532967>;
		turn rtoes to x-axis <11.604396> speed <62.692308>;
		turn rheel to x-axis <11.076923> speed <44.978022>;
		turn luparm to x-axis <-32.791209> speed <113.780220>;
		turn ruparm to x-axis <25.318681> speed <95.406593>;
		turn rarm to x-axis <-13.010989> speed <259.725275>;
		turn larm to x-axis <-3.906593> speed <157.774725>;
		sleep 129;
	}
	if( bMoving )
	{
		move hips to y-axis [-1.750000] speed [8.585852];
		move rleg to y-axis [1.199994] speed [6.060596];
		turn hips to x-axis <7.032967> speed <35.516484>;
		turn torso to y-axis <-10.549451> speed <10.653846>;
		turn rthigh to x-axis <-31.648352> speed <35.516484>;
		turn lthigh to x-axis <40.439560> speed <110.109890>;
		turn head to x-axis <14.769231> speed <149.181319>;
		turn lleg to x-axis <25.670330> speed <111.884615>;
		turn ltoes to x-axis <22.450549> speed <238.637363>;
		turn lheel to x-axis <-32.703297> speed <101.230769>;
		turn rleg to x-axis <25.318681> speed <28.412088>;
		turn rtoes to x-axis <3.516484> speed <81.692308>;
		turn rheel to x-axis <5.269231> speed <58.604396>;
		turn luparm to x-axis <-12.543956> speed <204.538462>;
		turn ruparm to x-axis <13.010989> speed <124.318681>;
		turn rarm to x-axis <-0.703297> speed <124.318681>;
		turn larm to x-axis <-2.461538> speed <14.631868>;
		sleep 99;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.100000] speed [23.913037];
		move rleg to y-axis [-0.400000] speed [23.188379];
		move mpack to y-axis [-0.750000] speed [10.869604];
		turn hips to x-axis <7.384615> speed <5.093407>;
		turn torso to y-axis <-7.384615> speed <45.862637>;
		turn rthigh to x-axis <-23.912088> speed <112.115385>;
		turn lthigh to x-axis <-6.329670> speed <677.813187>;
		turn head to x-axis <5.274725> speed <137.598901>;
		turn lleg to x-axis <48.175824> speed <326.164835>;
		turn ltoes to x-axis <20.368132> speed <30.186813>;
		turn lheel to x-axis <-36.571429> speed <56.054945>;
		turn rleg to x-axis <21.098901> speed <61.153846>;
		turn rtoes to x-axis <-4.747253> speed <119.763736>;
		turn rheel to x-axis <0.000000> speed <76.445055>;
		turn luparm to x-axis <-9.686813> speed <41.390110>;
		turn ruparm to x-axis <0.527473> speed <180.917582>;
		turn rarm to x-axis <-7.032967> speed <91.730769>;
		turn larm to x-axis <-6.510989> speed <58.708791>;
		sleep 149;
	}
}

walklegs()
{
	if( bMoving )
	{
		move hips to y-axis [2.050000] now;
		move hips to y-axis [1.800000] speed [1.179242];
		move rleg to y-axis [-2.000000] now;
		move rleg to y-axis [-1.600000] speed [1.886798];
		move rgunflare to y-axis [0.000000] now;
		move rgunflare to z-axis [0.000000] now;
		move lgunflare to y-axis [0.000000] now;
		move lgunflare to z-axis [0.000000] now;
		turn hips to x-axis <7.384615> now;
		turn hips to x-axis <5.274725> speed <9.950549>;
		turn rthigh to x-axis <-16.175824> now;
		turn rthigh to x-axis <-16.346154> speed <0.824176>;
		turn lthigh to x-axis <-53.093407> now;
		turn lthigh to x-axis <-58.901099> speed <27.368132>;
		turn lleg to x-axis <70.681319> now;
		turn lleg to x-axis <66.280220> speed <20.730769>;
		turn ltoes to x-axis <18.285714> now;
		turn ltoes to x-axis <18.417582> speed <0.631868>;
		turn lheel to x-axis <-23.208791> now;
		turn lheel to x-axis <-33.582418> speed <48.928571>;
		turn rleg to x-axis <18.637363> now;
		turn rleg to x-axis <25.318681> speed <31.510989>;
		turn rtoes to x-axis <-13.010989> now;
		turn rtoes to x-axis <-15.642857> speed <12.439560>;
		turn rheel to x-axis <-5.274725> now;
		turn rheel to x-axis <-4.923077> speed <1.653846>;
		sleep 212;
	}
	if( bMoving )
	{
		move hips to y-axis [1.900000] speed [0.438593];
		move rleg to y-axis [-1.500000] speed [0.438593];
		turn hips to x-axis <3.516484> speed <7.708791>;
		turn rthigh to x-axis <-16.521978> speed <0.769231>;
		turn lthigh to x-axis <-64.703297> speed <25.445055>;
		turn lleg to x-axis <61.890110> speed <19.274725>;
		turn ltoes to x-axis <18.554945> speed <0.587912>;
		turn lheel to x-axis <-24.967033> speed <37.785714>;
		turn rleg to x-axis <33.401099> speed <35.472527>;
		turn rtoes to x-axis <-18.285714> speed <11.565934>;
		turn rheel to x-axis <-9.142857> speed <18.505495>;
		sleep 228;
	}
	if( bMoving )
	{
		move hips to y-axis [1.200000] speed [3.255811];
		move rleg to y-axis [-0.700000] speed [3.720929];
		turn hips to x-axis <1.758242> speed <8.175824>;
		turn rthigh to x-axis <-13.708791> speed <13.082418>;
		turn lthigh to x-axis <-57.494505> speed <33.527473>;
		turn lleg to x-axis <47.291209> speed <67.873626>;
		turn ltoes to x-axis <22.351648> speed <17.664835>;
		turn lheel to x-axis <-2.637363> speed <103.857143>;
		turn rleg to x-axis <35.868132> speed <11.445055>;
		turn rtoes to x-axis <-22.505495> speed <19.626374>;
		turn rheel to x-axis <-12.307692> speed <14.719780>;
		sleep 215;
	}
	if( bMoving )
	{
		move hips to y-axis [0.750000] speed [2.393616];
		move rleg to y-axis [-0.100000] speed [3.191486];
		turn hips to x-axis <0.000000> speed <9.351648>;
		turn rthigh to x-axis <-10.895604> speed <14.961538>;
		turn lthigh to x-axis <-50.280220> speed <38.340659>;
		turn lleg to x-axis <32.703297> speed <77.620879>;
		turn ltoes to x-axis <26.148352> speed <20.203297>;
		turn lheel to x-axis <15.472527> speed <96.324176>;
		turn rleg to x-axis <36.923077> speed <5.609890>;
		turn rtoes to x-axis <-26.725275> speed <22.445055>;
		turn rheel to x-axis <-21.450549> speed <48.631868>;
		sleep 188;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.425000] speed [6.317200];
		move lleg to y-axis [0.625000] speed [3.360211];
		move rleg to y-axis [0.350000] speed [2.419348];
		turn hips to x-axis <3.686813> speed <19.846154>;
		turn rthigh to x-axis <6.681319> speed <94.527473>;
		turn lthigh to x-axis <-41.318681> speed <48.208791>;
		turn lleg to x-axis <29.005495> speed <19.846154>;
		turn ltoes to x-axis <15.005495> speed <59.901099>;
		turn lheel to x-axis <8.439560> speed <37.807692>;
		turn rleg to x-axis <36.571429> speed <1.890110>;
		turn rtoes to x-axis <-10.549451> speed <86.961538>;
		turn rheel to x-axis <-32.521978> speed <59.549451>;
		sleep 186;
	}
	if( bMoving )
	{
		move hips to y-axis [-1.900000] speed [13.532104];
		move lleg to y-axis [1.250000] speed [5.733942];
		move rleg to y-axis [0.000000] speed [3.211005];
		turn hips to x-axis <7.384615> speed <33.873626>;
		turn rthigh to x-axis <24.263736> speed <161.302198>;
		turn lthigh to x-axis <-32.351648> speed <82.263736>;
		turn lleg to x-axis <25.318681> speed <33.873626>;
		turn ltoes to x-axis <3.862637> speed <102.219780>;
		turn lheel to x-axis <-1.758242> speed <93.554945>;
		turn rleg to x-axis <40.791209> speed <38.708791>;
		turn rtoes to x-axis <15.472527> speed <238.730769>;
		turn rheel to x-axis <-40.791209> speed <75.813187>;
		sleep 109;
	}
	if( bMoving )
	{
		move hips to y-axis [0.000000] speed [27.142853];
		move lleg to y-axis [-0.400000] speed [23.571423];
		turn rthigh to x-axis <-13.461538> speed <539.005495>;
		turn lthigh to x-axis <-24.439560> speed <113.027473>;
		turn lleg to x-axis <21.626374> speed <52.747253>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-2.280220> speed <87.912088>;
		turn lheel to x-axis <2.280220> speed <57.769231>;
		turn rleg to x-axis <53.450549> speed <180.846154>;
		turn rtoes to x-axis <17.241758> speed <25.318681>;
		sleep 70;
	}
	if( bMoving )
	{
		move hips to y-axis [2.100000] speed [14.583331];
		move lleg to y-axis [-2.050000] speed [11.458331];
		turn rthigh to x-axis <-51.192308> speed <262.016484>;
		turn lthigh to x-axis <-16.527473> speed <54.945055>;
		turn lleg to x-axis <17.934066> speed <25.637363>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-8.439560> speed <42.730769>;
		turn lheel to x-axis <3.159341> speed <6.104396>;
		turn rleg to x-axis <67.516484> speed <97.675824>;
		turn rtoes to x-axis <19.016484> speed <12.307692>;
		sleep 144;
	}
	if( bMoving )
	{
		move hips to y-axis [1.800000] speed [1.648346];
		move lleg to y-axis [-1.425000] speed [3.434058];
		turn hips to x-axis <5.357143> speed <11.126374>;
		turn rthigh to x-axis <-58.032967> speed <37.565934>;
		turn lleg to x-axis <25.527473> speed <41.736264>;
		turn ltoes to x-axis <-14.516484> speed <33.390110>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-8.791209> speed <65.692308>;
		turn rleg to x-axis <64.703297> speed <15.456044>;
		sleep 182;
	}
	if( bMoving )
	{
		move hips to y-axis [1.250000] speed [2.820508];
		move lleg to y-axis [-0.800000] speed [3.205127];
		turn hips to x-axis <3.329670> speed <10.384615>;
		turn rthigh to x-axis <-64.868132> speed <35.060440>;
		turn lleg to x-axis <33.126374> speed <38.956044>;
		turn ltoes to x-axis <-20.593407> speed <31.164835>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-13.362637> speed <23.439560>;
		turn rleg to x-axis <60.483516> speed <21.637363>;
		sleep 195;
	}
	if( bMoving )
	{
		move hips to y-axis [1.025000] speed [1.086957];
		move lleg to y-axis [-0.400000] speed [1.932367];
		turn hips to x-axis <1.664835> speed <8.049451>;
		turn rthigh to x-axis <-51.774725> speed <63.258242>;
		turn lthigh to x-axis <1.049451> speed <84.934066>;
		turn lleg to x-axis <18.318681> speed <71.521978>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-22.692308> speed <10.153846>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-22.505495> speed <44.164835>;
		turn rleg to x-axis <40.087912> speed <98.527473>;
		turn rtoes to x-axis <19.351648> speed <1.626374>;
		turn rheel to x-axis <-11.956044> speed <139.296703>;
		sleep 207;
	}
	if( bMoving )
	{
		move hips to y-axis [0.800000] speed [1.190472];
		move lleg to y-axis [0.000000] speed [2.116400];
		turn hips to x-axis <0.000000> speed <8.813187>;
		turn rthigh to x-axis <-38.681319> speed <69.285714>;
		turn lthigh to x-axis <18.637363> speed <93.027473>;
		turn lleg to x-axis <3.516484> speed <78.335165>;
		turn lleg to y-axis <0.000000> speed <0.000000>;
		turn ltoes to x-axis <-24.796703> speed <11.120879>;
		turn ltoes to y-axis <0.000000> speed <0.000000>;
		turn lheel to x-axis <-26.021978> speed <18.604396>;
		turn rleg to x-axis <19.340659> speed <109.769231>;
		turn rtoes to x-axis <19.692308> speed <1.780220>;
		turn rheel to x-axis <16.879121> speed <152.565934>;
		sleep 189;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.900000] speed [13.178296];
		move rleg to y-axis [0.599994] speed [4.651154];
		turn hips to x-axis <3.516484> speed <27.258242>;
		turn rthigh to x-axis <-35.164835> speed <27.258242>;
		turn lthigh to x-axis <29.538462> speed <84.500000>;
		turn lleg to x-axis <14.593407> speed <85.862637>;
		turn ltoes to x-axis <-1.170330> speed <183.142857>;
		turn lheel to x-axis <-22.675824> speed <25.895604>;
		turn rleg to x-axis <22.505495> speed <24.532967>;
		turn rtoes to x-axis <11.604396> speed <62.692308>;
		turn rheel to x-axis <11.076923> speed <44.978022>;
		sleep 129;
	}
	if( bMoving )
	{
		move hips to y-axis [-1.750000] speed [8.585852];
		move rleg to y-axis [1.199994] speed [6.060596];
		turn hips to x-axis <7.032967> speed <35.516484>;
		turn rthigh to x-axis <-31.648352> speed <35.516484>;
		turn lthigh to x-axis <40.439560> speed <110.109890>;
		turn lleg to x-axis <25.670330> speed <111.884615>;
		turn ltoes to x-axis <22.450549> speed <238.637363>;
		turn lheel to x-axis <-32.703297> speed <101.230769>;
		turn rleg to x-axis <25.318681> speed <28.412088>;
		turn rtoes to x-axis <3.516484> speed <81.692308>;
		turn rheel to x-axis <5.269231> speed <58.604396>;
		sleep 99;
	}
	if( bMoving )
	{
		move hips to y-axis [-0.100000] speed [23.913037];
		move rleg to y-axis [-0.400000] speed [23.188379];
		turn hips to x-axis <7.384615> speed <5.093407>;
		turn rthigh to x-axis <-23.912088> speed <112.115385>;
		turn lthigh to x-axis <-6.329670> speed <677.813187>;
		turn lleg to x-axis <48.175824> speed <326.164835>;
		turn ltoes to x-axis <20.368132> speed <30.186813>;
		turn lheel to x-axis <-36.571429> speed <56.054945>;
		turn rleg to x-axis <21.098901> speed <61.153846>;
		turn rtoes to x-axis <-4.747253> speed <119.763736>;
		turn rheel to x-axis <0.000000> speed <76.445055>;
		sleep 149;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_5 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_5 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_5 = 1;
			if( justmoved )
			{
				move rleg to y-axis [0.000000] speed [1.000000];
				move rleg to z-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				turn ltoes to x-axis <0.000000> speed <200.043956>;
				turn lheel to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn rleg to y-axis <0.000000> speed <200.043956>;
				turn rleg to y-axis <0.000000> speed <200.043956>;
				turn rtoes to x-axis <0.000000> speed <200.043956>;
				turn rheel to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <200.043956>;
					turn luparm to x-axis <0.000000> speed <50.010989>;
					turn ruparm to x-axis <0.000000> speed <50.010989>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide eyeflare;
	hide lgunflare;
	hide rgunflare;
	dont-cache eyegun;
	dont-shade eyegun;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_5 = 1;
	gun_1 = 0;
	gun_3 = 0;
	restore_delay = 2000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.021978>;
	turn head to y-axis <0.000000> speed <50.010989>;
	turn head to x-axis <0.000000> speed <50.010989>;
	turn luparm to z-axis <0.000000> speed <50.010989>;
	turn ruparm to z-axis <0.000000> speed <50.010989>;
	turn larm to x-axis <0.000000> speed <50.010989>;
	turn rarm to x-axis <0.000000> speed <50.010989>;
	turn luparm to x-axis <0.000000> speed <120.027473>;
	turn ruparm to x-axis <0.000000> speed <120.027473>;
	turn rmissle2 to z-axis <0.000000> speed <60.010989>;
	turn lmissle2 to z-axis <0.000000> speed <60.010989>;
	move rmissle2 to y-axis [0.000000] speed [10.000000];
	move lmissle2 to y-axis [0.000000] speed [10.000000];
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn torso around y-axis;
	wait-for-turn ruparm around z-axis;
	wait-for-turn luparm around z-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	wait-for-turn head around y-axis;
	wait-for-turn head around x-axis;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_5 )
	{
		sleep 250;
	}
	move rmissle2 to y-axis [6.000000] speed [10.000000];
	move lmissle2 to y-axis [6.000000] speed [10.000000];
	turn luparm to x-axis <0.000000> speed <120.027473>;
	turn ruparm to x-axis <0.000000> speed <120.027473>;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	turn rmissle2 to z-axis <-15.000000> speed <60.010989>;
	turn lmissle2 to z-axis <15.000000> speed <60.010989>;
	turn torso to y-axis heading speed <100.021978>;
	turn luparm to z-axis <-45.010989> speed <80.016484>;
	turn ruparm to z-axis <45.010989> speed <80.016484>;
	turn rarm to x-axis <-90.021978> speed <120.027473>;
	turn larm to x-axis <-90.021978> speed <120.027473>;
	wait-for-turn torso around y-axis;
	wait-for-turn luparm around z-axis;
	wait-for-turn ruparm around z-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	bAiming = TRUE;
	turn head to y-axis heading speed <300.071429>;
	wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	bAiming = TRUE;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 )
	{
		turn luparm to x-axis <85.016484> speed <200.043956>;
		turn larm to x-axis <-100.021978> speed <200.043956>;
		//show lgunflare;
		emit-sfx 1024 from lgunflare;
		sleep 90;
		//hide lgunflare;
		turn larm to x-axis <-86.016484> speed <100.021978>;
		turn luparm to x-axis <0.000000> speed <100.021978>;
	}
	else
	{
		turn ruparm to x-axis <85.016484> speed <200.043956>;
		turn rarm to x-axis <-100.021978> speed <200.043956>;
		//show rgunflare;
		emit-sfx 1024 from rgunflare;
		sleep 90;
		//hide rgunflare;
		turn rarm to x-axis <-86.016484> speed <100.021978>;
		turn ruparm to x-axis <0.000000> speed <100.021978>;
	}
	gun_1 = !gun_1;
}

FireSecondary()
{
	show eyeflare;
	sleep 150;
	hide eyeflare;
}

FireTertiary()
{
	gun_3 = !gun_3;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

AimFromSecondary(piecenum)
{
	piecenum = torso;
}

AimFromTertiary(piecenum)
{
	piecenum = mpack;
}

QueryPrimary(piecenum)
{
	piecenum = rgunflare + gun_1;
}

QuerySecondary(piecenum)
{
	piecenum = eyeflare;
}

QueryTertiary(piecenum)
{
	piecenum = rmispoint + gun_3;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	hide lgunflare;
	hide rgunflare;
	hide eyeflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode eyeflare type BITMAPONLY | BITMAP1;
		explode eyegun type BITMAPONLY | BITMAP2;
		explode head type BITMAPONLY | BITMAP3;
		explode hips type BITMAPONLY | BITMAP4;
		explode larm type BITMAPONLY | BITMAP5;
		explode lgunflare type BITMAPONLY | BITMAP1;
		explode lheel type BITMAPONLY | BITMAP2;
		explode lleg type BITMAPONLY | BITMAP3;
		explode lmispoint type BITMAPONLY | BITMAP4;
		explode lthigh type BITMAPONLY | BITMAP5;
		explode luparm type BITMAPONLY | BITMAP1;
		explode mpack type BITMAPONLY | BITMAP2;
		explode rarm type BITMAPONLY | BITMAP3;
		explode rgunflare type BITMAPONLY | BITMAP4;
		explode rheel type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rmispoint type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode rtoes type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode eyeflare type FALL | BITMAP1;
		explode eyegun type FALL | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | BITMAP4;
		explode larm type FALL | BITMAP5;
		explode lgunflare type FALL | BITMAP1;
		explode lheel type FALL | BITMAP2;
		explode lleg type FALL | BITMAP3;
		explode lmispoint type FALL | BITMAP4;
		explode lthigh type FALL | BITMAP5;
		explode luparm type FALL | BITMAP1;
		explode mpack type FALL | BITMAP2;
		explode rarm type FALL | BITMAP3;
		explode rgunflare type FALL | BITMAP4;
		explode rheel type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rmispoint type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode rtoes type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode eyeflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode eyegun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode head type SHATTER | BITMAP3;
		explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode mpack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rtoes type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode eyeflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode eyegun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode head type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode hips type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode larm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode mpack type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rgunflare type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rheel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rmispoint type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rtoes type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
