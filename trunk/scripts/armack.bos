#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

piece  rnanospray, lnanospray, torso, pelvis, lleg, lfoot, rleg, rfoot,
       rthigh, lthigh, guncase, nanojoint, nanoarm, lnanogun, rnanogun, ground;

static-var  bMoving, notBuilding, nanoNozzle, statechg_DesiredState,
			statechg_StateChanging, moveSpeed, currentSpeed;


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] speed [7.973154] *  currentSpeed / 100;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn torso to z-axis <8.076923> speed <53.665462> *  currentSpeed / 100;
		turn rthigh to x-axis <49.928571> speed <331.740170> *  currentSpeed / 100;
		turn lthigh to x-axis <-36.565934> speed <242.954863> *  currentSpeed / 100;
		turn lleg to x-axis <43.236264> speed <287.274506> *  currentSpeed / 100;
		turn lfoot to x-axis <-6.318681> speed <41.983182> *  currentSpeed / 100;
		turn rfoot to x-axis <-18.631868> speed <123.795633> *  currentSpeed / 100;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [0.853448] *  currentSpeed / 100;
		turn torso to z-axis <5.967033> speed <18.006820> *  currentSpeed / 100;
		turn rthigh to x-axis <31.642857> speed <156.059111> *  currentSpeed / 100;
		turn lthigh to x-axis <-29.175824> speed <63.070766> *  currentSpeed / 100;
		turn lleg to x-axis <38.675824> speed <38.920997> *  currentSpeed / 100;
		turn lfoot to x-axis <-10.181319> speed <32.965617> *  currentSpeed / 100;
		turn rleg to x-axis <-18.631868> speed <159.013356> *  currentSpeed / 100;
		turn rfoot to x-axis <10.538462> speed <248.953678> *  currentSpeed / 100;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [1.706897] *  currentSpeed / 100;
		turn torso to z-axis <4.208791> speed <15.005686> *  currentSpeed / 100;
		turn rthigh to x-axis <19.324176> speed <105.133571> *  currentSpeed / 100;
		turn lthigh to x-axis <-22.142857> speed <60.022736> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <54.020459> *  currentSpeed / 100;
		turn rleg to x-axis <-31.285714> speed <107.994031> *  currentSpeed / 100;
		turn rfoot to x-axis <30.236264> speed <168.110552> *  currentSpeed / 100;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] speed [1.192771] *  currentSpeed / 100;
		turn torso to z-axis <2.098901> speed <25.166158> *  currentSpeed / 100;
		turn rthigh to x-axis <9.137363> speed <121.505360> *  currentSpeed / 100;
		turn lthigh to x-axis <-8.769231> speed <159.516744> *  currentSpeed / 100;
		turn lleg to x-axis <34.796703> speed <29.229440> *  currentSpeed / 100;
		turn lfoot to x-axis <-24.604396> speed <172.034292> *  currentSpeed / 100;
		turn rleg to x-axis <-31.642857> speed <4.259898> *  currentSpeed / 100;
		turn rfoot to x-axis <40.076923> speed <117.376535> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] speed [0.332215] *  currentSpeed / 100;
		turn torso to z-axis <0.000000> speed <13.945718> *  currentSpeed / 100;
		turn rthigh to x-axis <-7.379121> speed <109.740397> *  currentSpeed / 100;
		turn lthigh to x-axis <-6.670330> speed <13.945718> *  currentSpeed / 100;
		turn lleg to x-axis <45.708791> speed <72.503135> *  currentSpeed / 100;
		turn lfoot to x-axis <-39.016484> speed <95.758169> *  currentSpeed / 100;
		turn rleg to x-axis <-31.285714> speed <2.372964> *  currentSpeed / 100;
		turn rfoot to x-axis <47.109890> speed <46.729110> *  currentSpeed / 100;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [1.192771] *  currentSpeed / 100;
		turn torso to z-axis <-2.098901> speed <25.035084> *  currentSpeed / 100;
		turn rthigh to x-axis <-17.219780> speed <117.376535> *  currentSpeed / 100;
		turn lthigh to x-axis <4.549451> speed <133.826303> *  currentSpeed / 100;
		turn rfoot to x-axis <57.313187> speed <121.701976> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [0.596386] *  currentSpeed / 100;
		turn torso to z-axis <-3.857143> speed <20.971802> *  currentSpeed / 100;
		turn rthigh to x-axis <-24.604396> speed <88.081564> *  currentSpeed / 100;
		turn lthigh to x-axis <12.648352> speed <96.601349> *  currentSpeed / 100;
		turn lfoot to x-axis <-42.186813> speed <37.814768> *  currentSpeed / 100;
		turn rleg to x-axis <-21.093407> speed <121.570891> *  currentSpeed / 100;
		turn rfoot to x-axis <62.230769> speed <58.655496> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [2.385542] *  currentSpeed / 100;
		turn torso to z-axis <-5.967033> speed <25.166158> *  currentSpeed / 100;
		turn rthigh to x-axis <-37.263736> speed <150.996947> *  currentSpeed / 100;
		turn lthigh to x-axis <33.043956> speed <243.272867> *  currentSpeed / 100;
		turn lleg to x-axis <33.758242> speed <142.542693> *  currentSpeed / 100;
		turn rleg to x-axis <0.697802> speed <259.919240> *  currentSpeed / 100;
		turn rfoot to x-axis <51.681319> speed <125.830789> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] speed [0.664430] *  currentSpeed / 100;
		turn torso to z-axis <-8.076923> speed <14.018732> *  currentSpeed / 100;
		turn rthigh to x-axis <-40.785714> speed <23.401062> *  currentSpeed / 100;
		turn lthigh to x-axis <47.467033> speed <95.831183> *  currentSpeed / 100;
		turn lleg to x-axis <19.324176> speed <95.904197> *  currentSpeed / 100;
		turn lfoot to x-axis <-41.137363> speed <6.972856> *  currentSpeed / 100;
		turn rleg to x-axis <36.906593> speed <240.581900> *  currentSpeed / 100;
		turn rfoot to x-axis <3.857143> speed <317.757948> *  currentSpeed / 100;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [0.853448] *  currentSpeed / 100;
		turn torso to z-axis <-5.967033> speed <18.006820> *  currentSpeed / 100;
		turn rthigh to x-axis <-29.175824> speed <99.084406> *  currentSpeed / 100;
		turn lthigh to x-axis <35.857143> speed <99.084406> *  currentSpeed / 100;
		turn lleg to x-axis <4.565934> speed <125.953962> *  currentSpeed / 100;
		turn lfoot to x-axis <-19.681319> speed <183.116238> *  currentSpeed / 100;
		turn rfoot to x-axis <-7.730769> speed <98.896835> *  currentSpeed / 100;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [1.706897] *  currentSpeed / 100;
		turn torso to z-axis <-4.208791> speed <15.005686> *  currentSpeed / 100;
		turn rthigh to x-axis <-18.631868> speed <89.987211> *  currentSpeed / 100;
		turn lthigh to x-axis <16.521978> speed <165.015632> *  currentSpeed / 100;
		turn lleg to x-axis <-15.461538> speed <170.924114> *  currentSpeed / 100;
		turn lfoot to x-axis <13.351648> speed <281.919287> *  currentSpeed / 100;
		turn rleg to x-axis <33.395604> speed <29.964475> *  currentSpeed / 100;
		turn rfoot to x-axis <-14.758242> speed <59.975847> *  currentSpeed / 100;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [0.596386] *  currentSpeed / 100;
		turn torso to z-axis <-2.098901> speed <25.166158> *  currentSpeed / 100;
		turn rthigh to x-axis <-10.538462> speed <96.535807> *  currentSpeed / 100;
		turn lthigh to x-axis <4.549451> speed <142.804840> *  currentSpeed / 100;
		turn lleg to x-axis <-23.543956> speed <96.404745> *  currentSpeed / 100;
		turn lfoot to x-axis <36.214286> speed <272.698935> *  currentSpeed / 100;
		turn rfoot to x-axis <-24.252747> speed <113.247710> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] speed [0.664430] *  currentSpeed / 100;
		turn torso to z-axis <0.000000> speed <13.945718> *  currentSpeed / 100;
		turn rthigh to x-axis <-1.395604> speed <60.747848> *  currentSpeed / 100;
		turn lthigh to x-axis <-4.917582> speed <62.901763> *  currentSpeed / 100;
		turn lleg to x-axis <-37.967033> speed <95.831183> *  currentSpeed / 100;
		turn lfoot to x-axis <66.456044> speed <200.935171> *  currentSpeed / 100;
		turn rleg to x-axis <36.906593> speed <23.328048> *  currentSpeed / 100;
		turn rfoot to x-axis <-34.456044> speed <67.793718> *  currentSpeed / 100;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [1.192771] *  currentSpeed / 100;
		turn torso to z-axis <2.098901> speed <25.035084> *  currentSpeed / 100;
		turn rthigh to x-axis <13.703297> speed <180.095325> *  currentSpeed / 100;
		turn lthigh to x-axis <-23.554945> speed <222.301077> *  currentSpeed / 100;
		turn lleg to x-axis <-14.060440> speed <285.150929> *  currentSpeed / 100;
		turn lfoot to x-axis <56.263736> speed <121.570903> *  currentSpeed / 100;
		turn rleg to x-axis <26.010989> speed <129.959614> *  currentSpeed / 100;
		turn rfoot to x-axis <-27.774725> speed <79.692841> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [0.596386] *  currentSpeed / 100;
		turn torso to z-axis <4.208791> speed <25.166158> *  currentSpeed / 100;
		turn rthigh to x-axis <22.142857> speed <100.664631> *  currentSpeed / 100;
		turn lthigh to x-axis <-29.175824> speed <67.044219> *  currentSpeed / 100;
		turn lleg to x-axis <-7.368132> speed <79.823915> *  currentSpeed / 100;
		turn lfoot to x-axis <53.087912> speed <37.880310> *  currentSpeed / 100;
		turn rleg to x-axis <17.923077> speed <96.470276> *  currentSpeed / 100;
		turn rfoot to x-axis <-21.445055> speed <75.498473> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [2.385542] *  currentSpeed / 100;
		turn torso to z-axis <5.967033> speed <20.971802> *  currentSpeed / 100;
		turn rthigh to x-axis <36.906593> speed <176.097574> *  currentSpeed / 100;
		turn lthigh to x-axis <-33.758242> speed <54.657757> *  currentSpeed / 100;
		turn lleg to x-axis <6.670330> speed <167.446715> *  currentSpeed / 100;
		turn lfoot to x-axis <42.895604> speed <121.570903> *  currentSpeed / 100;
		turn rleg to x-axis <8.076923> speed <117.442078> *  currentSpeed / 100;
		turn rfoot to x-axis <-13.708791> speed <92.275920> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] speed [0.664430] *  currentSpeed / 100;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn rthigh to x-axis <49.928571> speed <86.521867> *  currentSpeed / 100;
		turn lthigh to x-axis <-36.565934> speed <18.655135> *  currentSpeed / 100;
		turn lleg to x-axis <43.236264> speed <242.954863> *  currentSpeed / 100;
		turn lfoot to x-axis <-6.318681> speed <326.994243> *  currentSpeed / 100;
		turn rfoot to x-axis <-18.631868> speed <32.710377> *  currentSpeed / 100;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [0.853448] *  currentSpeed / 100;
		turn rthigh to x-axis <31.642857> speed <156.059111> *  currentSpeed / 100;
		turn lthigh to x-axis <-29.175824> speed <63.070766> *  currentSpeed / 100;
		turn lleg to x-axis <38.675824> speed <38.920997> *  currentSpeed / 100;
		turn lfoot to x-axis <-10.181319> speed <32.965617> *  currentSpeed / 100;
		turn rleg to x-axis <-18.631868> speed <227.945716> *  currentSpeed / 100;
		turn rfoot to x-axis <10.538462> speed <248.953678> *  currentSpeed / 100;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [1.706897] *  currentSpeed / 100;
		turn rthigh to x-axis <19.324176> speed <105.133571> *  currentSpeed / 100;
		turn lthigh to x-axis <-22.142857> speed <60.022736> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <54.020459> *  currentSpeed / 100;
		turn rleg to x-axis <-31.285714> speed <107.994031> *  currentSpeed / 100;
		turn rfoot to x-axis <30.236264> speed <168.110552> *  currentSpeed / 100;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] speed [1.192771] *  currentSpeed / 100;
		turn rthigh to x-axis <9.137363> speed <121.505360> *  currentSpeed / 100;
		turn lthigh to x-axis <-8.769231> speed <159.516744> *  currentSpeed / 100;
		turn lleg to x-axis <34.796703> speed <29.229440> *  currentSpeed / 100;
		turn lfoot to x-axis <-24.604396> speed <172.034292> *  currentSpeed / 100;
		turn rleg to x-axis <-31.642857> speed <4.259898> *  currentSpeed / 100;
		turn rfoot to x-axis <40.076923> speed <117.376535> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] speed [0.332215] *  currentSpeed / 100;
		turn rthigh to x-axis <-7.379121> speed <109.740397> *  currentSpeed / 100;
		turn lthigh to x-axis <-6.670330> speed <13.945718> *  currentSpeed / 100;
		turn lleg to x-axis <45.708791> speed <72.503135> *  currentSpeed / 100;
		turn lfoot to x-axis <-39.016484> speed <95.758169> *  currentSpeed / 100;
		turn rleg to x-axis <-31.285714> speed <2.372964> *  currentSpeed / 100;
		turn rfoot to x-axis <47.109890> speed <46.729110> *  currentSpeed / 100;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [1.192771] *  currentSpeed / 100;
		turn rthigh to x-axis <-17.219780> speed <117.376535> *  currentSpeed / 100;
		turn lthigh to x-axis <4.549451> speed <133.826303> *  currentSpeed / 100;
		turn rfoot to x-axis <57.313187> speed <121.701976> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [0.596386] *  currentSpeed / 100;
		turn rthigh to x-axis <-24.604396> speed <88.081564> *  currentSpeed / 100;
		turn lthigh to x-axis <12.648352> speed <96.601349> *  currentSpeed / 100;
		turn lfoot to x-axis <-42.186813> speed <37.814768> *  currentSpeed / 100;
		turn rleg to x-axis <-21.093407> speed <121.570891> *  currentSpeed / 100;
		turn rfoot to x-axis <62.230769> speed <58.655496> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <-37.263736> speed <150.996947> *  currentSpeed / 100;
		turn lthigh to x-axis <33.043956> speed <243.272867> *  currentSpeed / 100;
		turn lleg to x-axis <33.758242> speed <142.542693> *  currentSpeed / 100;
		turn rleg to x-axis <0.697802> speed <259.919240> *  currentSpeed / 100;
		turn rfoot to x-axis <51.681319> speed <125.830789> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] speed [0.664430] *  currentSpeed / 100;
		turn rthigh to x-axis <-40.785714> speed <23.401062> *  currentSpeed / 100;
		turn lthigh to x-axis <47.467033> speed <95.831183> *  currentSpeed / 100;
		turn lleg to x-axis <19.324176> speed <95.904197> *  currentSpeed / 100;
		turn lfoot to x-axis <-41.137363> speed <6.972856> *  currentSpeed / 100;
		turn rleg to x-axis <36.906593> speed <240.581900> *  currentSpeed / 100;
		turn rfoot to x-axis <3.857143> speed <317.757948> *  currentSpeed / 100;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [0.853448] *  currentSpeed / 100;
		turn rthigh to x-axis <-29.175824> speed <99.084406> *  currentSpeed / 100;
		turn lthigh to x-axis <35.857143> speed <99.084406> *  currentSpeed / 100;
		turn lleg to x-axis <4.565934> speed <125.953962> *  currentSpeed / 100;
		turn lfoot to x-axis <-19.681319> speed <183.116238> *  currentSpeed / 100;
		turn rfoot to x-axis <-7.730769> speed <98.896835> *  currentSpeed / 100;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [1.706897] *  currentSpeed / 100;
		turn rthigh to x-axis <-18.631868> speed <89.987211> *  currentSpeed / 100;
		turn lthigh to x-axis <16.521978> speed <165.015632> *  currentSpeed / 100;
		turn lleg to x-axis <-15.461538> speed <170.924114> *  currentSpeed / 100;
		turn lfoot to x-axis <13.351648> speed <281.919287> *  currentSpeed / 100;
		turn rleg to x-axis <33.395604> speed <29.964475> *  currentSpeed / 100;
		turn rfoot to x-axis <-14.758242> speed <59.975847> *  currentSpeed / 100;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [0.596386] *  currentSpeed / 100;
		turn rthigh to x-axis <-10.538462> speed <96.535807> *  currentSpeed / 100;
		turn lthigh to x-axis <4.549451> speed <142.804840> *  currentSpeed / 100;
		turn lleg to x-axis <-23.543956> speed <96.404745> *  currentSpeed / 100;
		turn lfoot to x-axis <36.214286> speed <272.698935> *  currentSpeed / 100;
		turn rfoot to x-axis <-24.252747> speed <113.247710> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] speed [0.664430] *  currentSpeed / 100;
		turn rthigh to x-axis <-1.395604> speed <60.747848> *  currentSpeed / 100;
		turn lthigh to x-axis <-4.917582> speed <62.901763> *  currentSpeed / 100;
		turn lleg to x-axis <-37.967033> speed <95.831183> *  currentSpeed / 100;
		turn lfoot to x-axis <66.456044> speed <200.935171> *  currentSpeed / 100;
		turn rleg to x-axis <36.906593> speed <23.328048> *  currentSpeed / 100;
		turn rfoot to x-axis <-34.456044> speed <67.793718> *  currentSpeed / 100;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] speed [1.192771] *  currentSpeed / 100;
		turn rthigh to x-axis <13.703297> speed <180.095325> *  currentSpeed / 100;
		turn lthigh to x-axis <-23.554945> speed <222.301077> *  currentSpeed / 100;
		turn lleg to x-axis <-14.060440> speed <285.150929> *  currentSpeed / 100;
		turn lfoot to x-axis <56.263736> speed <121.570903> *  currentSpeed / 100;
		turn rleg to x-axis <26.010989> speed <129.959614> *  currentSpeed / 100;
		turn rfoot to x-axis <-27.774725> speed <79.692841> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] speed [0.596386] *  currentSpeed / 100;
		turn rthigh to x-axis <22.142857> speed <100.664631> *  currentSpeed / 100;
		turn lthigh to x-axis <-29.175824> speed <67.044219> *  currentSpeed / 100;
		turn lleg to x-axis <-7.368132> speed <79.823915> *  currentSpeed / 100;
		turn lfoot to x-axis <53.087912> speed <37.880310> *  currentSpeed / 100;
		turn rleg to x-axis <17.923077> speed <96.470276> *  currentSpeed / 100;
		turn rfoot to x-axis <-21.445055> speed <75.498473> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <36.906593> speed <176.097574> *  currentSpeed / 100;
		turn lthigh to x-axis <-33.758242> speed <54.657757> *  currentSpeed / 100;
		turn lleg to x-axis <6.670330> speed <167.446715> *  currentSpeed / 100;
		turn lfoot to x-axis <42.895604> speed <121.570903> *  currentSpeed / 100;
		turn rleg to x-axis <8.076923> speed <117.442078> *  currentSpeed / 100;
		turn rfoot to x-axis <-13.708791> speed <92.275920> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = notBuilding;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				call-script walk();
			}
			else
			{
				call-script walklegs();
			}
		}
		else
		{
			sleep 100;
		}
	}
}

Go()
{
	turn guncase to x-axis <0.000000> now;
	turn guncase to x-axis <-68.016484> speed <90.000000>;
	turn nanojoint to x-axis <0.000000> now;
	turn nanojoint to x-axis <-4.000000> speed <5.000000>;
	sleep 750;

	turn nanoarm to x-axis <-52.010989> speed <69.000000>;
	turn nanojoint to x-axis <43.005495> speed <63.000000>;
	sleep 758;

	turn nanoarm to x-axis <-87.016484> speed <45.000000>;
	turn nanojoint to x-axis <157.032967> speed <149.000000>;
	sleep 758;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.000000> speed <160.000000>;
	wait-for-turn torso around y-axis;

	turn guncase to x-axis <-68.104396> now;
	turn nanoarm to x-axis <-87.549451> now;
	turn nanoarm to x-axis <0.000000> speed <116.000000>;
	turn nanojoint to x-axis <157.538462> now;
	turn nanojoint to x-axis <0.000000> speed <209.000000>;
	sleep 751;

	turn guncase to x-axis <0.000000> speed <89.000000>;
	sleep 758;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			Func_Var_4 = Rand( 0, 1 );
			if( Func_Var_4 )
			{
				emit-sfx smoketype from rnanogun;
			}
			else
			{
				emit-sfx smoketype from lnanogun;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	notBuilding = 1;
	nanoNozzle = 0;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn torso to y-axis heading speed <160.000000>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanoNozzle;
	nanoNozzle = !nanoNozzle;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nanoarm type SHATTER | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type BITMAPONLY | BITMAP1;
	explode guncase type BITMAPONLY | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lnanogun type BITMAPONLY | BITMAP5;
	explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nanoarm type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode nanojoint type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode pelvis type BITMAPONLY | BITMAP5;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rnanogun type BITMAPONLY | BITMAP3;
	explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
