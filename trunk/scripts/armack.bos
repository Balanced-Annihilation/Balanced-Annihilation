#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  rnanospray, lnanospray, torso, pelvis, lleg, lfoot, rleg, rfoot,
       rthigh, lthigh, guncase, nanojoint, nanoarm, lnanogun, rnanogun, ground;

static-var  Static_Var_1, bMoving, Static_Var_3, Static_Var_4, Static_Var_5,
            statechg_DesiredState, statechg_StateChanging, moveSpeed, currentSpeed;


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] now;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn torso to z-axis <8.076923> now;
		turn rthigh to x-axis <49.928571> now;
		turn lthigh to x-axis <-36.565934> now;
		turn lleg to x-axis <43.236264> now;
		turn lfoot to x-axis <-6.318681> now;
		turn rfoot to x-axis <-18.631868> now;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn torso to z-axis <5.967033> now;
		turn rthigh to x-axis <31.642857> now;
		turn lthigh to x-axis <-29.175824> now;
		turn lleg to x-axis <38.675824> now;
		turn lfoot to x-axis <-10.181319> now;
		turn rleg to x-axis <-18.631868> now;
		turn rfoot to x-axis <10.538462> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to z-axis <4.208791> now;
		turn rthigh to x-axis <19.324176> now;
		turn lthigh to x-axis <-22.142857> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <-31.285714> now;
		turn rfoot to x-axis <30.236264> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to z-axis <2.098901> now;
		turn rthigh to x-axis <9.137363> now;
		turn lthigh to x-axis <-8.769231> now;
		turn lleg to x-axis <34.796703> now;
		turn lfoot to x-axis <-24.604396> now;
		turn rleg to x-axis <-31.642857> now;
		turn rfoot to x-axis <40.076923> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] now;
		turn torso to z-axis <0.000000> now;
		turn rthigh to x-axis <-7.379121> now;
		turn lthigh to x-axis <-6.670330> now;
		turn lleg to x-axis <45.708791> now;
		turn lfoot to x-axis <-39.016484> now;
		turn rleg to x-axis <-31.285714> now;
		turn rfoot to x-axis <47.109890> now;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn torso to z-axis <-2.098901> now;
		turn rthigh to x-axis <-17.219780> now;
		turn lthigh to x-axis <4.549451> now;
		turn rfoot to x-axis <57.313187> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to z-axis <-3.857143> now;
		turn rthigh to x-axis <-24.604396> now;
		turn lthigh to x-axis <12.648352> now;
		turn lfoot to x-axis <-42.186813> now;
		turn rleg to x-axis <-21.093407> now;
		turn rfoot to x-axis <62.230769> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn torso to z-axis <-5.967033> now;
		turn rthigh to x-axis <-37.263736> now;
		turn lthigh to x-axis <33.043956> now;
		turn lleg to x-axis <33.758242> now;
		turn rleg to x-axis <0.697802> now;
		turn rfoot to x-axis <51.681319> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] now;
		turn torso to z-axis <-8.076923> now;
		turn rthigh to x-axis <-40.785714> now;
		turn lthigh to x-axis <47.467033> now;
		turn lleg to x-axis <19.324176> now;
		turn lfoot to x-axis <-41.137363> now;
		turn rleg to x-axis <36.906593> now;
		turn rfoot to x-axis <3.857143> now;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn torso to z-axis <-5.967033> now;
		turn rthigh to x-axis <-29.175824> now;
		turn lthigh to x-axis <35.857143> now;
		turn lleg to x-axis <4.565934> now;
		turn lfoot to x-axis <-19.681319> now;
		turn rfoot to x-axis <-7.730769> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to z-axis <-4.208791> now;
		turn rthigh to x-axis <-18.631868> now;
		turn lthigh to x-axis <16.521978> now;
		turn lleg to x-axis <-15.461538> now;
		turn lfoot to x-axis <13.351648> now;
		turn rleg to x-axis <33.395604> now;
		turn rfoot to x-axis <-14.758242> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn torso to z-axis <-2.098901> now;
		turn rthigh to x-axis <-10.538462> now;
		turn lthigh to x-axis <4.549451> now;
		turn lleg to x-axis <-23.543956> now;
		turn lfoot to x-axis <36.214286> now;
		turn rfoot to x-axis <-24.252747> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] now;
		turn torso to z-axis <0.000000> now;
		turn rthigh to x-axis <-1.395604> now;
		turn lthigh to x-axis <-4.917582> now;
		turn lleg to x-axis <-37.967033> now;
		turn lfoot to x-axis <66.456044> now;
		turn rleg to x-axis <36.906593> now;
		turn rfoot to x-axis <-34.456044> now;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn torso to z-axis <2.098901> now;
		turn rthigh to x-axis <13.703297> now;
		turn lthigh to x-axis <-23.554945> now;
		turn lleg to x-axis <-14.060440> now;
		turn lfoot to x-axis <56.263736> now;
		turn rleg to x-axis <26.010989> now;
		turn rfoot to x-axis <-27.774725> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn torso to z-axis <4.208791> now;
		turn rthigh to x-axis <22.142857> now;
		turn lthigh to x-axis <-29.175824> now;
		turn lleg to x-axis <-7.368132> now;
		turn lfoot to x-axis <53.087912> now;
		turn rleg to x-axis <17.923077> now;
		turn rfoot to x-axis <-21.445055> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn torso to z-axis <5.967033> now;
		turn rthigh to x-axis <36.906593> now;
		turn lthigh to x-axis <-33.758242> now;
		turn lleg to x-axis <6.670330> now;
		turn lfoot to x-axis <42.895604> now;
		turn rleg to x-axis <8.076923> now;
		turn rfoot to x-axis <-13.708791> now;
		sleep 6000 / currentSpeed;
	}
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] now;
		move lleg to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move rleg to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		turn rthigh to x-axis <49.928571> now;
		turn lthigh to x-axis <-36.565934> now;
		turn lleg to x-axis <43.236264> now;
		turn lfoot to x-axis <-6.318681> now;
		turn rfoot to x-axis <-18.631868> now;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn rthigh to x-axis <31.642857> now;
		turn lthigh to x-axis <-29.175824> now;
		turn lleg to x-axis <38.675824> now;
		turn lfoot to x-axis <-10.181319> now;
		turn rleg to x-axis <-18.631868> now;
		turn rfoot to x-axis <10.538462> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn rthigh to x-axis <19.324176> now;
		turn lthigh to x-axis <-22.142857> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <-31.285714> now;
		turn rfoot to x-axis <30.236264> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn rthigh to x-axis <9.137363> now;
		turn lthigh to x-axis <-8.769231> now;
		turn lleg to x-axis <34.796703> now;
		turn lfoot to x-axis <-24.604396> now;
		turn rleg to x-axis <-31.642857> now;
		turn rfoot to x-axis <40.076923> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] now;
		turn rthigh to x-axis <-7.379121> now;
		turn lthigh to x-axis <-6.670330> now;
		turn lleg to x-axis <45.708791> now;
		turn lfoot to x-axis <-39.016484> now;
		turn rleg to x-axis <-31.285714> now;
		turn rfoot to x-axis <47.109890> now;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn rthigh to x-axis <-17.219780> now;
		turn lthigh to x-axis <4.549451> now;
		turn rfoot to x-axis <57.313187> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn rthigh to x-axis <-24.604396> now;
		turn lthigh to x-axis <12.648352> now;
		turn lfoot to x-axis <-42.186813> now;
		turn rleg to x-axis <-21.093407> now;
		turn rfoot to x-axis <62.230769> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn rthigh to x-axis <-37.263736> now;
		turn lthigh to x-axis <33.043956> now;
		turn lleg to x-axis <33.758242> now;
		turn rleg to x-axis <0.697802> now;
		turn rfoot to x-axis <51.681319> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.200000] now;
		turn rthigh to x-axis <-40.785714> now;
		turn lthigh to x-axis <47.467033> now;
		turn lleg to x-axis <19.324176> now;
		turn lfoot to x-axis <-41.137363> now;
		turn rleg to x-axis <36.906593> now;
		turn rfoot to x-axis <3.857143> now;
		sleep 12000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn rthigh to x-axis <-29.175824> now;
		turn lthigh to x-axis <35.857143> now;
		turn lleg to x-axis <4.565934> now;
		turn lfoot to x-axis <-19.681319> now;
		turn rfoot to x-axis <-7.730769> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn rthigh to x-axis <-18.631868> now;
		turn lthigh to x-axis <16.521978> now;
		turn lleg to x-axis <-15.461538> now;
		turn lfoot to x-axis <13.351648> now;
		turn rleg to x-axis <33.395604> now;
		turn rfoot to x-axis <-14.758242> now;
		sleep 7000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn rthigh to x-axis <-10.538462> now;
		turn lthigh to x-axis <4.549451> now;
		turn lleg to x-axis <-23.543956> now;
		turn lfoot to x-axis <36.214286> now;
		turn rfoot to x-axis <-24.252747> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.750000] now;
		turn rthigh to x-axis <-1.395604> now;
		turn lthigh to x-axis <-4.917582> now;
		turn lleg to x-axis <-37.967033> now;
		turn lfoot to x-axis <66.456044> now;
		turn rleg to x-axis <36.906593> now;
		turn rfoot to x-axis <-34.456044> now;
		sleep 11000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.850000] now;
		turn rthigh to x-axis <13.703297> now;
		turn lthigh to x-axis <-23.554945> now;
		turn lleg to x-axis <-14.060440> now;
		turn lfoot to x-axis <56.263736> now;
		turn rleg to x-axis <26.010989> now;
		turn rfoot to x-axis <-27.774725> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.900000] now;
		turn rthigh to x-axis <22.142857> now;
		turn lthigh to x-axis <-29.175824> now;
		turn lleg to x-axis <-7.368132> now;
		turn lfoot to x-axis <53.087912> now;
		turn rleg to x-axis <17.923077> now;
		turn rfoot to x-axis <-21.445055> now;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.100000] now;
		turn rthigh to x-axis <36.906593> now;
		turn lthigh to x-axis <-33.758242> now;
		turn lleg to x-axis <6.670330> now;
		turn lfoot to x-axis <42.895604> now;
		turn rleg to x-axis <8.076923> now;
		turn rfoot to x-axis <-13.708791> now;
		sleep 6000 / currentSpeed;
	}
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = Static_Var_3;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_4 = 0;
				call-script walk();
			}
		}
		else
		{
			Static_Var_4 = 1;
			sleep 100;
		}
	}
}

Go()
{
	Static_Var_3 = 1;
	if( Static_Var_3 )
	{
		turn guncase to x-axis <0.000000> now;
		turn guncase to x-axis <-68.016484> speed <90.000000>;
		turn nanojoint to x-axis <0.000000> now;
		turn nanojoint to x-axis <-4.000000> speed <5.000000>;
		sleep 750;
	}
	if( Static_Var_3 )
	{
		turn nanoarm to x-axis <-52.010989> speed <69.000000>;
		turn nanojoint to x-axis <43.005495> speed <63.000000>;
		sleep 758;
	}
	if( Static_Var_3 )
	{
		turn nanoarm to x-axis <-87.016484> speed <45.000000>;
		turn nanojoint to x-axis <157.032967> speed <149.000000>;
		sleep 758;
	}
	sleep 30;
	turn torso to y-axis Static_Var_1 speed <160.000000>;
	wait-for-turn torso around y-axis;
	set INBUILDSTANCE to 1;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn torso to y-axis <0.000000> speed <160.000000>;
	wait-for-turn torso around y-axis;
	if( Static_Var_3 )
	{
		turn guncase to x-axis <-68.104396> now;
		turn nanoarm to x-axis <-87.549451> now;
		turn nanoarm to x-axis <0.000000> speed <116.000000>;
		turn nanojoint to x-axis <157.538462> now;
		turn nanojoint to x-axis <0.000000> speed <209.000000>;
		sleep 751;
	}
	if( Static_Var_3 )
	{
		turn guncase to x-axis <0.000000> speed <89.000000>;
		sleep 758;
	}
	sleep 40;
	Static_Var_3 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	var Func_Var_4;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			Func_Var_4 = Rand( 0, 1 );
			if( Func_Var_4 )
			{
				emit-sfx smoketype from rnanogun;
			}
			else
			{
				emit-sfx smoketype from lnanogun;
			}
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	Static_Var_3 = 0;
	Static_Var_4 = 1;
	Static_Var_5 = 0;
	Static_Var_1 = 0;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(Func_Var_1)
{
	Static_Var_1 = Func_Var_1;
	start-script RequestState(0);
}

StopBuilding()
{
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = Static_Var_5;
	Static_Var_5 = !Static_Var_5;
}

TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type BITMAPONLY | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type FALL | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode nanoarm type BITMAPONLY | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | BITMAP4;
		explode rthigh type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type BITMAPONLY | BITMAP1;
		explode guncase type BITMAPONLY | BITMAP2;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lnanogun type BITMAPONLY | BITMAP5;
		explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nanoarm type SHATTER | BITMAP3;
		explode nanojoint type SHATTER | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP5;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rnanogun type BITMAPONLY | BITMAP3;
		explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type BITMAPONLY | BITMAP1;
	explode guncase type BITMAPONLY | BITMAP2;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lnanogun type BITMAPONLY | BITMAP5;
	explode lnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nanoarm type SHATTER | EXPLODE_ON_HIT | BITMAP3;
	explode nanojoint type SHATTER | EXPLODE_ON_HIT | BITMAP4;
	explode pelvis type BITMAPONLY | BITMAP5;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rnanogun type BITMAPONLY | BITMAP3;
	explode rnanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type BITMAPONLY | BITMAP1;
}
