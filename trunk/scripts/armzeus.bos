#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, flash, rthigh, lthigh, lleg, rleg, ruparm,
       luparm, lelbow, lloarm, lhand, rloarm, backgun, gun, ground;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            statechg_DesiredState, statechg_StateChanging, moveSpeed,
            currentSpeed, animSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <155.060241> *  currentSpeed / 100;
		turn rthigh to x-axis <17.214286> speed <205.327026> *  currentSpeed / 100;
		turn lthigh to x-axis <-48.868132> speed <582.884948> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <385.815572> *  currentSpeed / 100;
		turn rleg to x-axis <17.214286> speed <205.327026> *  currentSpeed / 100;
		turn ruparm to x-axis <-17.923077> speed <213.781280> *  currentSpeed / 100;
		turn luparm to x-axis <28.126374> speed <335.483256> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.192308> speed <121.570903> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> speed <712.910105> *  currentSpeed / 100;
		turn lhand to y-axis <-60.824176> speed <725.493184> *  currentSpeed / 100;
		turn rloarm to x-axis <-45.703297> speed <545.135711> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <30.236264> speed <155.322388> *  currentSpeed / 100;
		turn lthigh to x-axis <-32.346154> speed <197.069376> *  currentSpeed / 100;
		turn lleg to x-axis <22.137363> speed <121.767507> *  currentSpeed / 100;
		turn rleg to x-axis <17.571429> speed <4.259898> *  currentSpeed / 100;
		turn ruparm to x-axis <-20.725275> speed <33.423807> *  currentSpeed / 100;
		turn luparm to x-axis <15.813187> speed <146.868134> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.181319> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-0.335165> speed <364.647165> *  currentSpeed / 100;
		turn lthigh to x-axis <-22.846154> speed <113.313253> *  currentSpeed / 100;
		turn rleg to x-axis <63.626374> speed <549.330067> *  currentSpeed / 100;
		turn ruparm to x-axis <-11.593407> speed <108.922281> *  currentSpeed / 100;
		turn luparm to x-axis <9.137363> speed <79.627298> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.192308> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-28.467033> speed <335.548787> *  currentSpeed / 100;
		turn lthigh to x-axis <-10.890110> speed <142.608236> *  currentSpeed / 100;
		turn rleg to x-axis <84.390110> speed <247.663839> *  currentSpeed / 100;
		turn ruparm to x-axis <-3.148352> speed <100.730174> *  currentSpeed / 100;
		turn luparm to x-axis <1.038462> speed <96.601349> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.181319> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-32.346154> speed <46.269034> *  currentSpeed / 100;
		turn lthigh to x-axis <1.390110> speed <146.474913> *  currentSpeed / 100;
		turn ruparm to x-axis <4.912088> speed <96.142598> *  currentSpeed / 100;
		turn luparm to x-axis <1.747253> speed <8.454254> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
		turn rthigh to x-axis <-42.890110> speed <125.765258> *  currentSpeed / 100;
		turn lthigh to x-axis <11.247253> speed <117.573151> *  currentSpeed / 100;
		turn lleg to x-axis <29.527473> speed <88.147095> *  currentSpeed / 100;
		turn rleg to x-axis <79.467033> speed <58.721039> *  currentSpeed / 100;
		turn ruparm to x-axis <8.071429> speed <37.683706> *  currentSpeed / 100;
		turn luparm to x-axis <-8.423077> speed <121.308755> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.192308> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] speed [0.596386] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <104.924530> *  currentSpeed / 100;
		turn rthigh to x-axis <-48.868132> speed <71.304118> *  currentSpeed / 100;
		turn lthigh to x-axis <12.291209> speed <12.452005> *  currentSpeed / 100;
		turn lleg to x-axis <28.824176> speed <8.388723> *  currentSpeed / 100;
		turn rleg to x-axis <32.692308> speed <557.915395> *  currentSpeed / 100;
		turn ruparm to x-axis <15.456044> speed <88.081552> *  currentSpeed / 100;
		turn luparm to x-axis <-18.280220> speed <117.573151> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.181319> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [2.981928] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <-33.758242> speed <180.226399> *  currentSpeed / 100;
		turn lthigh to x-axis <3.148352> speed <109.053355> *  currentSpeed / 100;
		turn lleg to x-axis <47.813187> speed <226.495432> *  currentSpeed / 100;
		turn ruparm to x-axis <20.736264> speed <62.980937> *  currentSpeed / 100;
		turn luparm to x-axis <-7.027473> speed <134.219512> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-25.659341> speed <96.601349> *  currentSpeed / 100;
		turn lthigh to x-axis <-11.593407> speed <175.835439> *  currentSpeed / 100;
		turn lleg to x-axis <66.456044> speed <222.366608> *  currentSpeed / 100;
		turn ruparm to x-axis <11.247253> speed <113.182179> *  currentSpeed / 100;
		turn luparm to x-axis <4.912088> speed <142.411631> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-15.104396> speed <125.896332> *  currentSpeed / 100;
		turn lthigh to x-axis <-27.071429> speed <184.617371> *  currentSpeed / 100;
		turn ruparm to x-axis <2.456044> speed <104.858999> *  currentSpeed / 100;
		turn luparm to x-axis <14.758242> speed <117.442078> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.192308> speed <0.131074> *  currentSpeed / 100;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <2.093407> speed <205.130421> *  currentSpeed / 100;
		turn lthigh to x-axis <-34.104396> speed <83.887197> *  currentSpeed / 100;
		turn lleg to x-axis <68.560440> speed <25.100627> *  currentSpeed / 100;
		turn ruparm to x-axis <-0.346154> speed <33.423807> *  currentSpeed / 100;
		turn luparm to x-axis <23.549451> speed <104.858999> *  currentSpeed / 100;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	move pelvis to y-axis [-0.400000] speed [7.156627] *  currentSpeed / 100;
	turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
	turn rthigh to x-axis <11.247253> speed <109.184428> *  currentSpeed / 100;
	turn lthigh to x-axis <-44.291209> speed <121.505360> *  currentSpeed / 100;
	turn lleg to x-axis <75.593407> speed <83.887197> *  currentSpeed / 100;
	turn ruparm to x-axis <-8.071429> speed <92.144846> *  currentSpeed / 100;
	turn luparm to x-axis <26.357143> speed <33.489338> *  currentSpeed / 100;
	turn lelbow to z-axis <-10.181319> speed <0.131074> *  currentSpeed / 100;
	turn rloarm to x-axis <-45.703297> now;
	sleep animSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <104.924530> *  currentSpeed / 100;
		turn rthigh to x-axis <17.214286> speed <71.173044> *  currentSpeed / 100;
		turn lthigh to x-axis <-48.868132> speed <54.592214> *  currentSpeed / 100;
		turn lleg to x-axis <32.346154> speed <515.840729> *  currentSpeed / 100;
		turn rleg to x-axis <17.214286> speed <184.617371> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <30.236264> speed <155.322388> *  currentSpeed / 100;
		turn lthigh to x-axis <-32.346154> speed <197.069376> *  currentSpeed / 100;
		turn lleg to x-axis <22.137363> speed <121.767507> *  currentSpeed / 100;
		turn rleg to x-axis <17.571429> speed <4.259898> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-0.335165> speed <364.647165> *  currentSpeed / 100;
		turn lthigh to x-axis <-22.846154> speed <113.313253> *  currentSpeed / 100;
		turn rleg to x-axis <63.626374> speed <549.330067> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-28.467033> speed <335.548787> *  currentSpeed / 100;
		turn lthigh to x-axis <-10.890110> speed <142.608236> *  currentSpeed / 100;
		turn rleg to x-axis <84.390110> speed <247.663839> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <-32.346154> speed <46.269034> *  currentSpeed / 100;
		turn lthigh to x-axis <1.390110> speed <146.474913> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
		turn rthigh to x-axis <-42.890110> speed <125.765258> *  currentSpeed / 100;
		turn lthigh to x-axis <11.247253> speed <117.573151> *  currentSpeed / 100;
		turn lleg to x-axis <29.527473> speed <88.147095> *  currentSpeed / 100;
		turn rleg to x-axis <79.467033> speed <58.721039> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] speed [0.596386] *  currentSpeed / 100;
		turn pelvis to x-axis <13.000000> speed <104.924530> *  currentSpeed / 100;
		turn rthigh to x-axis <-48.868132> speed <71.304118> *  currentSpeed / 100;
		turn lthigh to x-axis <12.291209> speed <12.452005> *  currentSpeed / 100;
		turn lleg to x-axis <28.824176> speed <8.388723> *  currentSpeed / 100;
		turn rleg to x-axis <32.692308> speed <557.915395> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [2.981928] *  currentSpeed / 100;
		turn pelvis to x-axis <9.137363> speed <46.072417> *  currentSpeed / 100;
		turn rthigh to x-axis <-33.758242> speed <180.226399> *  currentSpeed / 100;
		turn lthigh to x-axis <3.148352> speed <109.053355> *  currentSpeed / 100;
		turn lleg to x-axis <47.813187> speed <226.495432> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <6.313187> speed <33.685955> *  currentSpeed / 100;
		turn rthigh to x-axis <-25.659341> speed <96.601349> *  currentSpeed / 100;
		turn lthigh to x-axis <-11.593407> speed <175.835439> *  currentSpeed / 100;
		turn lleg to x-axis <66.456044> speed <222.366608> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [8.349398] *  currentSpeed / 100;
		turn pelvis to x-axis <2.802198> speed <41.878062> *  currentSpeed / 100;
		turn rthigh to x-axis <-15.104396> speed <125.896332> *  currentSpeed / 100;
		turn lthigh to x-axis <-27.071429> speed <184.617371> *  currentSpeed / 100;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <33.423807> *  currentSpeed / 100;
		turn rthigh to x-axis <2.093407> speed <205.130421> *  currentSpeed / 100;
		turn lthigh to x-axis <-34.104396> speed <83.887197> *  currentSpeed / 100;
		turn lleg to x-axis <68.560440> speed <25.100627> *  currentSpeed / 100;
		sleep animSpeed;
	}
	move pelvis to y-axis [-0.400000] speed [7.156627] *  currentSpeed / 100;
	turn pelvis to x-axis <4.203297> speed <50.135711> *  currentSpeed / 100;
	turn rthigh to x-axis <11.247253> speed <109.184428> *  currentSpeed / 100;
	turn lthigh to x-axis <-44.291209> speed <121.505360> *  currentSpeed / 100;
	turn lleg to x-axis <75.593407> speed <83.887197> *  currentSpeed / 100;
	sleep animSpeed;
}

drawgun()
{
	turn ruparm to x-axis <-17.923077> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn lloarm to x-axis <0.000000> now;
	turn rloarm to x-axis <-67.846154> now;
	sleep 20;

	turn ruparm to x-axis <-75.593407> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-92.115385> now;
	sleep 20;

	turn ruparm to x-axis <-114.269231> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-123.412088> now;
	sleep 20;

	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.945055> now;
	turn rloarm to x-axis <-107.593407> now;
	sleep 20;

	show gun;
	hide backgun;
	move luparm to z-axis [0.500000] now;
	turn luparm to x-axis <-54.500000> now;
	turn lelbow to z-axis <15.813187> now;
	turn lloarm to z-axis <20.736264> now;
	turn lhand to y-axis <0.000000> now;
	turn rloarm to x-axis <-56.593407> now;
	sleep 20;

	move luparm to z-axis [1.600000] now;
	turn ruparm to x-axis <-78.769231> now;
	turn luparm to x-axis <-59.423077> now;
	turn lelbow to z-axis <24.247253> now;
	turn lloarm to z-axis <52.379121> now;
	sleep 20;

	move luparm to z-axis [1.700000] now;
	move rloarm to y-axis [1.500000] now;
	turn ruparm to x-axis <2.802198> now;
	turn luparm to x-axis <-44.291209> now;
	turn lelbow to z-axis <44.648352> now;
	turn lloarm to z-axis <46.060440> now;
	turn lhand to y-axis <-260.945055> now;
	turn rloarm to x-axis <-95.280220> now;
	sleep 20;
}

holstgun()
{
	move luparm to z-axis [1.700000] speed [20.277108];
	move rloarm to y-axis [1.500000] speed [17.891566];
	turn ruparm to x-axis <2.802198> speed <129.697479>;
	turn luparm to x-axis <-44.291209> speed <842.673114>;
	turn lelbow to z-axis <44.648352> speed <653.992461>;
	turn lloarm to z-axis <46.060440> speed <549.395610>;
	turn lhand to y-axis <-260.945055> speed <2386.983978>;
	turn rloarm to x-axis <-95.280220> speed <591.339202>;
	sleep 35;

	move luparm to z-axis [1.650000] speed [0.596386];
	move rloarm to y-axis [0.279999] speed [14.551819];
	turn ruparm to x-axis <-28.467033> speed <372.970346>;
	turn luparm to x-axis <-61.181319> speed <201.460348>;
	turn lelbow to z-axis <34.456044> speed <121.570903>;
	turn lloarm to z-axis <30.236264> speed <188.746196>;
	turn lhand to y-axis <54.148352> speed <3758.343047>;
	turn rloarm to x-axis <-91.071429> speed <50.201242>;
	sleep 35;

	move luparm to z-axis [1.139990] speed [6.083252];
	move rloarm to y-axis [0.139990] speed [1.669987];
	turn ruparm to x-axis <-56.956044> speed <339.808685>;
	turn luparm to x-axis <-53.082418> speed <96.601349>;
	turn lelbow to z-axis <28.467033> speed <71.435191>;
	turn lloarm to z-axis <29.868132> speed <4.390972>;
	turn lhand to y-axis <14.758242> speed <469.833842>;
	sleep 35;

	move luparm to z-axis [0.850000] speed [3.458917];
	turn ruparm to x-axis <-105.478022> speed <578.756123>;
	turn luparm to x-axis <-44.291209> speed <104.858999>;
	turn lelbow to z-axis <24.604396> speed <46.072417>;
	turn lhand to y-axis <-1.049451> speed <188.549591>;
	sleep 35;

	turn ruparm to x-axis <-124.115385> speed <222.301077>;
	turn luparm to x-axis <-43.945055> speed <4.128825>;
	turn lelbow to z-axis <17.923077> speed <79.692841>;
	turn lhand to y-axis <-8.423077> speed <87.950479>;
	turn rloarm to x-axis <-112.527473> speed <255.921489>;
	sleep 35;

	move luparm to z-axis [0.500000] speed [4.174699];
	turn ruparm to x-axis <-148.027473> speed <285.216471>;
	turn luparm to x-axis <-42.538462> speed <16.777435>;
	turn lelbow to z-axis <15.813187> speed <25.166158>;
	turn lloarm to z-axis <22.835165> speed <83.887197>;
	turn lhand to y-axis <14.758242> speed <276.500070>;
	turn rloarm to x-axis <-129.401099> speed <201.263732>;
	sleep 35;

	show backgun;
	hide gun;
	move luparm to z-axis [0.000000] speed [5.963855];
	turn luparm to x-axis <-41.126374> speed <16.842977>;
	turn lelbow to z-axis <11.247253> speed <54.461140>;
	turn lhand to y-axis <-9.835165> speed <293.343047>;
	turn rloarm to x-axis <-136.780220> speed <88.016022>;
	sleep 35;

	turn luparm to x-axis <-39.725275> speed <16.711904>;
	turn lelbow to z-axis <10.181319> speed <12.714153>;
	turn rloarm to x-axis <-102.324176> speed <410.981730>;
	sleep 35;

	turn ruparm to x-axis <-122.714286> speed <301.928375>;
	turn luparm to x-axis <-39.016484> speed <8.454254>;
	turn lelbow to z-axis <9.835165> speed <4.128825>;
	turn rloarm to x-axis <-60.824176> speed <495.000000>;
	sleep 35;

	turn ruparm to x-axis <-90.016484> speed <390.009927>;
	turn luparm to x-axis <-38.670330> speed <4.128825>;
	turn lelbow to z-axis <7.027473> speed <33.489338>;
	sleep 35;

	turn ruparm to x-axis <-42.890110> speed <562.109762>;
	turn luparm to x-axis <-37.258242> speed <16.842977>;
	turn lelbow to z-axis <5.258242> speed <21.102876>;
	sleep 35;

	turn ruparm to x-axis <-23.901099> speed <226.495432>;
	turn luparm to x-axis <-37.967033> speed <8.454254>;
	turn lelbow to z-axis <2.802198> speed <29.294983>;
	sleep 35;

	move luparm to z-axis [0.000000] now;
	move rloarm to y-axis [0.000000] now;
	turn ruparm to x-axis <-17.923077> now;
	turn luparm to x-axis <-36.560440> now;
	turn lelbow to z-axis <0.000000> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-67.846154> now;
	sleep 30;
}

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_4 )
	{
		while( !Static_Var_3 )
		{
			sleep 150;
		}
		call-script drawgun();
		Static_Var_4 = 1;
	}
}

Stop()
{
	if( Static_Var_4 )
	{
		Static_Var_4 = 0;
		call-script holstgun();
	}
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 10000 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flash;
	show backgun;
	hide gun;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	restore_delay = 3000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 100;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <250.000000>;
	turn gun to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = flash;
}

FirePrimary()
{
	show flash;
	sleep 100;
	hide flash;
}

Killed(severity, corpsetype)
{
	hide flash;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode backgun type BITMAPONLY | BITMAP1;
		explode flash type BITMAPONLY | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode gun type BITMAPONLY | BITMAP4;
		explode lelbow type BITMAPONLY | BITMAP5;
		explode lhand type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lloarm type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode luparm type BITMAPONLY | BITMAP5;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rloarm type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode backgun type FALL | BITMAP1;
		explode flash type FALL | BITMAP2;
		explode ground type FALL | BITMAP3;
		explode gun type FALL | BITMAP4;
		explode lelbow type FALL | BITMAP5;
		explode lhand type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rloarm type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode flash type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode flash type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
