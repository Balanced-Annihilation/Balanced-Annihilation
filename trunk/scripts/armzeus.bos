#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, pelvis, flash, rthigh, lthigh, lleg, rleg, ruparm,
       luparm, lelbow, lloarm, lhand, rloarm, backgun, gun, ground;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, restore_delay,
            statechg_DesiredState, statechg_StateChanging, moveSpeed,
            currentSpeed, animSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		turn ruparm to x-axis <-17.923077> now;
		turn luparm to x-axis <28.126374> now;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		turn ruparm to x-axis <-20.725275> now;
		turn luparm to x-axis <15.813187> now;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		turn ruparm to x-axis <-11.593407> now;
		turn luparm to x-axis <9.137363> now;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		turn ruparm to x-axis <-3.148352> now;
		turn luparm to x-axis <1.038462> now;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		turn ruparm to x-axis <4.912088> now;
		turn luparm to x-axis <1.747253> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		turn ruparm to x-axis <8.071429> now;
		turn luparm to x-axis <-8.423077> now;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		turn ruparm to x-axis <15.456044> now;
		turn luparm to x-axis <-18.280220> now;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		turn ruparm to x-axis <20.736264> now;
		turn luparm to x-axis <-7.027473> now;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		turn ruparm to x-axis <11.247253> now;
		turn luparm to x-axis <4.912088> now;
		turn lelbow to z-axis <-10.181319> now;
		turn lloarm to x-axis <-59.769231> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		turn ruparm to x-axis <2.456044> now;
		turn luparm to x-axis <14.758242> now;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		turn ruparm to x-axis <-0.346154> now;
		turn luparm to x-axis <23.549451> now;
		turn lelbow to z-axis <-10.192308> now;
		turn lloarm to x-axis <-59.769231> now;
		turn lhand to y-axis <-60.824176> now;
		turn rloarm to x-axis <-45.703297> now;
		sleep animSpeed;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	turn ruparm to x-axis <-8.071429> now;
	turn luparm to x-axis <26.357143> now;
	turn lelbow to z-axis <-10.181319> now;
	turn rloarm to x-axis <-45.703297> now;
	sleep animSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <17.214286> now;
		turn lthigh to x-axis <-48.868132> now;
		turn lleg to x-axis <32.346154> now;
		turn rleg to x-axis <17.214286> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <30.236264> now;
		turn lthigh to x-axis <-32.346154> now;
		turn lleg to x-axis <22.137363> now;
		turn rleg to x-axis <17.571429> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-0.335165> now;
		turn lthigh to x-axis <-22.846154> now;
		turn rleg to x-axis <63.626374> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-28.467033> now;
		turn lthigh to x-axis <-10.890110> now;
		turn rleg to x-axis <84.390110> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <-32.346154> now;
		turn lthigh to x-axis <1.390110> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <4.203297> now;
		turn rthigh to x-axis <-42.890110> now;
		turn lthigh to x-axis <11.247253> now;
		turn lleg to x-axis <29.527473> now;
		turn rleg to x-axis <79.467033> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.450000] now;
		turn pelvis to x-axis <13.000000> now;
		turn rthigh to x-axis <-48.868132> now;
		turn lthigh to x-axis <12.291209> now;
		turn lleg to x-axis <28.824176> now;
		turn rleg to x-axis <32.692308> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] now;
		turn pelvis to x-axis <9.137363> now;
		turn rthigh to x-axis <-33.758242> now;
		turn lthigh to x-axis <3.148352> now;
		turn lleg to x-axis <47.813187> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.500000] now;
		turn pelvis to x-axis <6.313187> now;
		turn rthigh to x-axis <-25.659341> now;
		turn lthigh to x-axis <-11.593407> now;
		turn lleg to x-axis <66.456044> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] now;
		turn pelvis to x-axis <2.802198> now;
		turn rthigh to x-axis <-15.104396> now;
		turn lthigh to x-axis <-27.071429> now;
		sleep animSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> now;
		turn rthigh to x-axis <2.093407> now;
		turn lthigh to x-axis <-34.104396> now;
		turn lleg to x-axis <68.560440> now;
		sleep animSpeed;
	}
	move pelvis to y-axis [-0.400000] now;
	turn pelvis to x-axis <4.203297> now;
	turn rthigh to x-axis <11.247253> now;
	turn lthigh to x-axis <-44.291209> now;
	turn lleg to x-axis <75.593407> now;
	sleep animSpeed;
}

drawgun()
{
	turn ruparm to x-axis <-17.923077> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn lloarm to x-axis <0.000000> now;
	turn rloarm to x-axis <-67.846154> now;
	sleep 20;

	turn ruparm to x-axis <-75.593407> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-92.115385> now;
	sleep 20;

	turn ruparm to x-axis <-114.269231> now;
	turn luparm to x-axis <-36.560440> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-123.412088> now;
	sleep 20;

	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.945055> now;
	turn rloarm to x-axis <-107.593407> now;
	sleep 20;

	show gun;
	hide backgun;
	move luparm to z-axis [0.500000] now;
	turn luparm to x-axis <-54.500000> now;
	turn lelbow to z-axis <15.813187> now;
	turn lloarm to z-axis <20.736264> now;
	turn lhand to y-axis <0.000000> now;
	turn rloarm to x-axis <-56.593407> now;
	sleep 20;

	move luparm to z-axis [1.600000] now;
	turn ruparm to x-axis <-78.769231> now;
	turn luparm to x-axis <-59.423077> now;
	turn lelbow to z-axis <24.247253> now;
	turn lloarm to z-axis <52.379121> now;
	sleep 20;

	move luparm to z-axis [1.700000] now;
	move rloarm to y-axis [1.500000] now;
	turn ruparm to x-axis <2.802198> now;
	turn luparm to x-axis <-44.291209> now;
	turn lelbow to z-axis <44.648352> now;
	turn lloarm to z-axis <46.060440> now;
	turn lhand to y-axis <-260.945055> now;
	turn rloarm to x-axis <-95.280220> now;
	sleep 20;
}

holstgun()
{
	move luparm to z-axis [1.700000] now;
	move rloarm to y-axis [1.500000] now;
	turn ruparm to x-axis <2.802198> now;
	turn luparm to x-axis <-44.291209> now;
	turn lelbow to z-axis <44.648352> now;
	turn lloarm to z-axis <46.060440> now;
	turn lhand to y-axis <-260.945055> now;
	turn rloarm to x-axis <-95.280220> now;
	sleep 35;

	move luparm to z-axis [1.650000] now;
	move rloarm to y-axis [0.279999] now;
	turn ruparm to x-axis <-28.467033> now;
	turn luparm to x-axis <-61.181319> now;
	turn lelbow to z-axis <34.456044> now;
	turn lloarm to z-axis <30.236264> now;
	turn lhand to y-axis <54.148352> now;
	turn rloarm to x-axis <-91.071429> now;
	sleep 35;

	move luparm to z-axis [1.139990] now;
	move rloarm to y-axis [0.139990] now;
	turn ruparm to x-axis <-56.956044> now;
	turn luparm to x-axis <-53.082418> now;
	turn lelbow to z-axis <28.467033> now;
	turn lloarm to z-axis <29.868132> now;
	turn lhand to y-axis <14.758242> now;
	sleep 35;

	move luparm to z-axis [0.850000] now;
	turn ruparm to x-axis <-105.478022> now;
	turn luparm to x-axis <-44.291209> now;
	turn lelbow to z-axis <24.604396> now;
	turn lhand to y-axis <-1.049451> now;
	sleep 35;

	turn ruparm to x-axis <-124.115385> now;
	turn luparm to x-axis <-43.945055> now;
	turn lelbow to z-axis <17.923077> now;
	turn lhand to y-axis <-8.423077> now;
	turn rloarm to x-axis <-112.527473> now;
	sleep 35;

	move luparm to z-axis [0.500000] now;
	turn ruparm to x-axis <-148.027473> now;
	turn luparm to x-axis <-42.538462> now;
	turn lelbow to z-axis <15.813187> now;
	turn lloarm to z-axis <22.835165> now;
	turn lhand to y-axis <14.758242> now;
	turn rloarm to x-axis <-129.401099> now;
	sleep 35;

	show backgun;
	hide gun;
	move luparm to z-axis [0.000000] now;
	turn luparm to x-axis <-41.126374> now;
	turn lelbow to z-axis <11.247253> now;
	turn lhand to y-axis <-9.835165> now;
	turn rloarm to x-axis <-136.780220> now;
	sleep 35;

	turn luparm to x-axis <-39.725275> now;
	turn lelbow to z-axis <10.181319> now;
	turn rloarm to x-axis <-102.324176> now;
	sleep 35;

	turn ruparm to x-axis <-122.714286> now;
	turn luparm to x-axis <-39.016484> now;
	turn lelbow to z-axis <9.835165> now;
	turn rloarm to x-axis <-60.824176> now;
	sleep 35;

	turn ruparm to x-axis <-90.016484> now;
	turn luparm to x-axis <-38.670330> now;
	turn lelbow to z-axis <7.027473> now;
	sleep 35;

	turn ruparm to x-axis <-42.890110> now;
	turn luparm to x-axis <-37.258242> now;
	turn lelbow to z-axis <5.258242> now;
	sleep 35;

	turn ruparm to x-axis <-23.901099> now;
	turn luparm to x-axis <-37.967033> now;
	turn lelbow to z-axis <2.802198> now;
	sleep 35;

	move luparm to z-axis [0.000000] now;
	move rloarm to y-axis [0.000000] now;
	turn ruparm to x-axis <-17.923077> now;
	turn luparm to x-axis <-36.560440> now;
	turn lelbow to z-axis <0.000000> now;
	turn lloarm to z-axis <22.137363> now;
	turn lhand to y-axis <-43.934066> now;
	turn rloarm to x-axis <-67.846154> now;
	sleep 30;
}

Go()
{
	Static_Var_2 = 1;
	if( !Static_Var_4 )
	{
		while( !Static_Var_3 )
		{
			sleep 150;
		}
		call-script drawgun();
		Static_Var_4 = 1;
	}
}

Stop()
{
	if( Static_Var_4 )
	{
		Static_Var_4 = 0;
		call-script holstgun();
	}
	Static_Var_2 = 0;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			currentstate = 1;
		}
		else
		{
			call-script Go();
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		animSpeed = 10000 / currentSpeed;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flash;
	show backgun;
	hide gun;
	bMoving = FALSE;
	Static_Var_2 = 0;
	Static_Var_3 = 1;
	Static_Var_4 = 0;
	restore_delay = 3000;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	animSpeed = 100;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 5;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	set-signal-mask 0;
	turn torso to y-axis <0.000000> speed <90.000000>;
	start-script RequestState(1);
}

AimPrimary(heading, pitch)
{
	start-script RequestState(0);
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	while( !Static_Var_4 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <250.000000>;
	turn gun to x-axis <0.000000> - pitch speed <90.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = flash;
}

FirePrimary()
{
	show flash;
	sleep 100;
	hide flash;
}

Killed(severity, corpsetype)
{
	hide flash;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode backgun type BITMAPONLY | BITMAP1;
		explode flash type BITMAPONLY | BITMAP2;
		explode ground type BITMAPONLY | BITMAP3;
		explode gun type BITMAPONLY | BITMAP4;
		explode lelbow type BITMAPONLY | BITMAP5;
		explode lhand type BITMAPONLY | BITMAP1;
		explode lleg type BITMAPONLY | BITMAP2;
		explode lloarm type BITMAPONLY | BITMAP3;
		explode lthigh type BITMAPONLY | BITMAP4;
		explode luparm type BITMAPONLY | BITMAP5;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode rleg type BITMAPONLY | BITMAP2;
		explode rloarm type BITMAPONLY | BITMAP3;
		explode rthigh type BITMAPONLY | BITMAP4;
		explode ruparm type BITMAPONLY | BITMAP5;
		explode torso type BITMAPONLY | BITMAP1;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode backgun type FALL | BITMAP1;
		explode flash type FALL | BITMAP2;
		explode ground type FALL | BITMAP3;
		explode gun type FALL | BITMAP4;
		explode lelbow type FALL | BITMAP5;
		explode lhand type FALL | BITMAP1;
		explode lleg type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP3;
		explode lthigh type FALL | BITMAP4;
		explode luparm type FALL | BITMAP5;
		explode pelvis type FALL | BITMAP1;
		explode rleg type FALL | BITMAP2;
		explode rloarm type FALL | BITMAP3;
		explode rthigh type FALL | BITMAP4;
		explode ruparm type FALL | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode flash type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode torso type SHATTER | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode backgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode flash type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode gun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lelbow type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lhand type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode luparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode ruparm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP1;
}
