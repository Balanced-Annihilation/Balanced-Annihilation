#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, bombs, turret, wing1, wing2, tail1,
       tail2, barrels, thrusta1, thrusta2, arm1, arm2, thrust;

static-var  Static_Var_1, gun_2, statechg_DesiredState, statechg_StateChanging;

// Signal definitions
#define SIG_AIM_2			2

lua_BombsAway() { return 0; }

activatescr()
{
	if( TRUE )
	{
		turn wing1 to z-axis <0.000000> now;
		turn wing1 to z-axis <-90.016484> speed <75.648352>;
		turn wing2 to z-axis <0.000000> now;
		turn wing2 to z-axis <90.016484> speed <75.648352>;
		turn tail1 to z-axis <0.000000> now;
		turn tail1 to z-axis <-30.236264> speed <25.412088>;
		turn tail2 to z-axis <0.000000> now;
		turn tail2 to z-axis <30.236264> speed <25.412088>;
		sleep 1190;
	}
	sleep 10;
}

deactivatescr()
{
	if( TRUE )
	{
		turn wing1 to z-axis <-90.016484> now;
		turn wing1 to z-axis <0.000000> speed <75.648352>;
		turn wing2 to z-axis <90.016484> now;
		turn wing2 to z-axis <0.000000> speed <75.648352>;
		turn tail1 to z-axis <-30.236264> now;
		turn tail1 to z-axis <0.000000> speed <25.412088>;
		turn tail2 to z-axis <30.236264> now;
		turn tail2 to z-axis <0.000000> speed <25.412088>;
		sleep 1190;
	}
	sleep 10;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

InitState()
{
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState == 0 )
		{
			call-script activatescr();
			currentstate = 0;
		}
		if( statechg_DesiredState == 1 )
		{
			call-script deactivatescr();
			currentstate = 1;
		}
	}
	statechg_StateChanging = FALSE;
}

Create()
{
	hide flare1;
	hide flare2;
	gun_2 = flare1;
	Static_Var_1 = 3000;
	call-script InitState();
	start-script SmokeUnit();
	spin arm1 around y-axis speed <950.225275>;
	spin arm2 around y-axis speed <750.181319>;
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

RestoreAfterDelay()
{
	sleep Static_Var_1;
	turn turret to y-axis <0.000000> speed <90.016484>;
	turn barrels to x-axis <0.000000> speed <50.005495>;
}

QueryPrimary(piecenum)
{
	piecenum = bombs;
}

QuerySecondary(piecenum)
{
	piecenum = gun_2;
}

AimSecondary(heading, pitch)
{
	signal SIG_AIM_2;
	set-signal-mask SIG_AIM_2;
	turn turret to y-axis heading speed <390.093407>;
	turn barrels to x-axis pitch speed <350.082418>;
	wait-for-turn turret around y-axis;
	wait-for-turn barrels around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireSecondary()
{
	if( gun_2 == 0 )
	{
		show flare1;
		sleep 150;
		hide flare1;
	}
	if( gun_2 == 1 )
	{
		show flare2;
		sleep 150;
		hide flare2;
	}
	gun_2 = !gun_2;
}

AimFromSecondary(piecenum)
{
	piecenum = turret;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

FirePrimary()
{
	call-script lua_BombsAway();
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		return (corpsetype);
	}
	corpsetype = 3;
	return corpsetype;
}
