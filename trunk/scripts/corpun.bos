#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, base, turret, barrel1, barrel2, sleeves;

static-var  Static_Var_1, Static_Var_2;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	hide flare1;
	hide flare2;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache barrel1;
	dont-cache barrel2;
	dont-cache sleeves;
	dont-cache turret;
	dont-shade flare1;
	dont-shade flare2;
	dont-shade barrel1;
	dont-shade barrel2;
	dont-shade sleeves;
	dont-shade turret;
	Static_Var_1 = 0;
	Static_Var_2 = 0;
	start-script SmokeUnit();
	return (0);
}

Reload1()
{
	sleep 3550;
	Static_Var_2 = 0;
	return (0);
}

Reload2()
{
	sleep 6390;
	Static_Var_2 = 0;
	return (0);
}

AimWeapon1(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	if( pitch >= 10012 OR Static_Var_2 == 1 )
	{
		return (0);
	}
	turn turret to y-axis heading speed <30.00549>;
	turn sleeves to x-axis <0.00000> - pitch speed <45.00549>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FireWeapon1()
{
	Static_Var_2 = 1;
	start-script Reload1();
	if( Static_Var_1 == 0 )
	{
		move barrel1 to z-axis [-3.75000] now;
		show flare1;
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0.00000] speed [2.50000];
	}
	if( Static_Var_1 == 1 )
	{
		move barrel2 to z-axis [-3.75000] now;
		show flare2;
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0.00000] speed [2.50000];
	}
	Static_Var_1 = !Static_Var_1;
	return (0);
}

QueryWeapon1(piecenum)
{
	piecenum = Static_Var_1;
	return (0);
}

AimFromWeapon1(piecenum)
{
	piecenum = turret;
	return (0);
}

AimWeapon2(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	if( pitch < 10012 OR Static_Var_2 == 1 )
	{
		return (0);
	}
	turn turret to y-axis heading speed <30.00549>;
	turn sleeves to x-axis <0.00000> - pitch speed <45.00549>;
	wait-for-turn turret around y-axis;
	wait-for-turn sleeves around x-axis;
	return (1);
}

FireWeapon2()
{
	Static_Var_2 = 1;
	start-script Reload2();
	if( Static_Var_1 == 0 )
	{
		move barrel1 to z-axis [-3.75000] now;
		show flare1;
		sleep 150;
		hide flare1;
		move barrel1 to z-axis [0.00000] speed [2.50000];
	}
	if( Static_Var_1 == 1 )
	{
		move barrel2 to z-axis [-3.75000] now;
		show flare2;
		sleep 150;
		hide flare2;
		move barrel2 to z-axis [0.00000] speed [2.50000];
	}
	Static_Var_1 = !Static_Var_1;
	return (0);
}

QueryWeapon2(piecenum)
{
	piecenum = Static_Var_1;
	return (0);
}

AimFromWeapon2(piecenum)
{
	piecenum = turret;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode barrel1 type BITMAPONLY | BITMAP1;
		explode barrel2 type BITMAPONLY | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare1 type BITMAPONLY | BITMAP4;
		explode flare2 type BITMAPONLY | BITMAP5;
		explode sleeves type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode barrel1 type FALL | BITMAP1;
		explode barrel2 type FALL | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | BITMAP4;
		explode flare2 type FALL | BITMAP5;
		explode sleeves type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode base type BITMAPONLY | BITMAP3;
		explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode sleeves type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (corpsetype);
	}
	corpsetype = 3;
	explode barrel1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode barrel2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode base type BITMAPONLY | BITMAP3;
	explode flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode sleeves type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP2;
	return (corpsetype);
}
