#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, sphere, sphere1, collar, gear, clamp1, clamp2, clamp3,
       clamp4, clamp5, clamp6, tower, emit1, emit2, emit3, emit4;


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	dont-cache sphere;
	dont-cache sphere1;
	dont-cache collar;
	dont-cache gear;
	dont-cache clamp1;
	dont-cache clamp2;
	dont-cache clamp3;
	dont-cache clamp4;
	dont-cache clamp5;
	dont-cache clamp6;
	dont-shade collar;
	dont-shade gear;
	dont-shade sphere;
	dont-shade sphere1;
	dont-shade tower;
	dont-shade base;
	start-script SmokeUnit();
	return (0);
}

Activate()
{
	spin sphere around y-axis speed <50.01099>;
	spin gear around y-axis speed <-150.03297>;
	spin collar around y-axis speed <-50.01099>;
	while( TRUE )
	{
		emit-sfx 256 | 1 from emit1;
		emit-sfx 256 | 1 from emit2;
		emit-sfx 256 | 1 from emit3;
		emit-sfx 256 | 1 from emit4;
		sleep 250;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | NOHEATCLOUD;
	return (corpsetype);
}
