#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  flare1, flare2, flare3, flare4, flare5, flare6, base, turret,
       barrel1, barrel2, barrel3, barrel4, barrel5, barrel6, sleeve1, sleeve2,
       sleeve3, sleeve4, sleeve5, sleeve6, spindle, tread1, tread2, tread3;

static-var  gun_1;

// Signal definitions
#define SIG_AIM				2


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

Create()
{
	dont-shade barrel1;
	dont-shade barrel2;
	dont-shade barrel3;
	dont-shade barrel4;
	dont-shade barrel5;
	dont-shade barrel6;
	dont-shade base;
	dont-shade sleeve1;
	dont-shade sleeve2;
	dont-shade sleeve3;
	dont-shade sleeve4;
	dont-shade sleeve5;
	dont-shade sleeve6;
	dont-shade turret;
	dont-shade spindle;
	dont-cache turret;
	dont-cache spindle;
	dont-cache barrel1;
	dont-cache barrel2;
	dont-cache barrel3;
	dont-cache barrel4;
	dont-cache barrel5;
	dont-cache barrel6;
	dont-cache sleeve1;
	dont-cache sleeve2;
	dont-cache sleeve3;
	dont-cache sleeve4;
	dont-cache sleeve5;
	dont-cache sleeve6;
	dont-cache flare1;
	dont-cache flare2;
	dont-cache flare3;
	dont-cache flare4;
	dont-cache flare5;
	dont-cache flare6;
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	gun_1 = flare1;
	start-script SmokeUnit();
	return (0);
}

RestoreAfterDelay()
{
	sleep 3000;
	turn turret to y-axis <0.00000> speed <20.00000>;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn turret to y-axis heading speed <20.00000>;
	turn spindle to x-axis <60.00549> * gun_1 - pitch speed <200.03846>;
	wait-for-turn turret around y-axis;
	wait-for-turn spindle around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move barrel1 to z-axis [-4.50000] now;
		show flare1;
		sleep 50;
		hide flare1;
		move barrel1 to z-axis [0.00000] speed [5.00000];
	}
	if( gun_1 == 1 )
	{
		move barrel2 to y-axis [-3.75000] now;
		move barrel2 to z-axis [-2.25000] now;
		show flare2;
		sleep 50;
		hide flare2;
		move barrel2 to y-axis [0.00000] speed [5.00000];
		move barrel2 to z-axis [0.00000] speed [5.00000];
	}
	if( gun_1 == 2 )
	{
		move barrel3 to y-axis [-3.75000] now;
		move barrel3 to z-axis [2.25000] now;
		show flare3;
		sleep 50;
		hide flare3;
		move barrel3 to y-axis [0.00000] speed [5.00000];
		move barrel3 to z-axis [0.00000] speed [5.00000];
	}
	if( gun_1 == 3 )
	{
		move barrel4 to z-axis [4.50000] now;
		show flare4;
		sleep 50;
		hide flare4;
		move barrel4 to z-axis [0.00000] speed [5.00000];
	}
	if( gun_1 == 4 )
	{
		move barrel5 to y-axis [3.75000] now;
		move barrel5 to z-axis [2.25000] now;
		show flare5;
		sleep 50;
		hide flare5;
		move barrel5 to y-axis [0.00000] speed [5.00000];
		move barrel5 to z-axis [0.00000] speed [5.00000];
	}
	if( gun_1 == 5 )
	{
		move barrel6 to y-axis [3.75000] now;
		move barrel6 to z-axis [-2.25000] now;
		show flare6;
		sleep 50;
		hide flare6;
		move barrel6 to y-axis [0.00000] speed [5.00000];
		move barrel6 to z-axis [0.00000] speed [5.00000];
	}
	++gun_1;
	if( gun_1 == 6 )
	{
		gun_1 = flare1;
	}
	return (0);
}

TargetCleared(Func_Var_1)
{
	if( Func_Var_1 == 1 )
	{
		signal SIG_AIM;
		stop-spin turret around y-axis;
	}
	return (0);
}

QueryPrimary(piecenum)
{
	piecenum = gun_1;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = spindle;
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	hide flare1;
	hide flare2;
	hide flare3;
	hide flare4;
	hide flare5;
	hide flare6;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | NOHEATCLOUD;
		explode turret type SHATTER | BITMAP5 | NOHEATCLOUD;
		explode spindle type SHATTER | BITMAP5 | NOHEATCLOUD;
		explode tread1 type SHATTER | BITMAP5 | NOHEATCLOUD;
		explode tread2 type SHATTER | BITMAP5 | NOHEATCLOUD;
		explode tread3 type SHATTER | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | NOHEATCLOUD;
		explode turret type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode spindle type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode tread1 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode tread2 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode tread3 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | NOHEATCLOUD;
	explode turret type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode spindle type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode tread1 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode tread2 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode tread3 type FALL | SMOKE | SHATTER | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	return (corpsetype);
}
