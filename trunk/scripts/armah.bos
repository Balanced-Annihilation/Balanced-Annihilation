#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  Flare1, Flare2, Flare3, base, Box, wake1, wake2, wake3,
       wake4, wake5, wake6, wake7, wake8;

static-var  Static_Var_1, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5;

// Signal definitions
#define SIG_MOVE			4


SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

HitByWeapon(anglex, anglez)
{
	turn base to z-axis anglez speed <105.00000>;
	turn base to x-axis anglex speed <105.00000>;
	wait-for-turn base around z-axis;
	wait-for-turn base around x-axis;
	turn base to z-axis <0.00000> speed <30.00000>;
	turn base to x-axis <0.00000> speed <30.00000>;
	return (0);
}

StartMoving()
{
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( Static_Var_3 == 1 )
		{
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
		}
		if( Static_Var_3 == 2 )
		{
			emit-sfx 5 from wake1;
			emit-sfx 5 from wake2;
			emit-sfx 5 from wake3;
			emit-sfx 5 from wake4;
			emit-sfx 5 from wake5;
			emit-sfx 5 from wake6;
			emit-sfx 5 from wake7;
			emit-sfx 5 from wake8;
			emit-sfx 3 from wake1;
			emit-sfx 3 from wake2;
			emit-sfx 3 from wake3;
			emit-sfx 3 from wake4;
			emit-sfx 3 from wake5;
			emit-sfx 3 from wake6;
			emit-sfx 3 from wake7;
			emit-sfx 3 from wake8;
		}
		sleep 300;
	}
	return (0);
}

StopMoving()
{
	sleep 150;
	return (0);
}

setSFXoccupy(state)
{
	Static_Var_3 = state;
	return (0);
}

Create()
{
	Static_Var_1 = 0;
	Static_Var_5 = 0;
	Static_Var_4 = 5000;
	Static_Var_2 = 1;
	start-script SmokeUnit();
	return (0);
}

RestoreAfterDelay()
{
	sleep Static_Var_4;
	set-signal-mask 0;
	turn Box to y-axis <0.00000> speed <250.00000>;
	wait-for-turn Box around y-axis;
	move Box to y-axis [0.00000] speed [4.16565];
	turn Box to x-axis <0.00000> speed <50.00000>;
	wait-for-move Box along y-axis;
	wait-for-turn Box around x-axis;
	move Box to z-axis [0.00000] speed [2.77710];
	wait-for-move Box along z-axis;
	Static_Var_5 = 0;
	return (0);
}

AimWeapon2(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	if( Static_Var_5 == 0 )
	{
		move Box to z-axis [-1.11084] speed [2.77710];
		wait-for-move Box along z-axis;
		move Box to y-axis [2.77710] speed [4.16565];
		turn Box to x-axis <-22.00000> speed <50.00000>;
		wait-for-move Box along y-axis;
		wait-for-turn Box around x-axis;
	}
	Static_Var_5 = 1;
	turn Box to y-axis heading speed <250.00000>;
	wait-for-turn Box around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
	++Static_Var_2;
	if( Static_Var_2 == 4 )
	{
		Static_Var_2 = 1;
	}
	return (0);
}

AimFromWeapon1(piecenum)
{
	piecenum = Box;
	return (0);
}

QueryWeapon1(piecenum)
{
	if( Static_Var_2 == 1 )
	{
		piecenum = Flare1;
	}
	if( Static_Var_2 == 2 )
	{
		piecenum = Flare2;
	}
	if( Static_Var_2 == 3 )
	{
		piecenum = Flare3;
	}
	return (0);
}

AimFromWeapon2(piecenum)
{
	piecenum = Box;
	return (0);
}

QueryWeapon2(piecenum)
{
	if( Static_Var_2 == 1 )
	{
		piecenum = Flare1;
	}
	if( Static_Var_2 == 2 )
	{
		piecenum = Flare2;
	}
	if( Static_Var_2 == 3 )
	{
		piecenum = Flare3;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( Static_Var_3 == 1 )
	{
		if( severity <= 50 )
		{
			corpsetype = 2;
			explode base type SHATTER | NOHEATCLOUD;
			explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
			explode Flare1 type FALL | BITMAP3 | NOHEATCLOUD;
			explode Flare2 type FALL | BITMAP4 | NOHEATCLOUD;
			explode Flare3 type FALL | BITMAP5 | NOHEATCLOUD;
			return (corpsetype);
		}
		corpsetype = 3;
		explode base type SHATTER | NOHEATCLOUD;
		explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
		explode Flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode Flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode Flare3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( Static_Var_3 == 2 )
	{
		if( severity <= 50 )
		{
			corpsetype = 2;
			explode base type SHATTER | NOHEATCLOUD;
			explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
			explode Flare1 type FALL | BITMAP3 | NOHEATCLOUD;
			explode Flare2 type FALL | BITMAP4 | NOHEATCLOUD;
			explode Flare3 type FALL | BITMAP5 | NOHEATCLOUD;
			return (corpsetype);
		}
		corpsetype = 3;
		explode base type SHATTER | NOHEATCLOUD;
		explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
		explode Flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode Flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode Flare3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type SHATTER | NOHEATCLOUD;
		explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
		explode Flare1 type FALL | BITMAP3 | NOHEATCLOUD;
		explode Flare2 type FALL | BITMAP4 | NOHEATCLOUD;
		explode Flare3 type FALL | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type SHATTER | NOHEATCLOUD;
		explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
		explode Flare1 type FALL | BITMAP3 | NOHEATCLOUD;
		explode Flare2 type FALL | BITMAP4 | NOHEATCLOUD;
		explode Flare3 type FALL | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type SHATTER | NOHEATCLOUD;
		explode Box type SHATTER | BITMAP2 | NOHEATCLOUD;
		explode Flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
		explode Flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
		explode Flare3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type SHATTER | NOHEATCLOUD;
	explode Box type SHATTER | EXPLODE_ON_HIT | BITMAP2 | NOHEATCLOUD;
	explode Flare1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3 | NOHEATCLOUD;
	explode Flare2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4 | NOHEATCLOUD;
	explode Flare3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5 | NOHEATCLOUD;
	return (corpsetype);
}
