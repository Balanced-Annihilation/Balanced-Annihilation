#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, ruparm, luparm, rfire, lfire, rloarm, lloarm, pelvis,
       rthigh, lthigh, lleg, rleg, rfoot, lfoot, ground;

static-var  bMoving, bAiming, Static_Var_3, gun_1, restore_delay, moveSpeed, currentSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.539978] speed [4.608433] *  currentSpeed / 100;
		turn rthigh to x-axis <10.692308> speed <91.253318> *  currentSpeed / 100;
		turn lthigh to x-axis <-53.489011> speed <456.501042> *  currentSpeed / 100;
		turn torso to y-axis <5.747253> speed <49.049832> *  currentSpeed / 100;
		turn luparm to x-axis <38.670330> speed <330.031265> *  currentSpeed / 100;
		turn ruparm to x-axis <-18.093407> speed <154.417870> *  currentSpeed / 100;
		turn rloarm to x-axis <48.956044> speed <417.814513> *  currentSpeed / 100;
		turn lloarm to x-axis <48.956044> speed <417.814513> *  currentSpeed / 100;
		turn lleg to x-axis <53.489011> speed <456.501042> *  currentSpeed / 100;
		turn rleg to x-axis <53.489011> speed <456.501042> *  currentSpeed / 100;
		turn rfoot to x-axis <-37.846154> speed <322.997349> *  currentSpeed / 100;
		sleep 6800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [2.862388] *  currentSpeed / 100;
		turn rthigh to x-axis <-10.280220> speed <250.154250> *  currentSpeed / 100;
		turn lthigh to x-axis <-41.549451> speed <142.411619> *  currentSpeed / 100;
		turn torso to y-axis <3.280220> speed <29.426056> *  currentSpeed / 100;
		turn luparm to x-axis <32.093407> speed <78.447636> *  currentSpeed / 100;
		turn ruparm to x-axis <-11.093407> speed <83.493976> *  currentSpeed / 100;
		turn rloarm to x-axis <48.956044> now;
		turn lloarm to x-axis <48.956044> now;
		turn lleg to x-axis <41.967033> speed <137.430822> *  currentSpeed / 100;
		turn rleg to x-axis <81.879121> speed <338.629023> *  currentSpeed / 100;
		turn rfoot to x-axis <-31.258242> speed <78.578709> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.150000] speed [1.789157] *  currentSpeed / 100;
		turn rthigh to x-axis <-18.093407> speed <93.193435> *  currentSpeed / 100;
		turn lthigh to x-axis <-24.681319> speed <201.198201> *  currentSpeed / 100;
		turn torso to y-axis <0.000000> speed <39.125516> *  currentSpeed / 100;
		turn luparm to x-axis <27.148352> speed <58.983186> *  currentSpeed / 100;
		turn ruparm to x-axis <-7.401099> speed <44.040782> *  currentSpeed / 100;
		turn lleg to x-axis <24.681319> speed <206.178998> *  currentSpeed / 100;
		turn rleg to x-axis <85.582418> speed <44.171856> *  currentSpeed / 100;
		turn rfoot to x-axis <-23.027473> speed <98.174233> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [2.970000] *  currentSpeed / 100;
		turn rthigh to x-axis <-42.379121> speed <480.857137> *  currentSpeed / 100;
		turn lthigh to x-axis <5.335165> speed <594.326383> *  currentSpeed / 100;
		turn torso to y-axis <-3.280220> speed <64.948356> *  currentSpeed / 100;
		turn luparm to x-axis <8.214286> speed <374.894507> *  currentSpeed / 100;
		turn ruparm to x-axis <9.027473> speed <325.285726> *  currentSpeed / 100;
		turn rloarm to x-axis <48.956044> now;
		turn lloarm to x-axis <48.956044> now;
		turn lleg to x-axis <6.571429> speed <358.575822> *  currentSpeed / 100;
		turn lfoot to x-axis <-9.027473> speed <178.743965> *  currentSpeed / 100;
		turn rleg to x-axis <104.516484> speed <374.894507> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <455.943965> *  currentSpeed / 100;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <-69.945055> speed <328.798490> *  currentSpeed / 100;
		turn lthigh to x-axis <14.802198> speed <112.920032> *  currentSpeed / 100;
		turn torso to y-axis <-6.159341> speed <34.341323> *  currentSpeed / 100;
		turn luparm to x-axis <-3.692308> speed <142.018410> *  currentSpeed / 100;
		turn ruparm to x-axis <17.681319> speed <103.220573> *  currentSpeed / 100;
		turn lleg to x-axis <15.214286> speed <103.089499> *  currentSpeed / 100;
		turn lfoot to x-axis <-25.093407> speed <191.629815> *  currentSpeed / 100;
		turn rleg to x-axis <107.401099> speed <34.406854> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <-75.291209> speed <63.767379> *  currentSpeed / 100;
		turn lthigh to x-axis <20.137363> speed <63.636305> *  currentSpeed / 100;
		turn torso to y-axis <-8.214286> speed <24.510790> *  currentSpeed / 100;
		turn luparm to x-axis <-10.280220> speed <78.578709> *  currentSpeed / 100;
		turn ruparm to x-axis <25.093407> speed <88.409242> *  currentSpeed / 100;
		turn lleg to x-axis <26.324176> speed <132.515555> *  currentSpeed / 100;
		turn lfoot to x-axis <-33.725275> speed <102.958426> *  currentSpeed / 100;
		turn rleg to x-axis <64.604396> speed <510.466698> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.550000] speed [1.280172] *  currentSpeed / 100;
		turn rthigh to x-axis <-56.780220> speed <157.981716> *  currentSpeed / 100;
		turn lthigh to x-axis <24.258242> speed <35.169571> *  currentSpeed / 100;
		turn torso to y-axis <-6.159341> speed <17.537893> *  currentSpeed / 100;
		turn luparm to x-axis <-23.857143> speed <115.872015> *  currentSpeed / 100;
		turn ruparm to x-axis <31.258242> speed <52.613678> *  currentSpeed / 100;
		turn rloarm to x-axis <48.956044> now;
		turn lloarm to x-axis <48.956044> now;
		turn lleg to x-axis <38.670330> speed <105.368038> *  currentSpeed / 100;
		turn lfoot to x-axis <-38.670330> speed <42.203487> *  currentSpeed / 100;
		turn rleg to x-axis <56.780220> speed <66.775295> *  currentSpeed / 100;
		sleep 6800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [2.981928] *  currentSpeed / 100;
		turn rthigh to x-axis <-44.846154> speed <142.346088> *  currentSpeed / 100;
		turn lthigh to x-axis <5.335165> speed <225.708991> *  currentSpeed / 100;
		turn torso to y-axis <-3.280220> speed <34.341323> *  currentSpeed / 100;
		turn luparm to x-axis <-16.038462> speed <93.258966> *  currentSpeed / 100;
		turn ruparm to x-axis <19.725275> speed <137.561896> *  currentSpeed / 100;
		turn lleg to x-axis <67.071429> speed <338.760097> *  currentSpeed / 100;
		turn rfoot to x-axis <-12.324176> speed <146.999208> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.139978] speed [1.908696] *  currentSpeed / 100;
		turn rthigh to x-axis <-22.615385> speed <265.162184> *  currentSpeed / 100;
		turn lthigh to x-axis <-12.736264> speed <215.550780> *  currentSpeed / 100;
		turn torso to y-axis <0.000000> speed <39.125516> *  currentSpeed / 100;
		turn luparm to x-axis <-1.637363> speed <171.772145> *  currentSpeed / 100;
		turn ruparm to x-axis <10.280220> speed <112.657885> *  currentSpeed / 100;
		turn lleg to x-axis <79.412088> speed <147.195812> *  currentSpeed / 100;
		turn lfoot to x-axis <-27.967033> speed <127.665832> *  currentSpeed / 100;
		turn rleg to x-axis <37.027473> speed <235.605055> *  currentSpeed / 100;
		turn rfoot to x-axis <-15.626374> speed <39.387663> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [2.771564] *  currentSpeed / 100;
		turn rthigh to x-axis <2.868132> speed <504.573637> *  currentSpeed / 100;
		turn lthigh to x-axis <-42.379121> speed <586.928569> *  currentSpeed / 100;
		turn torso to y-axis <3.280220> speed <64.948356> *  currentSpeed / 100;
		turn luparm to x-axis <11.505495> speed <260.228588> *  currentSpeed / 100;
		turn ruparm to x-axis <1.225275> speed <179.287911> *  currentSpeed / 100;
		turn rloarm to x-axis <48.956044> now;
		turn lloarm to x-axis <48.956044> now;
		turn lleg to x-axis <90.104396> speed <211.707698> *  currentSpeed / 100;
		turn lfoot to x-axis <-15.214286> speed <252.504391> *  currentSpeed / 100;
		turn rleg to x-axis <6.571429> speed <603.029671> *  currentSpeed / 100;
		turn rfoot to x-axis <-9.434066> speed <122.607698> *  currentSpeed / 100;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.189978] speed [2.266003] *  currentSpeed / 100;
		turn rthigh to x-axis <13.159341> speed <122.750565> *  currentSpeed / 100;
		turn lthigh to x-axis <-57.192308> speed <176.687411> *  currentSpeed / 100;
		turn torso to y-axis <6.159341> speed <34.341323> *  currentSpeed / 100;
		turn luparm to x-axis <21.390110> speed <117.900830> *  currentSpeed / 100;
		turn ruparm to x-axis <-6.989011> speed <97.977628> *  currentSpeed / 100;
		turn rfoot to x-axis <-19.324176> speed <117.966372> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	move pelvis to y-axis [-0.400000] speed [2.505082] *  currentSpeed / 100;
	turn rthigh to x-axis <16.445055> speed <39.191047> *  currentSpeed / 100;
	turn lthigh to x-axis <-67.071429> speed <117.835299> *  currentSpeed / 100;
	turn torso to y-axis <8.214286> speed <24.510790> *  currentSpeed / 100;
	turn luparm to x-axis <25.093407> speed <44.171856> *  currentSpeed / 100;
	turn ruparm to x-axis <-12.324176> speed <63.636305> *  currentSpeed / 100;
	turn lleg to x-axis <55.549451> speed <412.161392> *  currentSpeed / 100;
	turn lfoot to x-axis <-2.868132> speed <147.261355> *  currentSpeed / 100;
	turn rleg to x-axis <24.681319> speed <216.009531> *  currentSpeed / 100;
	turn rfoot to x-axis <-33.324176> speed <166.987952> *  currentSpeed / 100;
	sleep 5300 / currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [-0.539978] speed [1.194640] *  currentSpeed / 100;
		turn rthigh to x-axis <10.692308> speed <49.096720> *  currentSpeed / 100;
		turn lthigh to x-axis <-53.489011> speed <115.918912> *  currentSpeed / 100;
		turn lleg to x-axis <53.489011> speed <17.584790> *  currentSpeed / 100;
		turn rleg to x-axis <53.489011> speed <245.858751> *  currentSpeed / 100;
		turn rfoot to x-axis <-37.846154> speed <38.592743> *  currentSpeed / 100;
		sleep 6800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [2.862388] *  currentSpeed / 100;
		turn rthigh to x-axis <-10.280220> speed <250.154250> *  currentSpeed / 100;
		turn lthigh to x-axis <-41.549451> speed <142.411619> *  currentSpeed / 100;
		turn lleg to x-axis <41.967033> speed <137.430822> *  currentSpeed / 100;
		turn rleg to x-axis <81.879121> speed <338.629023> *  currentSpeed / 100;
		turn rfoot to x-axis <-31.258242> speed <78.578709> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.150000] speed [1.789157] *  currentSpeed / 100;
		turn rthigh to x-axis <-18.093407> speed <93.193435> *  currentSpeed / 100;
		turn lthigh to x-axis <-24.681319> speed <201.198201> *  currentSpeed / 100;
		turn lleg to x-axis <24.681319> speed <206.178998> *  currentSpeed / 100;
		turn rleg to x-axis <85.582418> speed <44.171856> *  currentSpeed / 100;
		turn rfoot to x-axis <-23.027473> speed <98.174233> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [2.970000] *  currentSpeed / 100;
		turn rthigh to x-axis <-42.379121> speed <480.857137> *  currentSpeed / 100;
		turn lthigh to x-axis <5.335165> speed <594.326383> *  currentSpeed / 100;
		turn lleg to x-axis <6.571429> speed <358.575822> *  currentSpeed / 100;
		turn lfoot to x-axis <-9.027473> speed <121.954952> *  currentSpeed / 100;
		turn rleg to x-axis <104.516484> speed <374.894507> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <455.943965> *  currentSpeed / 100;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <-69.945055> speed <328.798490> *  currentSpeed / 100;
		turn lthigh to x-axis <14.802198> speed <112.920032> *  currentSpeed / 100;
		turn lleg to x-axis <15.214286> speed <103.089499> *  currentSpeed / 100;
		turn lfoot to x-axis <-25.093407> speed <191.629815> *  currentSpeed / 100;
		turn rleg to x-axis <107.401099> speed <34.406854> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		turn rthigh to x-axis <-75.291209> speed <63.767379> *  currentSpeed / 100;
		turn lthigh to x-axis <20.137363> speed <63.636305> *  currentSpeed / 100;
		turn lleg to x-axis <26.324176> speed <132.515555> *  currentSpeed / 100;
		turn lfoot to x-axis <-33.725275> speed <102.958426> *  currentSpeed / 100;
		turn rleg to x-axis <64.604396> speed <510.466698> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.550000] speed [1.280172] *  currentSpeed / 100;
		turn rthigh to x-axis <-56.780220> speed <157.981716> *  currentSpeed / 100;
		turn lthigh to x-axis <24.258242> speed <35.169571> *  currentSpeed / 100;
		turn lleg to x-axis <38.670330> speed <105.368038> *  currentSpeed / 100;
		turn lfoot to x-axis <-38.670330> speed <42.203487> *  currentSpeed / 100;
		turn rleg to x-axis <56.780220> speed <66.775295> *  currentSpeed / 100;
		sleep 6800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.300000] speed [2.981928] *  currentSpeed / 100;
		turn rthigh to x-axis <-44.846154> speed <142.346088> *  currentSpeed / 100;
		turn lthigh to x-axis <5.335165> speed <225.708991> *  currentSpeed / 100;
		turn lleg to x-axis <67.071429> speed <338.760097> *  currentSpeed / 100;
		turn rfoot to x-axis <-12.324176> speed <146.999208> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.139978] speed [1.908696] *  currentSpeed / 100;
		turn rthigh to x-axis <-22.615385> speed <265.162184> *  currentSpeed / 100;
		turn lthigh to x-axis <-12.736264> speed <215.550780> *  currentSpeed / 100;
		turn lleg to x-axis <79.412088> speed <147.195812> *  currentSpeed / 100;
		turn lfoot to x-axis <-27.967033> speed <127.665832> *  currentSpeed / 100;
		turn rleg to x-axis <37.027473> speed <235.605055> *  currentSpeed / 100;
		turn rfoot to x-axis <-15.626374> speed <39.387663> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [2.771564] *  currentSpeed / 100;
		turn rthigh to x-axis <2.868132> speed <504.573637> *  currentSpeed / 100;
		turn lthigh to x-axis <-42.379121> speed <586.928569> *  currentSpeed / 100;
		turn lleg to x-axis <90.104396> speed <211.707698> *  currentSpeed / 100;
		turn lfoot to x-axis <-15.214286> speed <252.504391> *  currentSpeed / 100;
		turn rleg to x-axis <6.571429> speed <603.029671> *  currentSpeed / 100;
		turn rfoot to x-axis <-9.434066> speed <122.607698> *  currentSpeed / 100;
		sleep 3000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-0.189978] speed [2.266003] *  currentSpeed / 100;
		turn rthigh to x-axis <13.159341> speed <122.750565> *  currentSpeed / 100;
		turn lthigh to x-axis <-57.192308> speed <176.687411> *  currentSpeed / 100;
		turn rfoot to x-axis <-19.324176> speed <117.966372> *  currentSpeed / 100;
		sleep 3800 / currentSpeed;
	}
	move pelvis to y-axis [-0.400000] speed [2.505082] *  currentSpeed / 100;
	turn rthigh to x-axis <16.445055> speed <39.191047> *  currentSpeed / 100;
	turn lthigh to x-axis <-67.071429> speed <117.835299> *  currentSpeed / 100;
	turn lleg to x-axis <55.549451> speed <412.161392> *  currentSpeed / 100;
	turn lfoot to x-axis <-2.868132> speed <147.261355> *  currentSpeed / 100;
	turn rleg to x-axis <24.681319> speed <216.009531> *  currentSpeed / 100;
	turn rfoot to x-axis <-33.324176> speed <166.987952> *  currentSpeed / 100;
	sleep 5300 / currentSpeed;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn rfoot to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				turn lfoot to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
					turn rloarm to x-axis <90.016484> speed <200.000000>;
					turn ruparm to x-axis <0.000000> speed <200.000000>;
					turn lloarm to x-axis <90.016484> speed <200.000000>;
					turn luparm to x-axis <0.000000> speed <200.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide rfire;
	hide lfire;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = 0;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	restore_delay = 3000;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.000000>;
	turn rloarm to x-axis <90.016484> speed <45.000000>;
	turn lloarm to x-axis <90.016484> speed <45.000000>;
	turn ruparm to x-axis <0.000000> speed <45.000000>;
	turn luparm to x-axis <0.000000> speed <45.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	if( gun_1 )
	{
		piecenum = luparm;
	}
	else
	{
		piecenum = ruparm;
	}
}

QueryPrimary(piecenum)
{
	piecenum = rfire + gun_1;
}

FirePrimary()
{
	if( gun_1 )
	{
		show lfire;
		sleep 100;
		hide lfire;
	}
	else
	{
		show rfire;
		sleep 100;
		hide rfire;
	}
	gun_1 = !gun_1;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 65;
	}
	turn torso to y-axis heading speed <300.000000>;
	turn lloarm to x-axis <0.000000> speed <300.000000>;
	turn rloarm to x-axis <0.000000> speed <300.000000>;
	turn luparm to x-axis <0.000000> - pitch speed <300.000000>;
	turn ruparm to x-axis <0.000000> - pitch speed <300.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn lloarm around x-axis;
	wait-for-turn rloarm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn ruparm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Killed(severity, corpsetype)
{
	hide rfire;
	hide lfire;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode lfire type BITMAPONLY | BITMAP2;
		explode lfoot type BITMAPONLY | BITMAP3;
		explode lleg type BITMAPONLY | BITMAP4;
		explode lloarm type BITMAPONLY | BITMAP5;
		explode lthigh type BITMAPONLY | BITMAP1;
		explode luparm type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfire type BITMAPONLY | BITMAP4;
		explode rfoot type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rloarm type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode ruparm type BITMAPONLY | BITMAP4;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode lfire type FALL | BITMAP2;
		explode lloarm type FALL | BITMAP5;
		explode lthigh type FALL | BITMAP1;
		explode luparm type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfire type FALL | BITMAP4;
		explode rloarm type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode ruparm type FALL | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | BITMAP1;
		explode lfoot type FALL | SMOKE | FIRE | BITMAP3;
		explode lleg type FALL | SMOKE | FIRE | BITMAP4;
		explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lthigh type FALL | SMOKE | FIRE | BITMAP1;
		explode luparm type FALL | SMOKE | FIRE | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | BITMAP1;
		explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | BITMAP3;
		explode ruparm type FALL | SMOKE | FIRE | BITMAP4;
		explode torso type SHATTER | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | BITMAP1;
	explode lfoot type FALL | SMOKE | FIRE | BITMAP3;
	explode lleg type FALL | SMOKE | FIRE | BITMAP4;
	explode lloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lthigh type FALL | SMOKE | FIRE | BITMAP1;
	explode luparm type FALL | SMOKE | FIRE | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | BITMAP1;
	explode rloarm type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | BITMAP3;
	explode ruparm type FALL | SMOKE | FIRE | BITMAP4;
	explode torso type SHATTER | BITMAP5;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP5;
}
