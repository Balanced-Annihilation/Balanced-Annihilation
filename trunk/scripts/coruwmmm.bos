#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, base, cap, glowingthing, pylon1, pylon2, pylon3, pylon4,
       bubble1, bubble2, bubble3, bubble4, bubble5, bubble6, bubble7, bubble8;

static-var  Static_Var_1;

#define WHAT_DO 1024

activatescr()
{
	if( TRUE )
	{
		turn cap to y-axis <45.010989> speed <84.000000>;
		sleep 266;
	}
	if( TRUE )
	{
		move cap to y-axis [-16.050000] speed [30.000000];
		sleep 267;
	}
	if( TRUE )
	{
		turn cap to z-axis <-180.043956> speed <338.000000>;
		sleep 266;
	}
	if( TRUE )
	{
		move cap to y-axis [-0.700000] speed [28.000000];
		sleep 266;
	}
	sleep 266;
	return (0);
	// Build by COBBLER Ver4.0 Copyright @1998 DIGITAL CONCEPT SOFTWARE (MANU@inext.fr) / http://www.annihilationcenter.com/DCS/  
}

deactivatescr()
{
	if( TRUE )
	{
		move cap to y-axis [-0.700000] now;
		move cap to y-axis [-16.050000] speed [28.000000];
		turn cap to y-axis <45.010989> now;
		turn cap to z-axis <-180.043956> now;
		sleep 265;
	}
	if( TRUE )
	{
		turn cap to z-axis <0.000000> speed <338.000000>;
		sleep 266;
	}
	if( TRUE )
	{
		move cap to y-axis [0.000000] speed [30.000000];
		sleep 266;
	}
	if( TRUE )
	{
		turn cap to y-axis <0.000000> speed <84.000000>;
		sleep 266;
	}
	sleep 266;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Bubble(Func_Var_1)
{
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble1;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble2;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble3;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble4;
	}
	sleep 100;
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble5;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble6;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble7;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble8;
	}
	sleep 1000;
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble1;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble2;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble3;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble4;
	}
	sleep 100;
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble5;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble6;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble7;
	}
	Func_Var_1 = Rand( 1, 3 );
	if( Func_Var_1 == 1 )
	{
		emit-sfx 259 from bubble8;
	}
}

Go()
{
	dont-cache cap;
	dont-cache glowingthing;
	start-script Bubble();
	call-script activatescr();
	set ARMORED to 0;
}

Stop()
{
	set ARMORED to 1;
	call-script deactivatescr();
	cache cap;
	cache glowingthing;
}

static-var  mmState;
ImAMetalMaker()
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 150;
	}
	mmState = -1;
	while( TRUE )
	{
		if ((get WHAT_DO) == 1)
		{
			if (mmState != 1) {
				call-script Go();
				mmState = 1;
			}
		}
		else
		{
			if (mmState != 0) {
				call-script Stop();
				mmState = 0;
			}
		}
		sleep 1000;
	}
}

Create()
{
	dont-shade glowingthing;
	cache glowingthing;
	dont-shade base;
	dont-shade cap;
	start-script SmokeUnit();
	Static_Var_1 = 0;
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 1000;
	}
	set ARMORED to 1;
	start-script ImAMetalMaker();
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type BITMAPONLY | BITMAP1;
		explode glowingthing type BITMAPONLY | BITMAP2;
		explode pylon1 type BITMAPONLY | BITMAP3;
		explode pylon2 type BITMAPONLY | BITMAP4;
		explode pylon3 type BITMAPONLY | BITMAP5;
		explode pylon4 type BITMAPONLY | BITMAP1;
		explode cap type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode pylon1 type FALL | BITMAP3;
		explode pylon2 type FALL | BITMAP4;
		explode pylon3 type FALL | BITMAP5;
		explode pylon4 type FALL | BITMAP1;
		explode cap type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type BITMAPONLY | BITMAP1;
		explode glowingthing type SHATTER | BITMAP2;
		explode pylon1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pylon2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode pylon3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode pylon4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode cap type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode base type BITMAPONLY | BITMAP1;
	explode glowingthing type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode pylon1 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pylon2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode pylon3 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode pylon4 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode cap type BITMAPONLY | BITMAP2;
}
