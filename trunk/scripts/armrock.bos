#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, lbarrel, lmisspod, rshield, pelvis, rfoot, lfoot, lthigh,
       rthigh, lleg, rleg, ground, lfirept2, exhaust;

static-var  bMoving, bAiming, Static_Var_3, restore_delay, moveSpeed, currentSpeed;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.350000] now;
		move torso to y-axis [0.000000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn pelvis to z-axis <0.021978> now;
		turn torso to z-axis <-8.087912> now;
		turn lthigh to x-axis <-5.868132> now;
		turn rthigh to x-axis <8.379121> now;
		turn rfoot to x-axis <-8.379121> now;
		turn rfoot to z-axis <7.961538> now;
		turn lleg to x-axis <48.626374> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.250000] now;
		turn pelvis to y-axis <-2.934066> now;
		turn pelvis to z-axis <0.109890> now;
		turn torso to z-axis <-5.626374> now;
		turn lthigh to x-axis <-15.087912> now;
		turn rthigh to x-axis <10.060440> now;
		turn rfoot to x-axis <-6.285714> now;
		turn rfoot to z-axis <5.445055> now;
		turn lleg to x-axis <22.214286> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		turn pelvis to y-axis <-6.285714> now;
		turn pelvis to z-axis <0.148352> now;
		turn torso to z-axis <-2.109890> now;
		turn lthigh to x-axis <-24.313187> now;
		turn rthigh to x-axis <12.153846> now;
		turn rfoot to x-axis <-9.219780> now;
		turn rfoot to z-axis <7.961538> now;
		turn lleg to x-axis <9.637363> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.050000] now;
		turn pelvis to y-axis <-9.219780> now;
		turn pelvis to z-axis <0.060440> now;
		turn torso to z-axis <1.406593> now;
		turn rleg to x-axis <18.021978> now;
		turn rfoot to x-axis <-12.994505> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move torso to y-axis [-0.399994] now;
		turn pelvis to y-axis <-12.153846> now;
		turn pelvis to z-axis <-0.027473> now;
		turn torso to z-axis <4.219780> now;
		turn lthigh to x-axis <-27.247253> now;
		turn rthigh to x-axis <24.313187> now;
		turn rleg to x-axis <20.120879> now;
		turn rfoot to x-axis <-5.868132> now;
		turn rfoot to z-axis <0.000000> now;
		turn lleg to x-axis <30.598901> now;
		turn lfoot to x-axis <-3.351648> now;
		turn lfoot to z-axis <-2.510989> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [-0.199994] now;
		turn pelvis to y-axis <-10.043956> now;
		turn pelvis to z-axis <-0.027473> now;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		move torso to y-axis [0.000000] now;
		turn pelvis to y-axis <-6.285714> now;
		turn pelvis to z-axis <-0.038462> now;
		turn torso to z-axis <6.329670> now;
		turn lthigh to x-axis <-15.928571> now;
		turn rthigh to x-axis <15.087912> now;
		turn rleg to x-axis <26.406593> now;
		turn lfoot to x-axis <-14.247253> now;
		turn lfoot to z-axis <-6.285714> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.250000] now;
		turn pelvis to y-axis <-2.934066> now;
		turn pelvis to z-axis <0.087912> now;
		turn torso to z-axis <7.032967> now;
		turn lthigh to x-axis <-9.637363> now;
		turn rthigh to x-axis <5.027473> now;
		turn rleg to x-axis <9.637363> now;
		turn lleg to x-axis <23.054945> now;
		turn lfoot to x-axis <-12.571429> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.350000] now;
		turn pelvis to y-axis <0.000000> now;
		turn pelvis to z-axis <-0.054945> now;
		turn torso to z-axis <8.439560> now;
		turn lthigh to x-axis <16.763736> now;
		turn rthigh to x-axis <-5.868132> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn lfoot to x-axis <-7.543956> now;
		turn lfoot to z-axis <-7.961538> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		turn pelvis to y-axis <6.285714> now;
		turn pelvis to z-axis <-0.010989> now;
		turn torso to z-axis <2.109890> now;
		turn lthigh to x-axis <20.120879> now;
		turn rthigh to x-axis <-12.571429> now;
		turn lleg to x-axis <5.027473> now;
		turn lfoot to x-axis <-11.736264> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.050000] now;
		turn pelvis to y-axis <9.219780> now;
		turn pelvis to z-axis <0.148352> now;
		turn torso to z-axis <-1.054945> now;
		turn rthigh to x-axis <-20.538462> now;
		turn lleg to x-axis <16.346154> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		move torso to y-axis [-0.399994] now;
		turn pelvis to y-axis <12.153846> now;
		turn pelvis to z-axis <-0.038462> now;
		turn torso to z-axis <-4.923077> now;
		turn lthigh to x-axis <24.313187> now;
		turn rthigh to x-axis <-27.247253> now;
		turn rleg to x-axis <30.598901> now;
		turn rfoot to x-axis <-4.186813> now;
		turn rfoot to z-axis <4.186813> now;
		turn lleg to x-axis <20.956044> now;
		turn lfoot to x-axis <-7.543956> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move torso to y-axis [-0.199994] now;
		turn pelvis to y-axis <10.043956> now;
		turn pelvis to z-axis <-0.038462> now;
		turn torso to z-axis <-4.571429> now;
		sleep 2000 / currentSpeed;
	}
	move torso to y-axis [0.000000] now;
	turn pelvis to y-axis <6.285714> now;
	turn pelvis to z-axis <0.038462> now;
	turn torso to z-axis <-6.329670> now;
	turn lthigh to x-axis <14.247253> now;
	turn rthigh to x-axis <-21.796703> now;
	turn rfoot to x-axis <-7.543956> now;
	turn rfoot to z-axis <5.868132> now;
	turn lleg to x-axis <33.950549> now;
	sleep 8000 / currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.350000] now;
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		turn pelvis to y-axis <0.000000> now;
		turn pelvis to z-axis <0.021978> now;
		turn lthigh to x-axis <-5.868132> now;
		turn rthigh to x-axis <8.379121> now;
		turn rfoot to x-axis <-8.379121> now;
		turn rfoot to z-axis <7.961538> now;
		turn lleg to x-axis <48.626374> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.250000] now;
		turn pelvis to y-axis <-2.934066> now;
		turn pelvis to z-axis <0.109890> now;
		turn lthigh to x-axis <-15.087912> now;
		turn rthigh to x-axis <10.060440> now;
		turn rfoot to x-axis <-6.285714> now;
		turn rfoot to z-axis <5.445055> now;
		turn lleg to x-axis <22.214286> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		turn pelvis to y-axis <-6.285714> now;
		turn pelvis to z-axis <0.148352> now;
		turn lthigh to x-axis <-24.313187> now;
		turn rthigh to x-axis <12.153846> now;
		turn rfoot to x-axis <-9.219780> now;
		turn rfoot to z-axis <7.961538> now;
		turn lleg to x-axis <9.637363> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.050000] now;
		turn pelvis to y-axis <-9.219780> now;
		turn pelvis to z-axis <0.060440> now;
		turn rleg to x-axis <18.021978> now;
		turn rfoot to x-axis <-12.994505> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <-12.153846> now;
		turn pelvis to z-axis <-0.027473> now;
		turn lthigh to x-axis <-27.247253> now;
		turn rthigh to x-axis <24.313187> now;
		turn rleg to x-axis <20.120879> now;
		turn rfoot to x-axis <-5.868132> now;
		turn rfoot to z-axis <0.000000> now;
		turn lleg to x-axis <30.598901> now;
		turn lfoot to x-axis <-3.351648> now;
		turn lfoot to z-axis <-2.510989> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		turn pelvis to y-axis <-6.285714> now;
		turn pelvis to z-axis <-0.038462> now;
		turn lthigh to x-axis <-15.928571> now;
		turn rthigh to x-axis <15.087912> now;
		turn rleg to x-axis <26.406593> now;
		turn lfoot to x-axis <-14.247253> now;
		turn lfoot to z-axis <-6.285714> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.250000] now;
		turn pelvis to y-axis <-2.934066> now;
		turn pelvis to z-axis <0.087912> now;
		turn lthigh to x-axis <-9.637363> now;
		turn rthigh to x-axis <5.027473> now;
		turn rleg to x-axis <9.637363> now;
		turn lleg to x-axis <23.054945> now;
		turn lfoot to x-axis <-12.571429> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.350000] now;
		turn pelvis to y-axis <0.000000> now;
		turn pelvis to z-axis <-0.054945> now;
		turn lthigh to x-axis <16.763736> now;
		turn rthigh to x-axis <-5.868132> now;
		turn rleg to x-axis <0.000000> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <0.000000> now;
		turn lfoot to x-axis <-7.543956> now;
		turn lfoot to z-axis <-7.961538> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.150000] now;
		turn pelvis to y-axis <6.285714> now;
		turn pelvis to z-axis <-0.010989> now;
		turn lthigh to x-axis <20.120879> now;
		turn rthigh to x-axis <-12.571429> now;
		turn lleg to x-axis <5.027473> now;
		turn lfoot to x-axis <-11.736264> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.050000] now;
		turn pelvis to y-axis <9.219780> now;
		turn pelvis to z-axis <0.148352> now;
		turn rthigh to x-axis <-20.538462> now;
		turn lleg to x-axis <16.346154> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] now;
		turn pelvis to y-axis <12.153846> now;
		turn pelvis to z-axis <-0.038462> now;
		turn lthigh to x-axis <24.313187> now;
		turn rthigh to x-axis <-27.247253> now;
		turn rleg to x-axis <30.598901> now;
		turn rfoot to x-axis <-4.186813> now;
		turn rfoot to z-axis <4.186813> now;
		turn lleg to x-axis <20.956044> now;
		turn lfoot to x-axis <-7.543956> now;
		sleep 8000 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to y-axis <10.043956> now;
		turn pelvis to z-axis <-0.038462> now;
		sleep 2000 / currentSpeed;
	}
	turn pelvis to y-axis <6.285714> now;
	turn pelvis to z-axis <0.038462> now;
	turn lthigh to x-axis <14.247253> now;
	turn rthigh to x-axis <-21.796703> now;
	turn rfoot to x-axis <-7.543956> now;
	turn rfoot to z-axis <5.868132> now;
	turn lleg to x-axis <33.950549> now;
	sleep 8000 / currentSpeed;
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			else
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		else
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn rfoot to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				turn lfoot to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.021978>;
					turn lmisspod to x-axis <0.000000> speed <200.043956>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	restore_delay = 3000;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1 * 2;
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn torso to y-axis <0.000000> speed <90.021978>;
	turn lmisspod to x-axis <0.000000> speed <45.010989>;
	wait-for-turn torso around y-axis;
	wait-for-turn lmisspod around x-axis;
	bAiming = FALSE;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	piecenum = lbarrel;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <130.027473>;
	turn lmisspod to x-axis <-90.021978> speed <95.021978>;
	wait-for-turn torso around y-axis;
	wait-for-turn lmisspod around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	move lbarrel to y-axis [1.500000] speed [25.000000];
	wait-for-move lbarrel along y-axis;
	emit-sfx 1024 + 0 from exhaust;
	move lbarrel to y-axis [0.000000] speed [0.750000];
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode lbarrel type BITMAPONLY | BITMAP2;
		explode lfirept2 type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lleg type BITMAPONLY | BITMAP5;
		explode lmisspod type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rleg type BITMAPONLY | BITMAP5;
		explode rshield type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP3;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode lbarrel type FALL | BITMAP2;
		explode lfirept2 type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lleg type FALL | BITMAP5;
		explode lmisspod type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rleg type FALL | BITMAP5;
		explode rshield type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode torso type SHATTER | BITMAP3;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode lfirept2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lmisspod type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rshield type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type SHATTER | BITMAP3;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lbarrel type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept2 type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lmisspod type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rshield type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type SHATTER | EXPLODE_ON_HIT | BITMAP3;
}
