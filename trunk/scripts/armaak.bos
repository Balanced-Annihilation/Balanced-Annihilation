#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  ground, pelvis, rthigh, rleg, lthigh, lleg, torso, turret,
       flak, flak_fire, turret_fire, rmiss, rmiss_fire, lmiss, lmiss_fire;

static-var  bMoving, Static_Var_2, Static_Var_3, Static_Var_4, Static_Var_5,
            Static_Var_6, Static_Var_7;


walk()
{
	while( bMoving )
	{
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move lleg to y-axis [0.000000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <36.000000> now;
			turn lthigh to x-axis <-35.000000> now;
			turn lleg to x-axis <35.000000> now;
			turn rleg to x-axis <26.000000> now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 50;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move torso to y-axis [0.000000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <20.000000> speed <170.686813>;
			turn lthigh to x-axis <-31.000000> speed <264.565934>;
			turn lleg to x-axis <30.000000> speed <256.032967>;
			turn rleg to x-axis <27.000000> speed <230.428571>;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move rleg to y-axis [1.000000] speed [11.927710];
			turn rthigh to x-axis <9.000000> speed <131.203297>;
			turn lthigh to x-axis <-24.000000> speed <83.489011>;
			turn lleg to x-axis <25.000000> speed <59.637363>;
			turn rleg to x-axis <27.000000> now;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [-1.000000] speed [11.927710];
			turn rthigh to x-axis <-12.000000> speed <250.478022>;
			turn lthigh to x-axis <-7.000000> speed <202.769231>;
			turn lleg to x-axis <7.000000> speed <214.697802>;
			turn rleg to x-axis <26.000000> speed <11.923077>;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] speed [11.927710];
			move rleg to y-axis [1.000000] now;
			turn rthigh to x-axis <-21.000000> speed <107.346154>;
			turn lthigh to x-axis <5.000000> speed <143.131868>;
			turn lleg to x-axis <17.000000> speed <119.274725>;
			turn rleg to x-axis <26.000000> now;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <-29.000000> speed <95.417582>;
			turn lthigh to x-axis <16.000000> speed <131.203297>;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <-44.000000> speed <178.912088>;
			turn lthigh to x-axis <19.000000> speed <35.780220>;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <-54.000000> speed <85.340659>;
			turn lthigh to x-axis <26.000000> speed <59.736264>;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move rleg to y-axis [0.000000] now;
			turn rthigh to x-axis <-36.000000> now;
			turn lthigh to x-axis <28.000000> now;
			turn lleg to x-axis <16.000000> now;
			turn rleg to x-axis <36.000000> now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 50;
		}
		if( bMoving )
		{
			move torso to y-axis [0.000000] now;
			sleep 20;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move torso to y-axis [0.000000] now;
			move lleg to y-axis [1.000000] speed [8.534479];
			turn rthigh to x-axis <-28.000000> speed <221.895604>;
			turn lthigh to x-axis <21.000000> speed <42.670330>;
			turn lleg to x-axis <22.000000> speed <42.670330>;
			turn rleg to x-axis <28.000000> speed <17.065934>;
			sleep 70;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <-22.000000> speed <71.565934>;
			turn lthigh to x-axis <8.000000> speed <155.054945>;
			turn lleg to x-axis <24.000000> speed <23.851648>;
			turn rleg to x-axis <22.000000> speed <71.565934>;
			sleep 60;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <-16.000000> speed <71.565934>;
			turn lthigh to x-axis <-7.000000> speed <178.912088>;
			turn rleg to x-axis <17.000000> speed <59.637363>;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			move lleg to y-axis [1.000000] now;
			turn rthigh to x-axis <-7.000000> speed <107.346154>;
			turn lthigh to x-axis <-15.000000> speed <95.417582>;
			turn lleg to x-axis <20.000000> speed <47.708791>;
			turn rleg to x-axis <25.000000> speed <95.417582>;
			sleep 40;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <3.000000> speed <119.274725>;
			turn lthigh to x-axis <-26.000000> speed <131.203297>;
			sleep 50;
		}
		if( bMoving )
		{
			move pelvis to y-axis [0.000000] now;
			turn rthigh to x-axis <10.000000> speed <83.489011>;
			turn lthigh to x-axis <-35.000000> speed <107.346154>;
			sleep 60;
		}
		move pelvis to y-axis [0.000000] now;
		turn rthigh to x-axis <21.000000> speed <93.879121>;
		turn lthigh to x-axis <-56.000000> speed <179.219780>;
		sleep 70;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = Static_Var_2;
		if( moving )
		{
			call-script walk();
			justmoved = TRUE;
		}
		if( !moving )
		{
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.000000>;
				turn rleg to x-axis <0.000000> speed <200.000000>;
				turn lthigh to x-axis <0.000000> speed <200.000000>;
				turn lleg to x-axis <0.000000> speed <200.000000>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.000000>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	hide flak_fire;
	hide turret_fire;
	hide lmiss_fire;
	hide rmiss_fire;
	bMoving = FALSE;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

RestoreAfterDelay()
{
	sleep 5000;
	set-signal-mask 0;
	turn turret to y-axis <0.000000> speed <90.000000>;
	turn flak to x-axis <0.000000> speed <90.000000>;
	turn lmiss to x-axis <0.000000> speed <90.000000>;
	turn rmiss to x-axis <0.000000> speed <90.000000>;
	turn torso to y-axis <0.000000> speed <90.000000>;
}

QueryWeapon1(piecenum)
{
	piecenum = turret_fire;
}

AimFromWeapon1(piecenum)
{
	piecenum = turret;
}

QueryWeapon2(piecenum)
{
	piecenum = turret_fire;
}

AimFromWeapon2(piecenum)
{
	piecenum = turret;
}

AimWeapon2(heading, pitch)
{
	signal 2;
	set-signal-mask 2;
	turn turret to y-axis heading speed <250.000000>;
	wait-for-turn turret around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon2()
{
}

QueryWeapon3(piecenum)
{
	piecenum = rmiss_fire;
}

AimFromWeapon3(piecenum)
{
	piecenum = torso;
}

AimWeapon3(heading, pitch)
{
	signal 4;
	set-signal-mask 4;
	turn torso to y-axis heading speed <300.000000>;
	turn lmiss to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn lmiss around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon3()
{
}

QueryWeapon4(piecenum)
{
	piecenum = lmiss_fire;
}

AimFromWeapon4(piecenum)
{
	piecenum = torso;
}

AimWeapon4(heading, pitch)
{
	signal 8;
	set-signal-mask 8;
	turn torso to y-axis heading speed <300.000000>;
	turn rmiss to x-axis <0.000000> - pitch speed <250.000000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rmiss around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon4()
{
}

QueryWeapon5(piecenum)
{
	piecenum = flak_fire;
}

AimFromWeapon5(piecenum)
{
	piecenum = flak;
}

AimWeapon5(heading, pitch)
{
	signal 16;
	set-signal-mask 16;
	turn flak to x-axis <0.000000> - pitch speed <350.000000>;
	wait-for-turn flak around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireWeapon5()
{
	show flak_fire;
	sleep 100;
	hide flak_fire;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode pelvis type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP3;
		explode rleg type BITMAPONLY | BITMAP4;
		explode lthigh type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode torso type BITMAPONLY | BITMAP2;
		explode turret type BITMAPONLY | BITMAP4;
		explode flak type BITMAPONLY | BITMAP5;
		explode rmiss type BITMAPONLY | BITMAP1;
		explode lmiss type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode pelvis type FALL | BITMAP2;
		explode rthigh type FALL | BITMAP3;
		explode rleg type FALL | BITMAP4;
		explode lthigh type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode torso type FALL | BITMAP2;
		explode turret type FALL | BITMAP3;
		explode flak type FALL | BITMAP4;
		explode rmiss type FALL | BITMAP5;
		explode lmiss type FALL | BITMAP1;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode flak type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rmiss type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lmiss type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode torso type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode turret type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode flak type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rmiss type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lmiss type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
}
