#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  torso, gun, rfirept, lfirept, rgun, lgun, pelvis, rleg,
       rfoot, lleg, lfoot, lthigh, rthigh, ground;

static-var  bMoving, bAiming, Static_Var_3, gun_1;

// Signal definitions
#define SIG_AIM				4


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.950000] now;
		move torso to y-axis [0.900000] now;
		move torso to z-axis [0.000000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move gun to z-axis [0.000000] now;
		move lfirept to x-axis [0.000000] now;
		move lfirept to y-axis [0.000000] now;
		move rfirept to x-axis [0.000000] now;
		move rfirept to y-axis [0.000000] now;
		turn torso to x-axis <-10.549451> now;
		turn lthigh to x-axis <-13.010989> now;
		turn rthigh to x-axis <13.010989> now;
		turn rleg to x-axis <-50.637363> now;
		turn rfoot to x-axis <56.967033> now;
		turn lleg to x-axis <13.005495> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <-11.604396> now;
		turn lthigh to x-axis <-7.379121> now;
		turn rthigh to x-axis <-4.565934> now;
		turn rleg to x-axis <-52.747253> now;
		turn rfoot to x-axis <36.571429> now;
		turn lleg to x-axis <21.450549> now;
		turn lfoot to x-axis <-3.868132> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.087912> now;
		turn rthigh to x-axis <-7.884615> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn torso to x-axis <-4.923077> now;
		turn lthigh to x-axis <-5.274725> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <-68.219780> now;
		turn rfoot to x-axis <39.032967> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-8.087912> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.550000] now;
		turn torso to x-axis <4.219780> now;
		turn lthigh to x-axis <0.351648> now;
		turn rthigh to x-axis <-22.505495> now;
		turn rleg to x-axis <-38.324176> now;
		turn rfoot to x-axis <61.538462> now;
		turn lleg to x-axis <28.483516> now;
		turn lfoot to x-axis <16.879121> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.750000] now;
		turn torso to x-axis <4.923077> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <6.681319> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.700000] now;
		turn torso to x-axis <5.626374> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <12.659341> now;
		turn rthigh to x-axis <-20.038462> now;
		turn rleg to x-axis <-34.461538> now;
		turn rfoot to x-axis <54.505495> now;
		turn lleg to x-axis <7.379121> now;
		turn lfoot to x-axis <19.335165> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-5.274725> now;
		turn lthigh to x-axis <15.824176> now;
		turn rthigh to x-axis <-17.928571> now;
		turn rleg to x-axis <-27.076923> now;
		turn rfoot to x-axis <45.010989> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.774725> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.950000] now;
		turn torso to x-axis <-10.549451> now;
		turn lthigh to x-axis <8.087912> now;
		turn rthigh to x-axis <-13.708791> now;
		turn rleg to x-axis <13.714286> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.329670> now;
		turn lfoot to x-axis <42.549451> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn torso to x-axis <-11.401099> now;
		turn lthigh to x-axis <-0.346154> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <27.780220> now;
		turn rfoot to x-axis <-11.252747> now;
		turn lleg to x-axis <-62.945055> now;
		turn lfoot to x-axis <67.516484> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn torso to x-axis <-8.087912> now;
		turn lthigh to x-axis <-5.087912> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn torso to x-axis <-4.219780> now;
		turn lthigh to x-axis <-7.736264> now;
		turn rthigh to x-axis <-7.379121> now;
		turn rleg to x-axis <31.296703> now;
		turn rfoot to x-axis <-9.142857> now;
		turn lleg to x-axis <-64.351648> now;
		turn lfoot to x-axis <34.109890> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.550000] now;
		move torso to y-axis [0.750000] now;
		turn torso to x-axis <4.219780> now;
		turn lthigh to x-axis <-21.098901> now;
		turn rthigh to x-axis <-1.752747> now;
		turn rleg to x-axis <28.835165> now;
		turn rfoot to x-axis <24.615385> now;
		turn lleg to x-axis <-36.923077> now;
		turn lfoot to x-axis <57.318681> now;
		sleep 10;
	}
	if( bMoving )
	{
		move torso to y-axis [0.550000] now;
		turn torso to x-axis <5.626374> now;
		sleep 30;
	}
	if( bMoving )
	{
		move torso to y-axis [0.400000] now;
		turn torso to x-axis <6.329670> now;
		sleep 80;
	}
	if( bMoving )
	{
		move torso to y-axis [0.750000] now;
		turn torso to x-axis <4.219780> now;
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		move torso to y-axis [0.900000] now;
		turn torso to x-axis <0.000000> now;
		turn lthigh to x-axis <-15.824176> now;
		turn rthigh to x-axis <10.197802> now;
		turn rleg to x-axis <-12.659341> now;
		turn lleg to x-axis <-29.186813> now;
		turn lfoot to x-axis <45.362637> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn torso to x-axis <-5.274725> now;
	turn lthigh to x-axis <-13.362637> now;
	turn rthigh to x-axis <10.549451> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.703297> now;
	turn lleg to x-axis <-14.769231> now;
	turn lfoot to x-axis <28.131868> now;
	sleep 110;
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [0.950000] now;
		move rleg to z-axis [0.000000] now;
		move rfoot to z-axis [0.000000] now;
		move lleg to z-axis [0.000000] now;
		move lfoot to z-axis [0.000000] now;
		move gun to z-axis [0.000000] now;
		move lfirept to x-axis [0.000000] now;
		move lfirept to y-axis [0.000000] now;
		move rfirept to x-axis [0.000000] now;
		move rfirept to y-axis [0.000000] now;
		turn lthigh to x-axis <-13.010989> now;
		turn rthigh to x-axis <13.010989> now;
		turn rleg to x-axis <-50.637363> now;
		turn rfoot to x-axis <56.967033> now;
		turn lleg to x-axis <13.005495> now;
		turn lfoot to x-axis <0.000000> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-7.379121> now;
		turn rthigh to x-axis <-4.565934> now;
		turn rleg to x-axis <-52.747253> now;
		turn rfoot to x-axis <36.571429> now;
		turn lleg to x-axis <21.450549> now;
		turn lfoot to x-axis <-3.868132> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn rthigh to x-axis <-7.884615> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn lthigh to x-axis <-5.274725> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <-68.219780> now;
		turn rfoot to x-axis <39.032967> now;
		turn lleg to x-axis <28.835165> now;
		turn lfoot to x-axis <-8.087912> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.550000] now;
		turn lthigh to x-axis <0.351648> now;
		turn rthigh to x-axis <-22.505495> now;
		turn rleg to x-axis <-38.324176> now;
		turn rfoot to x-axis <61.538462> now;
		turn lleg to x-axis <28.483516> now;
		turn lfoot to x-axis <16.879121> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn lthigh to x-axis <12.659341> now;
		turn rthigh to x-axis <-20.038462> now;
		turn rleg to x-axis <-34.461538> now;
		turn rfoot to x-axis <54.505495> now;
		turn lleg to x-axis <7.379121> now;
		turn lfoot to x-axis <19.335165> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <15.824176> now;
		turn rthigh to x-axis <-17.928571> now;
		turn rleg to x-axis <-27.076923> now;
		turn rfoot to x-axis <45.010989> now;
		turn lleg to x-axis <-19.692308> now;
		turn lfoot to x-axis <27.774725> now;
		sleep 110;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.950000] now;
		turn lthigh to x-axis <8.087912> now;
		turn rthigh to x-axis <-13.708791> now;
		turn rleg to x-axis <13.714286> now;
		turn rfoot to x-axis <0.000000> now;
		turn lleg to x-axis <-38.329670> now;
		turn lfoot to x-axis <42.549451> now;
		sleep 100;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] now;
		turn lthigh to x-axis <-0.346154> now;
		turn rthigh to x-axis <-11.598901> now;
		turn rleg to x-axis <27.780220> now;
		turn rfoot to x-axis <-11.252747> now;
		turn lleg to x-axis <-62.945055> now;
		turn lfoot to x-axis <67.516484> now;
		sleep 70;
	}
	if( bMoving )
	{
		turn lthigh to x-axis <-5.087912> now;
		sleep 40;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn lthigh to x-axis <-7.736264> now;
		turn rthigh to x-axis <-7.379121> now;
		turn rleg to x-axis <31.296703> now;
		turn rfoot to x-axis <-9.142857> now;
		turn lleg to x-axis <-64.351648> now;
		turn lfoot to x-axis <34.109890> now;
		sleep 130;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.550000] now;
		turn lthigh to x-axis <-21.098901> now;
		turn rthigh to x-axis <-1.752747> now;
		turn rleg to x-axis <28.835165> now;
		turn rfoot to x-axis <24.615385> now;
		turn lleg to x-axis <-36.923077> now;
		turn lfoot to x-axis <57.318681> now;
		sleep 10;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		sleep 80;
	}
	if( bMoving )
	{
		sleep 30;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.650000] now;
		turn lthigh to x-axis <-15.824176> now;
		turn rthigh to x-axis <10.197802> now;
		turn rleg to x-axis <-12.659341> now;
		turn lleg to x-axis <-29.186813> now;
		turn lfoot to x-axis <45.362637> now;
		sleep 130;
	}
	move pelvis to y-axis [0.800000] now;
	turn lthigh to x-axis <-13.362637> now;
	turn rthigh to x-axis <10.549451> now;
	turn rleg to x-axis <-30.593407> now;
	turn rfoot to x-axis <32.703297> now;
	turn lleg to x-axis <-14.769231> now;
	turn lfoot to x-axis <28.131868> now;
	sleep 110;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

MotionControl(moving, aiming, justmoved)
{
	justmoved = TRUE;
	while( TRUE )
	{
		moving = bMoving;
		aiming = bAiming;
		if( moving )
		{
			if( aiming )
			{
				Static_Var_3 = 1;
				call-script walklegs();
			}
			if( !aiming )
			{
				Static_Var_3 = 0;
				call-script walk();
			}
			justmoved = TRUE;
		}
		if( !moving )
		{
			Static_Var_3 = 1;
			if( justmoved )
			{
				move pelvis to y-axis [0.000000] speed [1.000000];
				turn rthigh to x-axis <0.000000> speed <200.043956>;
				turn rleg to x-axis <0.000000> speed <200.043956>;
				turn rfoot to x-axis <0.000000> speed <200.043956>;
				turn lthigh to x-axis <0.000000> speed <200.043956>;
				turn lleg to x-axis <0.000000> speed <200.043956>;
				turn lfoot to x-axis <0.000000> speed <200.043956>;
				if( !aiming )
				{
					turn torso to y-axis <0.000000> speed <90.021978>;
					turn gun to x-axis <0.000000> speed <200.043956>;
				}
				justmoved = FALSE;
			}
			sleep 100;
		}
	}
}

Create()
{
	hide rfirept;
	hide lfirept;
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_3 = 1;
	gun_1 = torso;
	start-script MotionControl();
	start-script SmokeUnit();
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

SweetSpot(piecenum)
{
	piecenum = torso;
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = rfirept;
	}
	if( gun_1 == 1 )
	{
		piecenum = lfirept;
	}
}

RestoreAfterDelay()
{
	sleep 2750;
	turn torso to y-axis <0.000000> speed <90>;
	turn gun to x-axis <0.000000> speed <45>;
	bAiming = FALSE;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_3 )
	{
		sleep 100;
	}
	turn torso to y-axis heading speed <112>;
	turn gun to x-axis <0.000000> - pitch speed <60>;
	wait-for-turn torso around y-axis;
	wait-for-turn gun around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_1 == 0 )
	{
		move rgun to z-axis [-2.000000] speed [60.000000];
		show rfirept;
		sleep 100;
		hide rfirept;
		wait-for-move rgun along z-axis;
		gun_1 = gun;
		move rgun to z-axis [0.000000] speed [4.000000];
		wait-for-move rgun along z-axis;
		return (0);
	}
	if( gun_1 == 1 )
	{
		move lgun to z-axis [-2.000000] speed [60.000000];
		show lfirept;
		sleep 100;
		hide lfirept;
		wait-for-move lgun along z-axis;
		gun_1 = torso;
		move lgun to z-axis [0.000000] speed [4.000000];
		wait-for-move lgun along z-axis;
		return (0);
	}
}

Killed(severity, corpsetype)
{
	hide rfirept;
	hide lfirept;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode ground type BITMAPONLY | BITMAP1;
		explode gun type BITMAPONLY | BITMAP2;
		explode lfirept type BITMAPONLY | BITMAP3;
		explode lfoot type BITMAPONLY | BITMAP4;
		explode lgun type BITMAPONLY | BITMAP5;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode pelvis type BITMAPONLY | BITMAP3;
		explode rfirept type BITMAPONLY | BITMAP3;
		explode rfoot type BITMAPONLY | BITMAP4;
		explode rgun type BITMAPONLY | BITMAP5;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode ground type FALL | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode lfirept type FALL | BITMAP3;
		explode lfoot type FALL | BITMAP4;
		explode lgun type FALL | BITMAP5;
		explode lleg type FALL | BITMAP1;
		explode lthigh type FALL | BITMAP2;
		explode pelvis type FALL | BITMAP3;
		explode rfirept type FALL | BITMAP3;
		explode rfoot type FALL | BITMAP4;
		explode rgun type FALL | BITMAP5;
		explode rleg type FALL | BITMAP1;
		explode rthigh type FALL | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode gun type SHATTER | BITMAP2;
		explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
		explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
		explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode torso type BITMAPONLY | BITMAP5;
		return (0);
	}
	corpsetype = 3;
	explode ground type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode gun type SHATTER | EXPLODE_ON_HIT | BITMAP2;
	explode lfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode lgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode lleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode lthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode pelvis type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfirept type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode rfoot type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP4;
	explode rgun type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP5;
	explode rleg type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode rthigh type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode torso type BITMAPONLY | BITMAP5;
}
