#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

#define SIG_BUILD		4	

piece  nanospray, turret, rfoot, lfoot, pelvis, lflap, rflap, guncover,
       nozzle, arms, nanobody2, ground;

static-var  bMoving, statechg_DesiredState, statechg_StateChanging,
			notBuilding, moveSpeed, currentSpeed;


walk()
{
	if( bMoving )
	{
		move rfoot to y-axis [0.000000] now;
		move rfoot to z-axis [-1.750000] speed [20.873494] *  currentSpeed / 100;
		move lfoot to y-axis [0.000000] now;
		move lfoot to z-axis [1.400000] speed [16.698795] *  currentSpeed / 100;
		turn pelvis to x-axis <2.093407> speed <24.969553> *  currentSpeed / 100;
		turn rfoot to x-axis <-2.093407> speed <24.969553> *  currentSpeed / 100;
		turn lfoot to x-axis <-2.093407> speed <24.969553> *  currentSpeed / 100;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn lfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [0.189990] speed [2.266146] *  currentSpeed / 100;
		move rfoot to z-axis [-1.500000] speed [2.981928] *  currentSpeed / 100;
		move lfoot to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		move lfoot to z-axis [1.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-1.038462> speed <12.386474> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.390110> speed <16.580830> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [0.439990] speed [2.981928] *  currentSpeed / 100;
		move rfoot to z-axis [-1.000000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		move lfoot to z-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <12.583079> *  currentSpeed / 100;
		turn lfoot to x-axis <2.093407> speed <8.388723> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [-0.500000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.700000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to z-axis [0.400000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <-3.159341> speed <12.714153> *  currentSpeed / 100;
		turn rfoot to x-axis <-4.549451> speed <54.264536> *  currentSpeed / 100;
		turn lfoot to x-axis <3.505495> speed <16.842977> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.139990] speed [5.248073] *  currentSpeed / 100;
		move rfoot to y-axis [0.589990] speed [1.789157] *  currentSpeed / 100;
		move rfoot to z-axis [0.000000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-1.139990] speed [5.248073] *  currentSpeed / 100;
		move lfoot to z-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.560440> speed <16.711904> *  currentSpeed / 100;
		turn rfoot to x-axis <-5.615385> speed <12.714153> *  currentSpeed / 100;
		turn lfoot to x-axis <4.560440> speed <12.583079> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.789990] speed [4.174699] *  currentSpeed / 100;
		move rfoot to z-axis [0.500000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.800000] speed [4.055302] *  currentSpeed / 100;
		move lfoot to z-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.203297> speed <4.259898> *  currentSpeed / 100;
		turn rfoot to x-axis <-19.324176> speed <163.514495> *  currentSpeed / 100;
		turn lfoot to x-axis <4.203297> speed <4.259898> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [4.651688] *  currentSpeed / 100;
		move rfoot to y-axis [1.039990] speed [5.367470] *  currentSpeed / 100;
		move rfoot to z-axis [1.300000] speed [9.542169] *  currentSpeed / 100;
		move lfoot to y-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to z-axis [-1.750000] speed [16.102410] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <25.166158> *  currentSpeed / 100;
		turn lfoot to x-axis <2.093407> speed <25.166158> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		move rfoot to y-axis [0.000000] speed [12.404700] *  currentSpeed / 100;
		move rfoot to z-axis [1.600000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <2.093407> speed <49.939107> *  currentSpeed / 100;
		turn rfoot to x-axis <-1.747253> speed <209.652455> *  currentSpeed / 100;
		turn lfoot to x-axis <-2.093407> speed <49.939107> *  currentSpeed / 100;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <34.595609> *  currentSpeed / 100;
		turn lfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to z-axis [1.000000] speed [7.156627] *  currentSpeed / 100;
		move lfoot to y-axis [0.189990] speed [2.266146] *  currentSpeed / 100;
		move lfoot to z-axis [-1.550000] speed [2.385542] *  currentSpeed / 100;
		turn pelvis to x-axis <-1.049451> speed <12.517548> *  currentSpeed / 100;
		turn rfoot to x-axis <1.049451> speed <12.517548> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to z-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.439990] speed [2.981928] *  currentSpeed / 100;
		move lfoot to z-axis [-1.000000] speed [6.560241] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <12.452005> *  currentSpeed / 100;
		turn rfoot to x-axis <2.456044> speed <16.777435> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.689990] speed [3.458917] *  currentSpeed / 100;
		move rfoot to y-axis [-0.700000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [0.400000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.589990] speed [1.789157] *  currentSpeed / 100;
		move lfoot to z-axis [-0.489990] speed [6.083252] *  currentSpeed / 100;
		turn pelvis to x-axis <-3.159341> speed <12.714153> *  currentSpeed / 100;
		turn rfoot to x-axis <3.159341> speed <8.388723> *  currentSpeed / 100;
		turn lfoot to x-axis <-4.549451> speed <54.264536> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.139990] speed [5.367470] *  currentSpeed / 100;
		move rfoot to y-axis [-1.100000] speed [4.771084] *  currentSpeed / 100;
		move rfoot to z-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to y-axis [0.589990] now;
		move lfoot to z-axis [0.000000] speed [5.844459] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.912088> speed <20.906259> *  currentSpeed / 100;
		turn rfoot to x-axis <4.912088> speed <20.906259> *  currentSpeed / 100;
		turn lfoot to x-axis <-5.615385> speed <12.714153> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] speed [4.055302] *  currentSpeed / 100;
		move rfoot to y-axis [-0.800000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to z-axis [0.500000] speed [5.963855] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.203297> speed <8.454254> *  currentSpeed / 100;
		turn rfoot to x-axis <4.203297> speed <8.454254> *  currentSpeed / 100;
		turn lfoot to x-axis <-19.324176> speed <163.514495> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	move pelvis to y-axis [0.400000] speed [4.771084] *  currentSpeed / 100;
	move rfoot to y-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
	move rfoot to z-axis [-1.750000] speed [16.102410] *  currentSpeed / 100;
	move lfoot to y-axis [1.039990] speed [5.367470] *  currentSpeed / 100;
	move lfoot to z-axis [1.300000] speed [9.542169] *  currentSpeed / 100;
	turn pelvis to x-axis <2.093407> speed <75.105265> *  currentSpeed / 100;
	turn rfoot to x-axis <-2.093407> speed <75.105265> *  currentSpeed / 100;
	turn lfoot to x-axis <-19.324176> now;
	sleep 4700 / currentSpeed;
}

walklegs()
{
	if( bMoving )
	{
		move rfoot to y-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		move rfoot to z-axis [-1.750000] now;
		move lfoot to y-axis [0.000000] speed [12.404700] *  currentSpeed / 100;
		move lfoot to z-axis [1.400000] speed [1.192771] *  currentSpeed / 100;
		turn pelvis to x-axis <2.093407> now;
		turn rfoot to x-axis <-2.093407> now;
		turn lfoot to x-axis <-2.093407> speed <205.523630> *  currentSpeed / 100;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn lfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [0.189990] speed [2.266146] *  currentSpeed / 100;
		move rfoot to z-axis [-1.500000] speed [2.981928] *  currentSpeed / 100;
		move lfoot to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		move lfoot to z-axis [1.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-1.038462> speed <12.386474> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> now;
		turn lfoot to x-axis <1.390110> speed <16.580830> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [0.439990] speed [2.981928] *  currentSpeed / 100;
		move rfoot to z-axis [-1.000000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		move lfoot to z-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <12.583079> *  currentSpeed / 100;
		turn lfoot to x-axis <2.093407> speed <8.388723> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [-0.500000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.700000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to z-axis [0.400000] speed [3.578313] *  currentSpeed / 100;
		turn pelvis to x-axis <-3.159341> speed <12.714153> *  currentSpeed / 100;
		turn rfoot to x-axis <-4.549451> speed <54.264536> *  currentSpeed / 100;
		turn lfoot to x-axis <3.505495> speed <16.842977> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.139990] speed [5.248073] *  currentSpeed / 100;
		move rfoot to y-axis [0.589990] speed [1.789157] *  currentSpeed / 100;
		move rfoot to z-axis [0.000000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-1.139990] speed [5.248073] *  currentSpeed / 100;
		move lfoot to z-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.560440> speed <16.711904> *  currentSpeed / 100;
		turn rfoot to x-axis <-5.615385> speed <12.714153> *  currentSpeed / 100;
		turn lfoot to x-axis <4.560440> speed <12.583079> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.789990] speed [4.174699] *  currentSpeed / 100;
		move rfoot to z-axis [0.500000] speed [5.963855] *  currentSpeed / 100;
		move lfoot to y-axis [-0.800000] speed [4.055302] *  currentSpeed / 100;
		move lfoot to z-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.203297> speed <4.259898> *  currentSpeed / 100;
		turn rfoot to x-axis <-19.324176> speed <163.514495> *  currentSpeed / 100;
		turn lfoot to x-axis <4.203297> speed <4.259898> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [4.651688] *  currentSpeed / 100;
		move rfoot to y-axis [1.039990] speed [5.367470] *  currentSpeed / 100;
		move rfoot to z-axis [1.300000] speed [9.542169] *  currentSpeed / 100;
		move lfoot to y-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to z-axis [-1.750000] speed [16.102410] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <25.166158> *  currentSpeed / 100;
		turn lfoot to x-axis <2.093407> speed <25.166158> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		move rfoot to y-axis [0.000000] speed [12.404700] *  currentSpeed / 100;
		move rfoot to z-axis [1.600000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		turn pelvis to x-axis <2.093407> speed <49.939107> *  currentSpeed / 100;
		turn rfoot to x-axis <-1.747253> speed <209.652455> *  currentSpeed / 100;
		turn lfoot to x-axis <-2.093407> speed <49.939107> *  currentSpeed / 100;
		sleep 4000 / currentSpeed;
	}
	if( bMoving )
	{
		turn pelvis to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		turn rfoot to x-axis <0.000000> speed <34.595609> *  currentSpeed / 100;
		turn lfoot to x-axis <0.000000> speed <41.449459> *  currentSpeed / 100;
		sleep 2000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [-0.200000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to z-axis [1.000000] speed [7.156627] *  currentSpeed / 100;
		move lfoot to y-axis [0.189990] speed [2.266146] *  currentSpeed / 100;
		move lfoot to z-axis [-1.550000] speed [2.385542] *  currentSpeed / 100;
		turn pelvis to x-axis <-1.049451> speed <12.517548> *  currentSpeed / 100;
		turn rfoot to x-axis <1.049451> speed <12.517548> *  currentSpeed / 100;
		sleep 6000 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to y-axis [-0.400000] speed [2.385542] *  currentSpeed / 100;
		move rfoot to z-axis [0.700000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.439990] speed [2.981928] *  currentSpeed / 100;
		move lfoot to z-axis [-1.000000] speed [6.560241] *  currentSpeed / 100;
		turn pelvis to x-axis <-2.093407> speed <12.452005> *  currentSpeed / 100;
		turn rfoot to x-axis <2.456044> speed <16.777435> *  currentSpeed / 100;
		sleep 5300 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.689990] speed [3.458917] *  currentSpeed / 100;
		move rfoot to y-axis [-0.700000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [0.400000] speed [3.578313] *  currentSpeed / 100;
		move lfoot to y-axis [0.589990] speed [1.789157] *  currentSpeed / 100;
		move lfoot to z-axis [-0.489990] speed [6.083252] *  currentSpeed / 100;
		turn pelvis to x-axis <-3.159341> speed <12.714153> *  currentSpeed / 100;
		turn rfoot to x-axis <3.159341> speed <8.388723> *  currentSpeed / 100;
		turn lfoot to x-axis <-4.549451> speed <54.264536> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [1.139990] speed [5.367470] *  currentSpeed / 100;
		move rfoot to y-axis [-1.100000] speed [4.771084] *  currentSpeed / 100;
		move rfoot to z-axis [0.000000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to y-axis [0.589990] now;
		move lfoot to z-axis [0.000000] speed [5.844459] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.912088> speed <20.906259> *  currentSpeed / 100;
		turn rfoot to x-axis <4.912088> speed <20.906259> *  currentSpeed / 100;
		turn lfoot to x-axis <-5.615385> speed <12.714153> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.800000] speed [4.055302] *  currentSpeed / 100;
		move rfoot to y-axis [-0.800000] speed [3.578313] *  currentSpeed / 100;
		move rfoot to z-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
		move lfoot to z-axis [0.500000] speed [5.963855] *  currentSpeed / 100;
		turn pelvis to x-axis <-4.203297> speed <8.454254> *  currentSpeed / 100;
		turn rfoot to x-axis <4.203297> speed <8.454254> *  currentSpeed / 100;
		turn lfoot to x-axis <-19.324176> speed <163.514495> *  currentSpeed / 100;
		sleep 4700 / currentSpeed;
	}
	move pelvis to y-axis [0.400000] speed [4.771084] *  currentSpeed / 100;
	move rfoot to y-axis [-0.400000] speed [4.771084] *  currentSpeed / 100;
	move rfoot to z-axis [-1.750000] speed [16.102410] *  currentSpeed / 100;
	move lfoot to y-axis [1.039990] speed [5.367470] *  currentSpeed / 100;
	move lfoot to z-axis [1.300000] speed [9.542169] *  currentSpeed / 100;
	turn pelvis to x-axis <2.093407> speed <75.105265> *  currentSpeed / 100;
	turn rfoot to x-axis <-2.093407> speed <75.105265> *  currentSpeed / 100;
	turn lfoot to x-axis <-19.324176> now;
	sleep 4700 / currentSpeed;
}

MotionControl(Func_Var_1, Func_Var_2)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		Func_Var_2 = notBuilding;
		if( Func_Var_1 )
		{
			if( Func_Var_2 )
			{
				call-script walk();
			}
			else
			{
				call-script walklegs();
			}
		}
		else
		{
			move rfoot to y-axis [0.000000] speed [1.596774];
			move lfoot to y-axis [0.000000] speed [4.151573];
			sleep 200;
		}
	}
}

Go()
{
	turn lflap to z-axis <0.000000> now;
	turn lflap to z-axis <97.016484> speed <350.000000>;
	turn rflap to z-axis <0.000000> now;
	turn rflap to z-axis <-97.016484> speed <350.000000>;
	sleep 300;

	turn guncover to x-axis <126.027473> speed <350.000000>;
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	sleep 300;

	move nozzle to z-axis [0.000000] speed [0.000000];
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	turn arms to x-axis <90.016484> speed <350.000000>;
	turn nanobody2 to x-axis <-90.016484> speed <350.000000>;
	sleep 100;

	move nozzle to z-axis [4.400000] speed [18.000000];
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	turn arms to x-axis <90.016484> speed <0.000000>;
	turn nanobody2 to x-axis <-90.016484> speed <0.000000>;
	sleep 100;
}

Stop()
{
	set INBUILDSTANCE to 0;
	turn turret to y-axis <0.000000> speed <350.000000>;
	wait-for-turn turret around y-axis;

	move nozzle to z-axis [4.400000] now;
	move nozzle to z-axis [-0.200000] speed [18.000000];
	turn guncover to x-axis <126.923077> speed <1513.901762>;
	turn lflap to z-axis <97.923077> now;
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.923077> now;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	turn arms to x-axis <90.016484> now;
	turn arms to x-axis <90.016484> speed <0.000000>;
	turn nanobody2 to x-axis <-90.016484> speed <1073.690592>;
	sleep 50;

	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	turn arms to x-axis <0.000000> speed <350.000000>;
	turn nanobody2 to x-axis <-40.005495> speed <350.000000>;
	sleep 50;

	turn guncover to x-axis <126.027473> speed <0.000000>;
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn nanobody2 to x-axis <0.000000> speed <350.000000>;
	sleep 50;

	turn guncover to x-axis <0.000000> speed <350.000000>;
	turn lflap to z-axis <97.016484> speed <0.000000>;
	turn rflap to z-axis <-97.016484> speed <0.000000>;
	sleep 50;

	turn lflap to z-axis <0.000000> speed <350.000000>;
	turn rflap to z-axis <0.000000> speed <350.000000>;
	sleep 50;
}

RequestState(requestedstate, currentstate)
{
	if( statechg_StateChanging )
	{
		statechg_DesiredState = requestedstate;
		return (0);
	}
	statechg_StateChanging = TRUE;
	currentstate = statechg_DesiredState;
	statechg_DesiredState = requestedstate;
	while( statechg_DesiredState != currentstate )
	{
		if( statechg_DesiredState )
		{
			call-script Stop();
			notBuilding = 1;
			currentstate = 1;
		}
		else
		{
			call-script Go();
			notBuilding = 0;
			currentstate = 0;
		}
	}
	statechg_StateChanging = FALSE;
}

UnitSpeed()
{
	while(TRUE)
	{
		currentSpeed = (get CURRENT_SPEED)*100/moveSpeed;
		if (currentSpeed<20) currentSpeed=20;
		sleep 142;
	}
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 500;
	}
	start-script UnitSpeed();
	start-script MotionControl();
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 258;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 257;
			}
			emit-sfx smoketype from turret;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	bMoving = FALSE;
	notBuilding = 1;
	statechg_DesiredState = TRUE;
	statechg_StateChanging = FALSE;
	moveSpeed = get MAX_SPEED;
	currentSpeed = 100;
	start-script SmokeUnit();
}

Activate()
{
	start-script RequestState(0);
}

Deactivate()
{
	start-script RequestState(1);
}

StartBuilding(heading, pitch)
{
	start-script RequestState(0);
	while( notBuilding ) sleep 100;
	signal SIG_BUILD;
	turn turret to y-axis heading speed <300.000000>;
	wait-for-turn turret around y-axis;
	set INBUILDSTANCE to 1;
}

StopBuilding()
{
	signal SIG_BUILD;	
	set-signal-mask SIG_BUILD;
	sleep 6000;
	set-signal-mask 0;
	signal SIG_BUILD;	
	start-script RequestState(1);
}

StartMoving()
{
	bMoving = TRUE;
}

StopMoving()
{
	bMoving = FALSE;
}

QueryNanoPiece(piecenum)
{
	piecenum = nanospray;
}

/*
TargetHeading(Func_Var_1)
{
	Static_Var_1 = 0 - Func_Var_1;
}
*/

SweetSpot(piecenum)
{
	piecenum = turret;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode arms type BITMAPONLY | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type BITMAPONLY | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type BITMAPONLY | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type BITMAPONLY | BITMAP2;
		explode nozzle type BITMAPONLY | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type BITMAPONLY | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode arms type FALL | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | BITMAP2;
		explode nozzle type FALL | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
		explode ground type BITMAPONLY | BITMAP2;
		explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode lflap type BITMAPONLY | BITMAP4;
		explode lfoot type SHATTER | BITMAP5;
		explode nanobody2 type BITMAPONLY | BITMAP1;
		explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
		explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
		explode pelvis type BITMAPONLY | BITMAP4;
		explode rflap type BITMAPONLY | BITMAP5;
		explode rfoot type SHATTER | BITMAP1;
		explode turret type BITMAPONLY | BITMAP2;
		return (0);
	}
	corpsetype = 3;
	explode arms type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP1;
	explode ground type BITMAPONLY | BITMAP2;
	explode guncover type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode lflap type BITMAPONLY | BITMAP4;
	explode lfoot type SHATTER | EXPLODE_ON_HIT | BITMAP5;
	explode nanobody2 type BITMAPONLY | BITMAP1;
	explode nanospray type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP2;
	explode nozzle type FALL | SMOKE | FIRE | EXPLODE_ON_HIT | BITMAP3;
	explode pelvis type BITMAPONLY | BITMAP4;
	explode rflap type BITMAPONLY | BITMAP5;
	explode rfoot type SHATTER | EXPLODE_ON_HIT | BITMAP1;
	explode turret type BITMAPONLY | BITMAP2;
}
