This is a collection of gadgets to implement various death modes for a mod.

To use it put the modoptions entry into your modoptions.lua (if you don't have 
a modoptions.lua just use this one) and put the other .lua files into your 
LuaRules/Gadgets folder (of course you need a gadgethandler, take it from Fibre
if you need it). I suspect that some gadgets might cause trouble with these and
supposedly units that turn into features can cause problems with dontCount.lua
so be careful and test if any conflicts arise.

It provides the following options:
Kill Everything: Just disables all of the gadgets and lets normal Spring rules apply.
Nothing of value left: If only specially marked (see below) units are left the allyteam
	dies. Uses the doesNotCount.lua
Commander: Team based com ends, if an allyteam has its last com destroyed the whole
	team is eliminated, as long as one player in the team has a com left the whole team
	remains in play. Uses the teamComEnds.lua
Commander Control: In addition to the above a player without a com is unable to give
	orders to his units, all he can do is share them to an ally (sharing to enemies and
	self-d are disabled). An ally can take his units by using the ".luarules take" command.
	It was unfortunately not possible to merge this into the regular .take. Uses
	teamComEnds.lua and comIsControl.lua

If you don't want to have one of the above modes remove its line in the modoptions.lua and


In order to use the "Nothing of value left" mode you need to declare units as unimportant
by giving them the dontcount=1 custom param. You should adjust the modoptions desc for
the mode to describe what units are affected, the default text says mines, defenses and econ
are (IMO a good selection since a team with only those left is helpless anyway). If your
units don't have a customParams section add this into their .fbi:

	[customParams] {
		dontcount=1;
	}

Any unit marked as such will not count for a team to be alive, this can prevent mine hunting
and stuff like that.
