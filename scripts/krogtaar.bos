#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, pelvis, head, torso, rleg, rthigh, lthigh, lleg,
       luparm, ruparm, rarm, larm, rgunflare, lgunflare, rgun, lgun;

static-var  gun_3, bMoving, bAiming, Static_Var_4, restore_delay,
            Static_Var_6, Static_Var_7;

// Signal definitions
#define SIG_MOVE			2
#define SIG_AIM				4
#define SIG_AIM_3			8


walk()
{
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move rleg to y-axis [-5.00000] speed [5.00000];
		turn pelvis to x-axis <4.00000> speed <10.00000>;
		turn torso to y-axis <-5.00000> now;
		turn torso to y-axis <-1.00000> speed <16.00000>;
		turn rthigh to x-axis <-16.00000> speed <2.00000>;
		turn lthigh to x-axis <-53.00549> now;
		turn lthigh to x-axis <-58.00549> speed <54.00000>;
		turn head to x-axis <0.00000> now;
		turn head to x-axis <-8.00000> speed <36.00000>;
		turn lleg to x-axis <60.00549> now;
		turn lleg to x-axis <68.01648> speed <42.00000>;
		turn rleg to x-axis <19.00000> now;
		turn rleg to x-axis <24.00549> speed <62.00000>;
		turn luparm to x-axis <-1.00000> now;
		turn luparm to x-axis <6.00000> speed <35.00000>;
		turn ruparm to x-axis <-14.00000> now;
		turn ruparm to x-axis <-22.00000> speed <38.00000>;
		turn rarm to x-axis <-14.00000> now;
		turn rarm to x-axis <-16.00000> speed <5.00000>;
		turn larm to x-axis <-13.00000> now;
		turn larm to x-axis <-20.00000> speed <41.00000>;
		sleep 212;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move rleg to y-axis [-2.50000] speed [2.50000];
		turn pelvis to x-axis <3.00000> speed <8.00000>;
		turn torso to y-axis <2.00000> speed <15.00000>;
		turn rthigh to x-axis <-14.00000> speed <2.00000>;
		turn lthigh to x-axis <-60.00549> speed <50.00000>;
		turn head to x-axis <-7.00000> speed <3.00000>;
		turn lleg to x-axis <57.00549> speed <38.00000>;
		turn rleg to x-axis <38.00549> speed <70.00000>;
		turn luparm to x-axis <19.00000> speed <57.00000>;
		turn ruparm to x-axis <-12.00000> speed <33.00000>;
		turn rarm to x-axis <-24.00549> speed <32.00000>;
		turn larm to x-axis <-41.00549> speed <82.00000>;
		sleep 228;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [7.50000];
		move rleg to y-axis [-2.50000] speed [7.50000];
		turn pelvis to x-axis <2.00000> speed <8.00000>;
		turn torso to y-axis <4.00000> speed <8.00000>;
		turn rthigh to x-axis <-11.00000> speed <26.00000>;
		turn lthigh to x-axis <-57.00549> speed <66.00000>;
		turn head to x-axis <0.00000> speed <33.00000>;
		turn lleg to x-axis <45.00549> speed <68.00000>;
		turn rleg to x-axis <33.00549> speed <22.00000>;
		turn luparm to x-axis <20.00000> speed <9.00000>;
		turn ruparm to x-axis <-25.00549> speed <58.00000>;
		turn rarm to x-axis <-19.00000> speed <21.00000>;
		turn larm to x-axis <-39.00549> speed <8.00000>;
		sleep 215;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [5.00000];
		move rleg to y-axis [-2.50000] speed [7.50000];
		turn pelvis to x-axis <0.00000> speed <9.00000>;
		turn torso to y-axis <5.00000> speed <9.00000>;
		turn rthigh to x-axis <-9.00000> speed <30.00000>;
		turn lthigh to x-axis <-50.00549> speed <74.00000>;
		turn lleg to x-axis <33.00549> speed <72.00000>;
		turn rleg to x-axis <37.00549> speed <10.00000>;
		turn luparm to x-axis <31.00549> speed <53.00000>;
		turn ruparm to x-axis <-27.00549> speed <13.00000>;
		turn rarm to x-axis <-44.00549> speed <129.00000>;
		turn larm to x-axis <-43.00549> speed <18.00000>;
		sleep 188;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [15.00000];
		move lleg to y-axis [2.50000] speed [15.00000];
		move rleg to y-axis [2.50000] speed [10.00000];
		turn pelvis to x-axis <4.00000> speed <20.00000>;
		turn torso to y-axis <7.00000> speed <8.00000>;
		turn rthigh to x-axis <7.00000> speed <78.00000>;
		turn lthigh to x-axis <-41.00549> speed <70.00000>;
		turn lleg to x-axis <29.00549> speed <40.00000>;
		turn rleg to x-axis <37.00549> speed <4.00000>;
		turn luparm to x-axis <11.00000> speed <111.00000>;
		turn ruparm to x-axis <-18.00000> speed <51.00000>;
		turn rarm to x-axis <-7.00000> speed <198.00000>;
		turn larm to x-axis <-15.00000> speed <147.00000>;
		sleep 186;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-5.00000] speed [32.50000];
		move lleg to y-axis [2.50000] speed [25.00000];
		move rleg to y-axis [0.00000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <34.00000>;
		turn torso to y-axis <7.00000> speed <3.00000>;
		turn rthigh to x-axis <24.00549> speed <70.00000>;
		turn lthigh to x-axis <-32.00549> speed <42.00000>;
		turn head to x-axis <11.00000> speed <90.00000>;
		turn lleg to x-axis <25.00549> speed <68.00000>;
		turn rleg to x-axis <41.00549> speed <70.00000>;
		turn luparm to x-axis <-7.00000> speed <162.00000>;
		turn ruparm to x-axis <1.00000> speed <174.00000>;
		turn rarm to x-axis <-7.00000> speed <0.00000>;
		turn larm to x-axis <8.00000> speed <214.00000>;
		sleep 109;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.00000] speed [67.50000];
		move lleg to y-axis [-2.50000] speed [57.50000];
		turn torso to y-axis <4.00000> speed <30.00000>;
		turn rthigh to x-axis <-13.00000> speed <90.00000>;
		turn lthigh to x-axis <-24.00549> speed <38.00000>;
		turn head to x-axis <6.00000> speed <60.00000>;
		turn lleg to x-axis <22.00000> speed <70.00000>;
		turn rleg to x-axis <53.00549> speed <90.00000>;
		turn luparm to x-axis <-22.00000> speed <210.00000>;
		turn ruparm to x-axis <15.00000> speed <195.00000>;
		turn rarm to x-axis <-22.00000> speed <226.00000>;
		turn larm to x-axis <1.00000> speed <101.00000>;
		sleep 70;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [35.00000];
		move lleg to y-axis [-5.00000] speed [27.50000];
		turn torso to y-axis <2.00000> speed <19.00000>;
		turn rthigh to x-axis <-51.00549> speed <90.00000>;
		turn lthigh to x-axis <-16.00000> speed <72.00000>;
		turn head to x-axis <3.00000> speed <17.00000>;
		turn lleg to x-axis <16.00000> speed <52.00000>;
		turn rleg to x-axis <67.00549> speed <92.00000>;
		turn luparm to x-axis <-24.00549> speed <18.00000>;
		turn ruparm to x-axis <37.00549> speed <144.00000>;
		turn rarm to x-axis <-40.00549> speed <122.00000>;
		turn larm to x-axis <-15.00000> speed <109.00000>;
		sleep 144;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move lleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <5.00000> speed <11.00000>;
		turn torso to y-axis <-1.00000> speed <17.00000>;
		turn rthigh to x-axis <-58.00549> speed <36.00000>;
		turn lthigh to x-axis <-8.00000> speed <48.00000>;
		turn head to x-axis <-4.00000> speed <39.00000>;
		turn lleg to x-axis <26.00549> speed <74.00000>;
		turn rleg to x-axis <65.00549> speed <30.00000>;
		turn luparm to x-axis <-27.00549> speed <16.00000>;
		turn rarm to x-axis <-38.00549> speed <13.00000>;
		turn larm to x-axis <-22.00000> speed <42.00000>;
		sleep 182;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [5.00000];
		move lleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <3.00000> speed <10.00000>;
		turn torso to y-axis <-5.00000> speed <20.00000>;
		turn rthigh to x-axis <-65.00549> speed <70.00000>;
		turn lthigh to x-axis <-3.00000> speed <52.00000>;
		turn head to x-axis <-11.00000> speed <36.00000>;
		turn lleg to x-axis <33.00549> speed <70.00000>;
		turn rleg to x-axis <60.00549> speed <44.00000>;
		turn luparm to x-axis <-32.00549> speed <26.00000>;
		turn rarm to x-axis <-42.00549> speed <23.00000>;
		turn larm to x-axis <-18.00000> speed <23.00000>;
		sleep 195;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [2.50000];
		move lleg to y-axis [-2.50000] speed [5.00000];
		turn pelvis to x-axis <2.00000> speed <8.00000>;
		turn torso to y-axis <-9.00000> speed <20.00000>;
		turn rthigh to x-axis <-52.00549> speed <74.00000>;
		turn lthigh to x-axis <1.00000> speed <78.00000>;
		turn head to x-axis <0.00000> speed <53.00000>;
		turn lleg to x-axis <18.00000> speed <78.00000>;
		turn rleg to x-axis <40.00549> speed <94.00000>;
		turn luparm to x-axis <-32.00549> speed <2.00000>;
		turn ruparm to x-axis <37.00549> speed <5.00000>;
		turn rarm to x-axis <-47.00549> speed <24.00000>;
		turn larm to x-axis <-26.00549> speed <37.00000>;
		sleep 207;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [2.50000];
		move lleg to y-axis [0.00000] speed [5.00000];
		turn pelvis to x-axis <0.00000> speed <9.00000>;
		turn torso to y-axis <-11.00000> speed <15.00000>;
		turn rthigh to x-axis <-39.00549> speed <72.00000>;
		turn lthigh to x-axis <18.00000> speed <94.00000>;
		turn lleg to x-axis <3.00000> speed <84.00000>;
		turn rleg to x-axis <19.00000> speed <94.00000>;
		turn luparm to x-axis <-47.00549> speed <83.00000>;
		turn ruparm to x-axis <36.00549> speed <5.00000>;
		turn rarm to x-axis <-46.00549> speed <3.00000>;
		turn larm to x-axis <-24.00549> speed <7.00000>;
		sleep 189;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [32.50000];
		move rleg to y-axis [2.50000] speed [20.00000];
		turn pelvis to x-axis <3.00000> speed <27.00000>;
		turn torso to y-axis <-12.00000> speed <5.00000>;
		turn rthigh to x-axis <-30.00549> speed <36.00000>;
		turn lthigh to x-axis <29.00549> speed <94.00000>;
		turn lleg to x-axis <15.00000> speed <96.00000>;
		turn rleg to x-axis <22.00000> speed <48.00000>;
		turn luparm to x-axis <-33.00549> speed <114.00000>;
		turn ruparm to x-axis <25.00549> speed <95.00000>;
		turn rarm to x-axis <-13.00000> speed <260.00000>;
		turn larm to x-axis <-4.00000> speed <158.00000>;
		sleep 129;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-5.00000] speed [20.00000];
		move rleg to y-axis [2.50000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <35.00000>;
		turn torso to y-axis <-10.00000> speed <11.00000>;
		turn rthigh to x-axis <-19.00000> speed <66.00000>;
		turn lthigh to x-axis <42.00549> speed <98.00000>;
		turn head to x-axis <11.00000> speed <149.00000>;
		turn lleg to x-axis <26.00549> speed <98.00000>;
		turn rleg to x-axis <24.00549> speed <64.00000>;
		turn luparm to x-axis <-12.00000> speed <204.00000>;
		turn ruparm to x-axis <13.00000> speed <124.00000>;
		turn rarm to x-axis <-1.00000> speed <124.00000>;
		turn larm to x-axis <-2.00000> speed <14.00000>;
		sleep 99;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [57.50000];
		move rleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <5.00000>;
		turn torso to y-axis <-7.00000> speed <46.00000>;
		turn rthigh to x-axis <0.00000> speed <70.00000>;
		turn lthigh to x-axis <-6.00000> speed <98.00000>;
		turn head to x-axis <5.00000> speed <138.00000>;
		turn lleg to x-axis <47.00549> speed <98.00000>;
		turn rleg to x-axis <21.00000> speed <64.00000>;
		turn luparm to x-axis <-11.00000> speed <41.00000>;
		turn ruparm to x-axis <1.00000> speed <181.00000>;
		turn rarm to x-axis <-7.00000> speed <92.00000>;
		turn larm to x-axis <-6.00000> speed <59.00000>;
		sleep 69;
	}
	sleep 149;
	return (0);
}

walklegs()
{
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move rleg to y-axis [-5.00000] speed [5.00000];
		turn pelvis to x-axis <4.00000> speed <10.00000>;
		turn rthigh to x-axis <-16.00000> speed <2.00000>;
		turn lthigh to x-axis <-53.00549> now;
		turn lthigh to x-axis <-58.00549> speed <54.00000>;
		turn lleg to x-axis <60.00549> now;
		turn lleg to x-axis <68.01648> speed <42.00000>;
		turn rleg to x-axis <19.00000> now;
		turn rleg to x-axis <24.00549> speed <62.00000>;
		sleep 212;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move rleg to y-axis [-2.50000] speed [2.50000];
		turn pelvis to x-axis <3.00000> speed <8.00000>;
		turn rthigh to x-axis <-14.00000> speed <2.00000>;
		turn lthigh to x-axis <-60.00549> speed <50.00000>;
		turn lleg to x-axis <57.00549> speed <38.00000>;
		turn rleg to x-axis <38.00549> speed <70.00000>;
		sleep 228;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [7.50000];
		move rleg to y-axis [-2.50000] speed [7.50000];
		turn pelvis to x-axis <2.00000> speed <8.00000>;
		turn rthigh to x-axis <-14.00000> speed <26.00000>;
		turn lthigh to x-axis <-57.00549> speed <66.00000>;
		turn lleg to x-axis <45.00549> speed <68.00000>;
		turn rleg to x-axis <33.00549> speed <22.00000>;
		sleep 215;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [5.00000];
		move rleg to y-axis [-2.50000] speed [7.50000];
		turn pelvis to x-axis <0.00000> speed <9.00000>;
		turn rthigh to x-axis <-11.00000> speed <30.00000>;
		turn lthigh to x-axis <-50.00549> speed <74.00000>;
		turn lleg to x-axis <33.00549> speed <72.00000>;
		turn rleg to x-axis <37.00549> speed <10.00000>;
		sleep 188;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [15.00000];
		move lleg to y-axis [2.50000] speed [15.00000];
		move rleg to y-axis [2.50000] speed [10.00000];
		turn pelvis to x-axis <4.00000> speed <20.00000>;
		turn rthigh to x-axis <7.00000> speed <78.00000>;
		turn lthigh to x-axis <-41.00549> speed <70.00000>;
		turn lleg to x-axis <29.00549> speed <40.00000>;
		turn rleg to x-axis <37.00549> speed <4.00000>;
		sleep 186;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-5.00000] speed [32.50000];
		move lleg to y-axis [2.50000] speed [25.00000];
		move rleg to y-axis [0.00000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <34.00000>;
		turn rthigh to x-axis <24.00549> speed <70.00000>;
		turn lthigh to x-axis <-32.00549> speed <42.00000>;
		turn lleg to x-axis <25.00549> speed <68.00000>;
		turn rleg to x-axis <41.00549> speed <70.00000>;
		sleep 109;
	}
	if( bMoving )
	{
		move pelvis to y-axis [0.00000] speed [67.50000];
		move lleg to y-axis [-2.50000] speed [57.50000];
		turn rthigh to x-axis <-13.00000> speed <90.00000>;
		turn lthigh to x-axis <-24.00549> speed <38.00000>;
		turn lleg to x-axis <22.00000> speed <70.00000>;
		turn rleg to x-axis <53.00549> speed <90.00000>;
		sleep 70;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [35.00000];
		move lleg to y-axis [-5.00000] speed [27.50000];
		turn rthigh to x-axis <-51.00549> speed <90.00000>;
		turn lthigh to x-axis <-16.00000> speed <72.00000>;
		turn lleg to x-axis <16.00000> speed <52.00000>;
		turn lleg to y-axis <0.00000> speed <2.00000>;
		turn rleg to x-axis <67.00549> speed <92.00000>;
		sleep 144;
	}
	if( bMoving )
	{
		move pelvis to y-axis [5.00000] speed [2.50000];
		move lleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <5.00000> speed <11.00000>;
		turn rthigh to x-axis <-58.00549> speed <36.00000>;
		turn lthigh to x-axis <-8.00000> speed <48.00000>;
		turn lleg to x-axis <26.00549> speed <74.00000>;
		turn rleg to x-axis <65.00549> speed <30.00000>;
		sleep 182;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [5.00000];
		move lleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <3.00000> speed <10.00000>;
		turn rthigh to x-axis <-65.00549> speed <70.00000>;
		turn lthigh to x-axis <-3.00000> speed <52.00000>;
		turn lleg to x-axis <33.00549> speed <70.00000>;
		turn rleg to x-axis <60.00549> speed <44.00000>;
		sleep 195;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [2.50000];
		move lleg to y-axis [-2.50000] speed [5.00000];
		turn pelvis to x-axis <2.00000> speed <8.00000>;
		turn rthigh to x-axis <-52.00549> speed <74.00000>;
		turn lthigh to x-axis <1.00000> speed <78.00000>;
		turn lleg to x-axis <18.00000> speed <78.00000>;
		turn rleg to x-axis <40.00549> speed <94.00000>;
		sleep 207;
	}
	if( bMoving )
	{
		move pelvis to y-axis [2.50000] speed [2.50000];
		move lleg to y-axis [0.00000] speed [5.00000];
		turn pelvis to x-axis <0.00000> speed <9.00000>;
		turn rthigh to x-axis <-39.00549> speed <72.00000>;
		turn lthigh to x-axis <18.00000> speed <94.00000>;
		turn lleg to x-axis <3.00000> speed <84.00000>;
		turn rleg to x-axis <19.00000> speed <94.00000>;
		sleep 189;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [32.50000];
		move rleg to y-axis [2.50000] speed [20.00000];
		turn pelvis to x-axis <3.00000> speed <27.00000>;
		turn rthigh to x-axis <-30.00549> speed <36.00000>;
		turn lthigh to x-axis <29.00549> speed <94.00000>;
		turn lleg to x-axis <15.00000> speed <96.00000>;
		turn rleg to x-axis <22.00000> speed <48.00000>;
		sleep 129;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-5.00000] speed [20.00000];
		move rleg to y-axis [2.50000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <35.00000>;
		turn rthigh to x-axis <-19.00000> speed <66.00000>;
		turn lthigh to x-axis <42.00549> speed <98.00000>;
		turn lleg to x-axis <26.00549> speed <98.00000>;
		turn rleg to x-axis <24.00549> speed <64.00000>;
		sleep 99;
	}
	if( bMoving )
	{
		move pelvis to y-axis [-2.50000] speed [57.50000];
		move rleg to y-axis [-2.50000] speed [15.00000];
		turn pelvis to x-axis <7.00000> speed <5.00000>;
		turn rthigh to x-axis <0.00000> speed <70.00000>;
		turn lthigh to x-axis <-6.00000> speed <98.00000>;
		turn lleg to x-axis <47.00549> speed <98.00000>;
		turn rleg to x-axis <21.00000> speed <64.00000>;
		sleep 69;
	}
	sleep 149;
	return (0);
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from torso;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
	return (0);
}

MotionControl(Func_Var_1)
{
	Func_Var_1 = 1;
	while( TRUE )
	{
		if( bMoving )
		{
			if( bAiming )
			{
				Static_Var_4 = 1;
				call-script walklegs();
			}
			if( !bAiming )
			{
				Static_Var_4 = 0;
				call-script walk();
			}
			Func_Var_1 = 1;
		}
		if( !bMoving )
		{
			Static_Var_4 = 1;
			if( Func_Var_1 )
			{
				move pelvis to y-axis [0.00000] speed [125.00000];
				turn pelvis to x-axis <0.00000> speed <50.00000>;
				turn rthigh to x-axis <0.00000> speed <100.00000>;
				turn lthigh to x-axis <0.00000> speed <100.00000>;
				turn lleg to x-axis <0.00000> speed <200.00000>;
				turn rleg to x-axis <0.00000> speed <200.00000>;
				turn rleg to y-axis <0.00000> speed <200.00000>;
				turn lleg to y-axis <0.00000> speed <200.00000>;
				turn luparm to x-axis <0.00000> speed <55.00000>;
				turn ruparm to x-axis <0.00000> speed <55.00000>;
				if( !bAiming )
				{
					move rgun to y-axis [0.00000] speed [37.50000];
					move lgun to y-axis [0.00000] speed [37.50000];
					turn torso to y-axis <0.00000> speed <200.00000>;
					turn rarm to x-axis <0.00000> speed <125.00000>;
					turn larm to x-axis <0.00000> speed <125.00000>;
					turn head to x-axis <0.00000> speed <100.00000>;
				}
				Func_Var_1 = 0;
			}
			sleep 100;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	bAiming = FALSE;
	Static_Var_4 = 1;
	hide rgunflare;
	hide lgunflare;
	gun_3 = pelvis;
	Static_Var_7 = 0;
	restore_delay = 2000;
	start-script MotionControl();
	start-script SmokeUnit();
	return (0);
}

setSFXoccupy(state)
{
	Static_Var_6 = state;
	return (0);
}

SetMaxReloadTime(Func_Var_1)
{
	restore_delay = Func_Var_1;
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	signal SIG_MOVE;
	set-signal-mask SIG_MOVE;
	while( TRUE )
	{
		if( Static_Var_6 == 3 )
		{
			emit-sfx 259 from lgunflare;
			emit-sfx 259 from rgunflare;
			emit-sfx 259 from pelvis;
			Static_Var_7 = 1;
		}
		if( Static_Var_6 == 2 )
		{
			emit-sfx 259 from larm;
			emit-sfx 259 from rarm;
			emit-sfx 3 from lleg;
			emit-sfx 3 from rleg;
			emit-sfx 3 from pelvis;
			Static_Var_7 = 0;
		}
		if( Static_Var_6 == 1 )
		{
			emit-sfx 3 from lthigh;
			emit-sfx 3 from rthigh;
			Static_Var_7 = 0;
		}
		sleep 250;
	}
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	signal SIG_MOVE;
	return (0);
}

RestoreAfterDelay()
{
	sleep restore_delay;
	turn head to y-axis <0.00000> speed <35.00000>;
	move rgun to y-axis [0.00000] speed [37.50000];
	move lgun to y-axis [0.00000] speed [37.50000];
	turn torso to y-axis <0.00000> speed <115.00000>;
	turn rarm to x-axis <0.00000> speed <55.00000>;
	turn larm to x-axis <0.00000> speed <55.00000>;
	turn ruparm to x-axis <0.00000> speed <55.00000>;
	turn luparm to x-axis <0.00000> speed <55.00000>;
	wait-for-turn ruparm around x-axis;
	wait-for-turn luparm around x-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	wait-for-turn torso around y-axis;
	bAiming = FALSE;
	return (0);
}

QueryPrimary(piecenum)
{
	if( gun_3 == 1 )
	{
		piecenum = rgunflare;
	}
	if( gun_3 == 2 )
	{
		piecenum = lgunflare;
	}
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = torso;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	bAiming = TRUE;
	while( !Static_Var_4 )
	{
		sleep 200;
	}
	turn luparm to x-axis <0.00000> speed <150.00000>;
	turn ruparm to x-axis <0.00000> speed <150.00000>;
	turn torso to y-axis heading speed <185.00000>;
	if( Static_Var_7 )
	{
		emit-sfx 259 from luparm;
		emit-sfx 259 from ruparm;
	}
	turn rarm to x-axis <-90.01648> speed <125.00000>;
	turn larm to x-axis <-90.01648> speed <125.00000>;
	move rgun to y-axis [-7.50000] speed [37.50000];
	move lgun to y-axis [-7.50000] speed [37.50000];
	wait-for-turn torso around y-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FirePrimary()
{
	if( gun_3 == 1 )
	{
		turn ruparm to x-axis <-110.01648> speed <200.00000>;
		show rgunflare;
		sleep 150;
		hide rgunflare;
		turn ruparm to x-axis <0.00000> speed <100.00000>;
		gun_3 = head;
		return (0);
	}
	if( gun_3 == 2 )
	{
		turn luparm to x-axis <-110.01648> speed <200.00000>;
		show lgunflare;
		sleep 150;
		hide lgunflare;
		turn luparm to x-axis <0.00000> speed <100.00000>;
		gun_3 = pelvis;
		return (0);
	}
}

AimTertiary(heading, pitch)
{
	signal SIG_AIM_3;
	set-signal-mask SIG_AIM_3;
	if( !Static_Var_7 )
	{
		return (0);
	}
	bAiming = TRUE;
	turn luparm to x-axis <0.00000> speed <150.00000>;
	turn ruparm to x-axis <0.00000> speed <150.00000>;
	turn torso to y-axis heading speed <120.00000>;
	if( Static_Var_7 )
	{
		emit-sfx 259 from luparm;
		emit-sfx 259 from ruparm;
	}
	turn rarm to x-axis <-90.01648> speed <110.00000>;
	turn larm to x-axis <-90.01648> speed <110.00000>;
	wait-for-turn torso around y-axis;
	wait-for-turn rarm around x-axis;
	wait-for-turn larm around x-axis;
	start-script RestoreAfterDelay();
	return (1);
}

FireTertiary()
{
	if( gun_3 == 1 )
	{
		turn ruparm to x-axis <-100.01648> speed <125.00000>;
		emit-sfx 259 from rgunflare;
		sleep 100;
		turn ruparm to x-axis <0.00000> speed <75.00000>;
		gun_3 = head;
		return (0);
	}
	if( gun_3 == 2 )
	{
		turn luparm to x-axis <-100.01648> speed <125.00000>;
		emit-sfx 259 from lgunflare;
		sleep 100;
		turn luparm to x-axis <0.00000> speed <75.00000>;
		gun_3 = pelvis;
		return (0);
	}
}

AimFromTertiary(piecenum)
{
	piecenum = torso;
	return (0);
}

QueryTertiary(piecenum)
{
	if( gun_3 == 1 )
	{
		piecenum = rgunflare;
	}
	if( gun_3 == 2 )
	{
		piecenum = lgunflare;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = torso;
	return (0);
}

Killed(severity, corpsetype)
{
	hide rgunflare;
	hide lgunflare;
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode head type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode larm type BITMAPONLY | BITMAP2;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode luparm type BITMAPONLY | BITMAP1;
		explode rarm type BITMAPONLY | BITMAP2;
		explode rleg type BITMAPONLY | BITMAP1;
		explode rgun type BITMAPONLY | BITMAP2;
		explode lgun type BITMAPONLY | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode ruparm type BITMAPONLY | BITMAP1;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode head type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode luparm type BITMAPONLY | BITMAP1;
		explode rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode rgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode ruparm type BITMAPONLY | BITMAP1;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode head type BITMAPONLY | BITMAP4;
		explode pelvis type BITMAPONLY | BITMAP1;
		explode larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lleg type BITMAPONLY | BITMAP1;
		explode lthigh type BITMAPONLY | BITMAP2;
		explode luparm type BITMAPONLY | BITMAP1;
		explode rarm type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rleg type FALL | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode rthigh type BITMAPONLY | BITMAP2;
		explode rgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode lgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
		explode ruparm type BITMAPONLY | BITMAP1;
		return (corpsetype);
	}
	corpsetype = 3;
	explode head type BITMAPONLY | BITMAP4;
	explode pelvis type BITMAPONLY | BITMAP1;
	explode larm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode lleg type BITMAPONLY | BITMAP1;
	explode lthigh type BITMAPONLY | BITMAP2;
	explode luparm type BITMAPONLY | BITMAP1;
	explode rarm type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode rleg type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode rthigh type BITMAPONLY | BITMAP2;
	explode rgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode lgun type FALL | FIRE | SMOKE | EXPLODE_ON_HIT | BITMAP2;
	explode ruparm type BITMAPONLY | BITMAP1;
	return (corpsetype);
}
