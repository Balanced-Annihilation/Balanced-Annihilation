#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, bubbles, launcher, flare, barrel, coil1, coil2, coil3;

// Signal definitions
#define SIG_AIM				2


default()
{
	if( TRUE )
	{
		move barrel to z-axis [0.000000] now;
		move barrel to z-axis [-3.300000] speed [59.999994];
		move coil1 to z-axis [0.000000] now;
		move coil1 to z-axis [-0.949994] speed [17.272711];
		move coil2 to z-axis [0.000000] now;
		move coil2 to z-axis [-1.850000] speed [33.636359];
		move coil3 to z-axis [0.000000] now;
		move coil3 to z-axis [-2.750000] speed [49.999988];
		sleep 55;
	}
	if( TRUE )
	{
		move barrel to z-axis [0.000000] speed [4.748199];
		move coil1 to z-axis [0.000000] speed [1.366901];
		move coil2 to z-axis [0.000000] speed [2.661865];
		move coil3 to z-axis [0.000000] speed [3.956830];
		sleep 695;
	}
	sleep 10;
}

SmokeUnit(healthpercent, sleeptime, smoketype)
{
	while( get BUILD_PERCENT_LEFT )
	{
		sleep 400;
	}
	while( TRUE )
	{
		healthpercent = get HEALTH;
		if( healthpercent < 66 )
		{
			smoketype = 256 | 2;
			if( Rand( 1, 66 ) < healthpercent )
			{
				smoketype = 256 | 1;
			}
			emit-sfx smoketype from base;
		}
		sleeptime = healthpercent * 50;
		if( sleeptime < 200 )
		{
			sleeptime = 200;
		}
		sleep sleeptime;
	}
}

Create()
{
	start-script SmokeUnit();
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn launcher to y-axis heading speed <80.016484>;
	wait-for-turn launcher around y-axis;
	return (1);
}

FirePrimary()
{
	start-script default();
}

AimFromPrimary(piecenum)
{
	piecenum = bubbles;
}

QueryPrimary(piecenum)
{
	piecenum = flare;
}

SweetSpot(piecenum)
{
	piecenum = base;
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode base type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD;
		explode bubbles type NOHEATCLOUD;
		explode coil1 type NOHEATCLOUD;
		explode coil2 type NOHEATCLOUD;
		explode coil3 type NOHEATCLOUD;
		explode flare type NOHEATCLOUD;
		explode launcher type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode base type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD | SHATTER;
		explode bubbles type NOHEATCLOUD | FALL;
		explode coil1 type NOHEATCLOUD | FALL;
		explode coil2 type NOHEATCLOUD | FALL;
		explode coil3 type NOHEATCLOUD | FALL;
		explode flare type NOHEATCLOUD | FALL;
		explode launcher type NOHEATCLOUD;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode base type NOHEATCLOUD;
		explode barrel type NOHEATCLOUD | SHATTER;
		explode bubbles type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
		explode coil1 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
		explode coil2 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
		explode coil3 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
		explode flare type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
		explode launcher type NOHEATCLOUD;
		return (corpsetype);
	}
	corpsetype = 3;
	explode base type NOHEATCLOUD;
	explode barrel type NOHEATCLOUD | SHATTER | EXPLODE_ON_HIT;
	explode bubbles type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
	explode coil1 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
	explode coil2 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
	explode coil3 type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
	explode flare type NOHEATCLOUD | FALL | FIRE | SMOKE | EXPLODE_ON_HIT;
	explode launcher type NOHEATCLOUD;
	return (corpsetype);
}
