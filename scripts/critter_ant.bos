#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, L6, L5, L4, L3, L2, L1, J2,
       spot1, spot2, J1;

static-var  bMoving, gun_1, Static_Var_3;

// Signal definitions
#define SIG_AIM				2


AmphSpeed()
{
	Static_Var_3 = get MAX_SPEED;
	while( TRUE )
	{
		if( get IN_WATER )
		{
			set MAX_SPEED to Static_Var_3 * 2 / 3;
		}
		else
		{
			set MAX_SPEED to Static_Var_3;
		}
		sleep 30;
	}
	return (0);
}

AmphWalk()
{
	while( TRUE )
	{
		if( get IN_WATER )
		{
			move base to y-axis [-17.50000] speed [2.50000];
			set UPRIGHT to 1;
		}
		else
		{
			move base to y-axis [0.00000] speed [12.50000];
			set UPRIGHT to 0;
		}
		sleep 200;
	}
	return (0);
}

walk2()
{
	while( bMoving )
	{
		if( bMoving )
		{
			turn L6 to y-axis <43.00549> now;
			turn L6 to y-axis <0.00000> speed <148.00000>;
			turn L6 to z-axis <0.00000> now;
			turn L6 to z-axis <0.00000> speed <3.00000>;
			turn L5 to z-axis <0.00000> now;
			turn L5 to z-axis <31.00549> speed <155.00000>;
			turn L4 to y-axis <34.00549> now;
			turn L4 to y-axis <34.00549> speed <3.00000>;
			turn L4 to z-axis <31.00549> now;
			turn L4 to z-axis <0.00000> speed <155.00000>;
			turn L3 to y-axis <-40.00549> now;
			turn L3 to y-axis <-40.00549> speed <0.00000>;
			turn L3 to z-axis <-31.00549> now;
			turn L3 to z-axis <0.00000> speed <152.00000>;
			turn L2 to y-axis <-37.00549> now;
			turn L2 to y-axis <0.00000> speed <185.00000>;
			turn L2 to z-axis <0.00000> now;
			turn L2 to z-axis <0.00000> speed <0.00000>;
			turn L1 to y-axis <0.00000> now;
			turn L1 to y-axis <-30.00549> speed <152.00000>;
			turn L1 to z-axis <-45.00549> now;
			turn J2 to z-axis <5.00000> speed <50.00000>;
			turn J2 to y-axis <5.00000> speed <50.00000>;
			turn J2 to x-axis <5.00000> speed <50.00000>;
			turn J1 to z-axis <-5.00000> speed <50.00000>;
			turn J1 to y-axis <-5.00000> speed <50.00000>;
			turn J1 to x-axis <-5.00000> speed <50.00000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn L6 to z-axis <31.00549> speed <158.00000>;
			turn L5 to y-axis <34.00549> speed <163.00000>;
			turn L5 to z-axis <31.00549> speed <0.00000>;
			turn L4 to y-axis <0.00000> speed <160.00000>;
			turn L4 to z-axis <0.00000> speed <3.00000>;
			turn L3 to y-axis <0.00000> speed <200.00000>;
			turn L2 to z-axis <-31.00549> speed <155.00000>;
			turn L1 to z-axis <2.00000> speed <237.00000>;
			turn J2 to z-axis <-5.00000> speed <50.00000>;
			turn J2 to y-axis <-5.00000> speed <50.00000>;
			turn J2 to x-axis <-5.00000> speed <50.00000>;
			turn J1 to z-axis <5.00000> speed <50.00000>;
			turn J1 to y-axis <5.00000> speed <50.00000>;
			turn J1 to x-axis <5.00000> speed <50.00000>;
			sleep 200;
		}
		if( bMoving )
		{
			turn L6 to y-axis <55.00549> speed <269.00000>;
			turn L6 to z-axis <31.00549> speed <3.00000>;
			turn L5 to y-axis <34.00549> speed <0.00000>;
			turn L5 to z-axis <0.00000> speed <152.00000>;
			turn L4 to z-axis <31.00549> speed <158.00000>;
			turn L3 to y-axis <0.00000> speed <3.00000>;
			turn L3 to z-axis <-31.00549> speed <152.00000>;
			turn L2 to y-axis <-31.00549> speed <158.00000>;
			turn L2 to z-axis <-31.00549> speed <0.00000>;
			turn L1 to y-axis <3.00000> speed <167.00000>;
			turn J2 to z-axis <5.00000> speed <50.00000>;
			turn J2 to y-axis <5.00000> speed <50.00000>;
			turn J2 to x-axis <5.00000> speed <50.00000>;
			turn J1 to z-axis <-5.00000> speed <50.00000>;
			turn J1 to y-axis <-5.00000> speed <50.00000>;
			turn J1 to x-axis <-5.00000> speed <50.00000>;
			sleep 200;
		}
		turn L6 to y-axis <43.00549> speed <80.00000>;
		turn L6 to z-axis <0.00000> speed <162.00000>;
		turn L5 to y-axis <0.00000> speed <163.00000>;
		turn L5 to z-axis <0.00000> speed <3.00000>;
		turn L4 to y-axis <34.00549> speed <163.00000>;
		turn L4 to z-axis <31.00549> speed <0.00000>;
		turn L3 to y-axis <-40.00549> speed <197.00000>;
		turn L3 to z-axis <-31.00549> speed <0.00000>;
		turn L2 to y-axis <-37.00549> speed <27.00000>;
		turn L2 to z-axis <0.00000> speed <155.00000>;
		turn L1 to y-axis <0.00000> speed <15.00000>;
		turn L1 to z-axis <-45.00549> speed <237.00000>;
		turn J2 to z-axis <-5.00000> speed <50.00000>;
		turn J2 to y-axis <-5.00000> speed <50.00000>;
		turn J2 to x-axis <-5.00000> speed <50.00000>;
		turn J1 to z-axis <5.00000> speed <50.00000>;
		turn J1 to y-axis <5.00000> speed <50.00000>;
		turn J1 to x-axis <5.00000> speed <50.00000>;
		sleep 200;
	}
	return (0);
}

MotionControl(Func_Var_1)
{
	while( TRUE )
	{
		Func_Var_1 = bMoving;
		if( Func_Var_1 )
		{
			call-script walk2();
		}
		if( !Func_Var_1 )
		{
			sleep 100;
			turn L6 to y-axis <0.00000> speed <100.00000>;
			turn L6 to z-axis <0.00000> speed <100.00000>;
			turn L5 to y-axis <0.00000> speed <100.00000>;
			turn L5 to z-axis <0.00000> speed <100.00000>;
			turn L4 to y-axis <0.00000> speed <100.00000>;
			turn L4 to z-axis <0.00000> speed <100.00000>;
			turn L3 to y-axis <0.00000> speed <100.00000>;
			turn L3 to z-axis <0.00000> speed <100.00000>;
			turn L2 to y-axis <0.00000> speed <100.00000>;
			turn L2 to z-axis <0.00000> speed <100.00000>;
			turn L1 to y-axis <0.00000> speed <100.00000>;
			turn L1 to z-axis <0.00000> speed <100.00000>;
			turn J2 to x-axis <0.00000> speed <200.00000>;
			turn J2 to z-axis <0.00000> speed <200.00000>;
			turn J2 to y-axis <0.00000> speed <200.00000>;
			turn J1 to z-axis <0.00000> speed <200.00000>;
			turn J1 to y-axis <0.00000> speed <200.00000>;
			turn J1 to x-axis <0.00000> speed <200.00000>;
		}
	}
	return (0);
}

Create()
{
	bMoving = FALSE;
	gun_1 = base;
	start-script MotionControl();
	start-script AmphWalk();
	start-script AmphSpeed();
	return (0);
}

StartMoving()
{
	bMoving = TRUE;
	return (0);
}

StopMoving()
{
	bMoving = FALSE;
	return (0);
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	return (1);
}

FirePrimary()
{
	move base to z-axis [5.00000] speed [50.00000];
	if( gun_1 == 0 )
	{
		turn J2 to x-axis <70.01648> speed <900.00000>;
		turn J2 to z-axis <-15.00000> speed <800.00000>;
		turn J2 to y-axis <30.00549> speed <500.00000>;
		sleep 175;
		turn J2 to x-axis <0.00000> speed <900.00000>;
		turn J2 to z-axis <0.00000> speed <800.00000>;
		turn J2 to y-axis <0.00000> speed <500.00000>;
	}
	if( gun_1 == 1 )
	{
		turn J1 to x-axis <70.01648> speed <900.00000>;
		turn J1 to z-axis <15.00000> speed <800.00000>;
		turn J1 to y-axis <-30.00549> speed <500.00000>;
		sleep 175;
		turn J1 to x-axis <0.00000> speed <900.00000>;
		turn J1 to z-axis <0.00000> speed <800.00000>;
		turn J1 to y-axis <0.00000> speed <500.00000>;
	}
	move base to z-axis [0.00000] speed [25.00000];
	gun_1 = !gun_1;
	return (0);
}

AimFromPrimary(piecenum)
{
	piecenum = base;
	return (0);
}

QueryPrimary(piecenum)
{
	if( gun_1 == 0 )
	{
		piecenum = spot2;
	}
	if( gun_1 == 1 )
	{
		piecenum = spot1;
	}
	return (0);
}

SweetSpot(piecenum)
{
	piecenum = base;
	return (0);
}

Killed(severity, corpsetype)
{
	if( severity <= 25 )
	{
		corpsetype = 1;
		explode J2 type SHATTER;
		explode J1 type SHATTER;
		explode L6 type FALL;
		return (corpsetype);
	}
	if( severity <= 50 )
	{
		corpsetype = 2;
		explode J2 type FALL;
		explode J1 type FALL;
		explode base type SHATTER;
		explode spot2 type SHATTER;
		explode L6 type SHATTER;
		explode L2 type FALL;
		return (corpsetype);
	}
	if( severity <= 99 )
	{
		corpsetype = 3;
		explode J2 type FALL;
		explode J1 type FALL;
		explode base type SHATTER;
		explode spot2 type FALL;
		explode spot1 type FALL;
		explode L6 type FALL;
		explode L5 type FALL;
		explode L4 type FALL;
		explode L3 type FALL;
		explode L2 type SHATTER;
		explode L1 type SHATTER;
		return (corpsetype);
	}
	corpsetype = 3;
	explode J2 type FALL;
	explode J1 type FALL;
	explode base type SHATTER;
	explode spot2 type SHATTER;
	explode spot1 type SHATTER;
	explode L6 type FALL;
	explode L5 type SHATTER;
	explode L4 type SHATTER;
	explode L3 type FALL;
	explode L2 type FALL;
	explode L1 type SHATTER;
	return (corpsetype);
}
