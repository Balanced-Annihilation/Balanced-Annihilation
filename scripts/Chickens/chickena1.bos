piece base,body,head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,lforearml,lbladel,rforearml,rbladel,lforearmu,lbladeu,rforearmu,rbladeu,aimy1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4

#include "sfxtype.h"
#include "exptype.h"

static-var gun_1,maxSpeed, animFramesPerKeyframe, bMoving, animSpeed, isDying,aaheading, aapitch;

// For N:\animations\Chickens\chicken_walk_remaster_v2.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 5))
#define MOVESCALE 63 //Higher values are bigger, 100 is default
#define MOVESPEED 6
#define animAmplitude 45
#define LUHAND lforearmu  //define these as the left and right head thingies
#define RUHAND rforearmu  
#define LLHAND lforearml  //define these as the left and right head thingies
#define RLHAND rforearml  
#define SIG_WALK 64 //these defines are needed before includes!
#include "chicken_walk_2legged_v2.h"

#define IDLEMOVESCALE 63
#define IDLEAMPLITUDE 100
#define IDLESPEED 14
#include "chicken_idle_2legged_v2.h"

#define DEATHSCALE 63 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 12
#include "chicken_death_2legged_v2.h"
//use call-script DeathAnim(); from Killed()

#define BASEPIECE base //needed for HitByWeapon
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 200
#include "chicken_hitbyweapon.h"

#include "chicken_death_2legged_ptaq.h"

#include "chicken_killed_2legged.h"

#include "chicken_create_move.h"

AimFromPrimary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }
	
AimFromSecondary(piecenum)
	{	piecenum=head;	}

QuerySecondary(piecenum)
	{	piecenum=head; }

AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;	
	
	if (heading > <60> ) heading = <60>;
	if (heading < <-60> ) heading = <-60>;
	if (pitch > <60> ) pitch = <60>;
	if (pitch < <-60> ) pitch = <-60>;
	turn aimy1 to y-axis heading speed <250.000000>;
	turn aimy1 to x-axis <0.000000> - pitch speed <200.000000>;
		
	//wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
AimSecondary(heading,pitch)
	{
	aapitch = pitch;
	aaheading = heading;
	return(TRUE);
	}
	
Shot1()
	{
	++gun_1;
	if (gun_1 > 4)
		{
		gun_1 = 1;
		}
	if (gun_1 == 1)
		{
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		wait-for-turn lbladeu around y-axis;
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 2)
		{
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;
		wait-for-turn lbladel around y-axis;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		}
	if (gun_1 == 3)
		{
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		wait-for-turn rbladeu around y-axis;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		}
	if (gun_1 == 4)
		{
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		wait-for-turn rbladel around y-axis;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		}
	}

Shot2()
	{   
	    turn aimy1 to x-axis 0 -aapitch speed <400>;
        turn aimy1 to y-axis aaheading speed <300>;
	    wait-for-turn aimy1 around x-axis;
		turn lforearmu to y-axis <-140> speed <600>;
		turn lbladeu to y-axis <140> speed <600>;
		turn lforearml to y-axis <-140> speed <600>;
		turn lbladel to y-axis <140> speed <600>;	
		turn rforearmu to y-axis <140> speed <600>;
		turn rbladeu to y-axis <-140> speed <600>;
		turn rforearml to y-axis <140> speed <600>;
		turn rbladel to y-axis <-140> speed <600>;
		emit-sfx 1024+3 from lforearmu;
		emit-sfx 1024+3 from lforearml;
		emit-sfx 1024+3 from rforearmu;
		emit-sfx 1024+3 from rforearml;
		wait-for-turn lbladeu around y-axis;
		wait-for-turn lbladel around y-axis;
		wait-for-turn rbladeu around y-axis;
		wait-for-turn rbladel around y-axis;				
		turn lforearmu to y-axis <0> speed <120>;
		turn lbladeu to y-axis <0> speed <120>;
		turn lforearml to y-axis <0> speed <120>;
		turn lbladel to y-axis <0> speed <120>;
		turn rforearmu to y-axis <0> speed <120>;
		turn rbladeu to y-axis <0> speed <120>;
		turn rforearml to y-axis <0> speed <120>;
		turn rbladel to y-axis <0> speed <120>;
		turn aimy1 to y-axis 0 speed <120>;
  	    turn aimy1 to x-axis 0 speed <120>; 
    }
    



