#define TA			// This is a TA script

#include "sfxtype.h"
#include "exptype.h"

piece  base, body, head, tail, lthigh, lknee, lshin, lfoot, rthigh,
       rknee, rshin, rfoot, rsack, lsack, aimy1;


// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var bMoving,maxSpeed, animFramesPerKeyframe, animSpeed,gun_1,isDying;

// Signal definitions
#define SIG_AIM				2

// For N:\animations\chicken_2legged_fast_anim_walk.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8))
#define MOVESCALE 150 //How much extra body sway the chicken should have. Scale this with size of chicken
#define MOVESPEED  9  //How many frames per animation cycle, valid 2-10
#define animAmplitude 45 //How big steps the chicken should take, valid 20-200
#define LUHAND lsack  //define these as the left and right head thingies
#define RUHAND rsack  
#define LLHAND lsack  //define these as the left and right head thingies
#define RLHAND rsack  
#define SIG_WALK 64 //these defines are needed before includes!
#include "chicken_walk_2legged_v2.h"

#define IDLEMOVESCALE 150
#define IDLEAMPLITUDE 100
#define IDLESPEED 33
#include "chicken_idle_2legged_v2.h"

#define DEATHSCALE 150 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 12
#include "chicken_death_2legged_v2.h"
//use call-script DeathAnim(); from Killed()

#define BASEPIECE base //needed for HitByWeapon
#define HITSPEED <25.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 10
#define MAXTILT 200
#include "chicken_hitbyweapon.h"

#include "chicken_death_2legged_ptaq.h"

#include "chicken_killed_2legged.h"

#include "chicken_create_move.h"

lua_FlameShot(weapon) //Distortion and lups flame effect
{
  return 0;
}

AimFromPrimary(piecenum)
{
	piecenum = head;
}

QueryPrimary(piecenum)
{
	piecenum = head;
}

AimPrimary(heading, pitch)
{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	if (pitch > <60>) pitch = <60>;
	if (pitch < <-60>) pitch = <-60>;
	
	if (heading > <60>) heading = <60>;
	if (heading < <-60>) heading = <-60>;
	turn aimy1 to y-axis heading speed <250.000000>;
	turn aimy1 to x-axis <0.000000> - pitch speed <200.000000>;
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	return (1);
}

Shot1()
{
	turn lsack to y-axis <30.000000> speed <200.000000>;
	turn rsack to y-axis <-30.000000> speed <200.000000>;
	move rsack to x-axis [-1.000000] speed [9.000000];
	move lsack to x-axis [1.000000] speed [9.000000];
	wait-for-turn lsack around y-axis;
	set CHANGE_TARGET to 1;
	turn lsack to y-axis <0.000000> speed <20.000000>;
	turn rsack to y-axis <0.000000> speed <20.000000>;
	move rsack to x-axis [0.000000] speed [0.300000];
	move lsack to x-axis [0.000000] speed [0.300000];
}

