piece base, body, head,tail,lthigh,lknee,lshin,lfoot,rthigh,rknee,rshin,rfoot,rsack,lsack,aimy1;

static-var aMoving, bMoving,maxSpeed, animFramesPerKeyframe, animSpeed, isDying, gun_1;

// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"


// For N:\animations\chicken_2legged_fast_anim_walk.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 2, 8))
#define MOVESCALE 55 //How much extra body sway the chicken should have. Scale this with size of chicken
#define MOVESPEED  5  //How many frames per animation cycle, valid 2-10
#define animAmplitude 53 //How big steps the chicken should take, valid 20-200
#define LUHAND lsack  //define these as the left and right head thingies
#define RUHAND rsack  
#define LLHAND lsack  //define these as the left and right head thingies
#define RLHAND rsack  
#define SIG_WALK 64 //these defines are needed before includes!
#include "chicken_walk_2legged_v2.h"

#define IDLEMOVESCALE 55
#define IDLEAMPLITUDE 100
#define IDLESPEED 14
#include "chicken_idle_2legged_v2.h"

#define DEATHSCALE 55 //Higher values are bigger, 100 is default
#define DEATHAMPLIDUTE 100 //Higher values are bigger, 100 is default
#define DEATHSPEED 12
#include "chicken_death_2legged_v2.h"
//use call-script DeathAnim(); from Killed()

#define BASEPIECE base //needed for HitByWeapon
#define HITSPEED <55.0>
//how 'heavy' the unit is, on a scale of 1-10
#define UNITSIZE 2
#define MAXTILT 200
#include "chicken_hitbyweapon.h"

#include "chicken_death_2legged_ptaq.h"

#include "chicken_killed_2legged.h"

#include "chicken_create_move.h"



lua_FlameShot(weapon) //Distortion and lups flame effect
{
  return 0;
}

// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes

AimFromPrimary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }


AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	
	if (heading > <60>) heading = <60>;
	if (heading < <-60>) heading = <-60>;
	turn aimy1 to y-axis heading speed <250>;
	turn aimy1 to x-axis 0 -pitch speed <200>;
		
	wait-for-turn aimy1 around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
Shot1()
	{
	turn lsack to y-axis <30> speed <200>;
	turn rsack to y-axis <-30> speed <200>;
	move rsack to x-axis [-1] speed [9];
	move lsack to x-axis [1] speed [9];;
	wait-for-turn lsack around y-axis;
	set CHANGE_TARGET to 1;
	turn lsack to y-axis <0> speed <20>;
	turn rsack to y-axis <0> speed <20>;
	move rsack to x-axis [0] speed [0.3];
	move lsack to x-axis [0] speed [0.3];
	}
