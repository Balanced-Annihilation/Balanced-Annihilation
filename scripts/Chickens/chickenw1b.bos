piece base, body, head,tail,lblade,mblade,rblade,rsack,lsack,rowing,lowing, riwing, liwing;


// Signal definitions
#define SIG_AIM				2
#define SIG_AIM_2			4
#define SIG_MOVE			16

#include "sfxtype.h"
#include "exptype.h"


// For N:\animations\Chickens\chicken_flight_2seg_anim_v1.blend Created by https://github.com/Beherith/Skeletor_S3O V((0, 3, 3))
#define MOVESCALE 200
#define MOVESPEED 3
// this animation uses the static-var animFramesPerKeyframe which contains how many frames each keyframe takes
static-var  maxSpeed, animFramesPerKeyframe, bMoving, deltaSpeed;
#define SIG_WALK 1

#include "chicken_fly.h"
// REMEMBER TO animspeed = 3 in Create() !!
static-var nowSpeed, prevSpeed;
UnitSpeed(){
	maxSpeed = get MAX_SPEED; // this returns cob units per frame i think
	animFramesPerKeyframe = MOVESPEED; //we need to calc the frames per keyframe value, from the known animtime
	maxSpeed = maxSpeed + (maxSpeed /(2*animFramesPerKeyframe)); // add fudge
	while(TRUE){
		nowSpeed = (get CURRENT_SPEED);
		deltaSpeed = nowSpeed - prevSpeed;
		prevSpeed = nowSpeed;
		//animSpeed = nowSpeed;
		//if (animSpeed<1) animSpeed=1;
		//animSpeed = (maxSpeed * 3) / animSpeed; 
		//if (animSpeed<1) animSpeed=1;
		//if (animspeed>6) animSpeed = 6;
		deltaSpeed = deltaSpeed /1000;
		animSpeed = MOVESPEED;
		if (deltaSpeed > 10) animspeed = MOVESPEED -1;
		if (deltaSpeed < -10) animspeed = MOVESPEED +1;
		 
		
		//get PRINT(deltaSpeed/1000, nowSpeed/1000, animSpeed,GET(GAME_FRAME)); //how to print debug info from bos
		sleep 198;
	}
	
	//animSpeed = 3;
}
StartMoving(){
	signal SIG_WALK;
	bMoving=TRUE;
	start-script Walk();
}
StopMoving(){
	signal SIG_WALK;
	bMoving=FALSE;
	call-script StopWalking();
}
/*

fly()
{
	if (bMoving)
		{
			turn lwing to z-axis <-40> speed<120>;
			turn rwing to z-axis <40> speed<120>;
			wait-for-turn lwing around z-axis;
			turn lwing to z-axis <40> speed<240>;
			turn rwing to z-axis <-40> speed<240>;
			wait-for-turn lwing around z-axis;
			start-script fly();
		}
}

stopfly ()
{	
	turn lwing		to z-axis <0> 		speed <200>;
	turn rwing		to z-axis <0> 		speed <200>;
}*/


Go()
{
	call-script Walk();
}

Stop()
{
	call-script StopWalking();
}


Create()
{
	nowSpeed = 0;
	prevSpeed = 0;
	animSpeed = 3;
	deltaSpeed = 0;
	animAmplitude = 100;
	emit-sfx 1024+2 from body;
	start-script UnitSpeed();
}

AimFromPrimary(piecenum)
	{	piecenum=head;	}

QueryPrimary(piecenum)
	{	piecenum=head; }

RestoreAfterDelay()
	{
	sleep 500;
	turn head to x-axis <0> speed <200>;
	}

AimPrimary(heading,pitch)
	{
	signal SIG_AIM;
	set-signal-mask SIG_AIM;
	turn head to x-axis 0 -pitch speed <200>;
	wait-for-turn head around y-axis;
	start-script RestoreAfterDelay();
	
	return(TRUE);
	}
	
Shot1()
	{
	turn lsack to y-axis <40> speed [1];
	turn rsack to y-axis <-40> speed [1];
	move rsack to x-axis [-1] speed [1];
	move lsack to x-axis [1] speed [1];
	move mblade to z-axis [-20] now;
	wait-for-turn lsack around y-axis;
	turn lsack to y-axis <0> speed [0.3];
	turn rsack to y-axis <0> speed [0.3];
	move rsack to x-axis [0] speed [0.3];
	move lsack to x-axis [0] speed [0.3];
	move mblade to z-axis <0> speed [20];
	}

SweetSpot(piecenum)
	{	piecenum=body;	}	
	

	
HitByWeaponId()
	{
	return 100;
	}


#include "chicken_killed_flying.h"